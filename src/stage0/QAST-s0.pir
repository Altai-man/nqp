.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_144_1361964166.213") :anon :lex
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5581 = 'cuid_143_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_145_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_146_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_152_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_157_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_160_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_169_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_176_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_178_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_180_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_182_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_184_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_186_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_188_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_189_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_196_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_197_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_202_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_204_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_206_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_208_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_212_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_214_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_217_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_220_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_221_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_222_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_223_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_224_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_225_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_226_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_227_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_228_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_229_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_230_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_231_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_233_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_241_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_242_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_243_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_244_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_245_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_246_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_248_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_250_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_251_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_252_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_253_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_254_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_255_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_256_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_257_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_258_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_259_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_260_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_261_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_262_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_263_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_264_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_265_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_266_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_267_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_268_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_269_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_270_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_271_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_272_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_273_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_274_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_275_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_276_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_277_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_278_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_279_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_280_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_281_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_282_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_283_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_284_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_285_1361964166.213' 
    capture_lex $P5581 
    .const 'Sub' $P5581 = 'cuid_287_1361964166.213' 
    capture_lex $P5581 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "&handle_arg", $P104 
    .lex "%const_map", $P105 
    .lex "$exc_exclude", $P106 
    .lex "$exc_include", $P107 
    .lex "%handler_names", $P108 
    .lex "%control_map", $P109 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    .const 'Sub' $P5001 = 'cuid_143_1361964166.213' 
    capture_lex $P5001
    set $P104, $P5001
    new $P5002, 'Hash'
    set $P105, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5004
    new $P5005, 'Hash'
    set $P108, $P5005
    new $P5006, 'Hash'
    set $P109, $P5006
    find_dynamic_lex $P5007, "$*CTXSAVE"
    set ctxsave, $P5007
    isnull $I5001, ctxsave
    if $I5001 goto unless15_end22 
    can $I5002, ctxsave, "ctxsave"
    box $P5010, $I5002
    set $P5009, $P5010
    unless $I5002 goto if16_end24 
    $P5008 = ctxsave."ctxsave"()
    set $P5009, $P5008
  if16_end24:
  unless15_end22:
.annotate 'line', 1
    .const 'Sub' $P5011 = 'cuid_145_1361964166.213' 
    capture_lex $P5011
    $P5012 = $P5011()
    .const 'Sub' $P5013 = 'cuid_146_1361964166.213' 
    capture_lex $P5013
    $P5014 = $P5013()
    .const 'Sub' $P5015 = 'cuid_152_1361964166.213' 
    capture_lex $P5015
    $P5016 = $P5015()
    .const 'Sub' $P5017 = 'cuid_157_1361964166.213' 
    capture_lex $P5017
    $P5018 = $P5017()
    .const 'Sub' $P5019 = 'cuid_160_1361964166.213' 
    capture_lex $P5019
    $P5020 = $P5019()
    .const 'Sub' $P5021 = 'cuid_169_1361964166.213' 
    capture_lex $P5021
    $P5022 = $P5021()
.annotate 'line', 587
    nqp_get_sc_object $P5023, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5025 = 'cuid_176_1361964166.213' 
    capture_lex $P5025
    newclosure $P5024, $P5025
    $P5023."add_core_op"("list", $P5024, 1 :named("inlinable"))
.annotate 'line', 603
    nqp_get_sc_object $P5026, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5028 = 'cuid_178_1361964166.213' 
    capture_lex $P5028
    newclosure $P5027, $P5028
    $P5026."add_core_op"("qlist", $P5027, 1 :named("inlinable"))
.annotate 'line', 619
    nqp_get_sc_object $P5029, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5031 = 'cuid_180_1361964166.213' 
    capture_lex $P5031
    newclosure $P5030, $P5031
    $P5029."add_core_op"("list_i", $P5030, 1 :named("inlinable"))
.annotate 'line', 635
    nqp_get_sc_object $P5032, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5034 = 'cuid_182_1361964166.213' 
    capture_lex $P5034
    newclosure $P5033, $P5034
    $P5032."add_core_op"("list_s", $P5033, 1 :named("inlinable"))
.annotate 'line', 651
    nqp_get_sc_object $P5035, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5037 = 'cuid_184_1361964166.213' 
    capture_lex $P5037
    newclosure $P5036, $P5037
    $P5035."add_core_op"("list_b", $P5036, 1 :named("inlinable"))
.annotate 'line', 668
    nqp_get_sc_object $P5038, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5040 = 'cuid_186_1361964166.213' 
    capture_lex $P5040
    newclosure $P5039, $P5040
    $P5038."add_core_op"("hash", $P5039, 1 :named("inlinable"))
.annotate 'line', 693
    nqp_get_sc_object $P5041, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5043 = 'cuid_188_1361964166.213' 
    capture_lex $P5043
    newclosure $P5042, $P5043
    $P5041."add_core_op"("chain", $P5042, 1 :named("inlinable"))
.annotate 'line', 735
    nqp_get_sc_object $P5044, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5046 = 'cuid_189_1361964166.213' 
    capture_lex $P5046
    newclosure $P5045, $P5046
    $P5044."add_core_op"("stmts", $P5045, 1 :named("inlinable"))
    new $P5050, 'ResizablePMCArray'
    box $P5051, "if"
    push $P5050, $P5051
    box $P5052, "unless"
    push $P5050, $P5052
    set $P5047, $P5050
    iter $P5049, $P5050
  for_next650:
    unless $P5049, for_done652
    shift $P5054, $P5049
  for_redo651:
    .const 'Sub' $P5053 = 'cuid_196_1361964166.213' 
    capture_lex $P5053
    $P5047 = $P5053($P5054)
    goto for_next650
  for_done652:
.annotate 'line', 837
    nqp_get_sc_object $P5055, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5057 = 'cuid_197_1361964166.213' 
    capture_lex $P5057
    newclosure $P5056, $P5057
    $P5055."add_core_op"("ifnull", $P5056, 1 :named("inlinable"))
    new $P5061, 'ResizablePMCArray'
    box $P5062, ""
    push $P5061, $P5062
    box $P5063, "repeat_"
    push $P5061, $P5063
    set $P5058, $P5061
    iter $P5060, $P5061
  for_next754:
    unless $P5060, for_done756
    shift $P5065, $P5060
  for_redo755:
    .const 'Sub' $P5064 = 'cuid_202_1361964166.213' 
    capture_lex $P5064
    $P5058 = $P5064($P5065)
    goto for_next754
  for_done756:
.annotate 'line', 964
    nqp_get_sc_object $P5066, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5068 = 'cuid_204_1361964166.213' 
    capture_lex $P5068
    newclosure $P5067, $P5068
    $P5066."add_core_op"("for", $P5067, 1 :named("inlinable"))
.annotate 'line', 1052
    nqp_get_sc_object $P5069, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5071 = 'cuid_206_1361964166.213' 
    capture_lex $P5071
    newclosure $P5070, $P5071
    $P5069."add_core_op"("defor", $P5070, 1 :named("inlinable"))
.annotate 'line', 1073
    nqp_get_sc_object $P5072, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5074 = 'cuid_208_1361964166.213' 
    capture_lex $P5074
    newclosure $P5073, $P5074
    $P5072."add_core_op"("xor", $P5073, 1 :named("inlinable"))
.annotate 'line', 1142
    nqp_get_sc_object $P5075, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5077 = 'cuid_212_1361964166.213' 
    capture_lex $P5077
    newclosure $P5076, $P5077
    $P5075."add_core_op"("bind", $P5076, 1 :named("inlinable"))
.annotate 'line', 1183
    nqp_get_sc_object $P5078, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5080 = 'cuid_214_1361964166.213' 
    capture_lex $P5080
    newclosure $P5079, $P5080
    $P5078."add_core_op"("call", $P5079)
.annotate 'line', 1219
    nqp_get_sc_object $P5081, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5083 = 'cuid_217_1361964166.213' 
    capture_lex $P5083
    newclosure $P5082, $P5083
    $P5081."add_core_op"("callmethod", $P5082, 1 :named("inlinable"))
.annotate 'line', 1271
    nqp_get_sc_object $P5084, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5086 = 'cuid_220_1361964166.213' 
    capture_lex $P5086
    newclosure $P5085, $P5086
    $P5084."add_core_op"("lexotic", $P5085)
.annotate 'line', 1295
    nqp_get_sc_object $P5087, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5089 = 'cuid_221_1361964166.213' 
    capture_lex $P5089
    newclosure $P5088, $P5089
    $P5087."add_core_op"("ctx", $P5088)
.annotate 'line', 1303
    nqp_get_sc_object $P5090, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5092 = 'cuid_222_1361964166.213' 
    capture_lex $P5092
    newclosure $P5091, $P5092
    $P5090."add_core_op"("ctxouter", $P5091)
.annotate 'line', 1312
    nqp_get_sc_object $P5093, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5095 = 'cuid_223_1361964166.213' 
    capture_lex $P5095
    newclosure $P5094, $P5095
    $P5093."add_core_op"("ctxcaller", $P5094)
.annotate 'line', 1321
    nqp_get_sc_object $P5096, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5098 = 'cuid_224_1361964166.213' 
    capture_lex $P5098
    newclosure $P5097, $P5098
    $P5096."add_core_op"("ctxlexpad", $P5097)
.annotate 'line', 1330
    nqp_get_sc_object $P5099, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5101 = 'cuid_225_1361964166.213' 
    capture_lex $P5101
    newclosure $P5100, $P5101
    $P5099."add_core_op"("curlexpad", $P5100)
.annotate 'line', 1338
    nqp_get_sc_object $P5102, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5104 = 'cuid_226_1361964166.213' 
    capture_lex $P5104
    newclosure $P5103, $P5104
    $P5102."add_core_op"("curcode", $P5103)
.annotate 'line', 1346
    nqp_get_sc_object $P5105, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5107 = 'cuid_227_1361964166.213' 
    capture_lex $P5107
    newclosure $P5106, $P5107
    $P5105."add_core_op"("callercode", $P5106)
.annotate 'line', 1354
    nqp_get_sc_object $P5108, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5110 = 'cuid_228_1361964166.213' 
    capture_lex $P5110
    newclosure $P5109, $P5110
    $P5108."add_core_op"("lexprimspec", $P5109)
.annotate 'line', 1366
    nqp_get_sc_object $P5111, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5113 = 'cuid_229_1361964166.213' 
    capture_lex $P5113
    newclosure $P5112, $P5113
    $P5111."add_core_op"("usecapture", $P5112)
.annotate 'line', 1375
    nqp_get_sc_object $P5114, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5116 = 'cuid_230_1361964166.213' 
    capture_lex $P5116
    newclosure $P5115, $P5116
    $P5114."add_core_op"("savecapture", $P5115)
.annotate 'line', 1386
    nqp_get_sc_object $P5117, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5117."add_core_pirop_mapping"("captureposelems", "elements", "IP")
.annotate 'line', 1387
    nqp_get_sc_object $P5118, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5118."add_core_pirop_mapping"("captureposarg", "set", "PQi")
.annotate 'line', 1388
    nqp_get_sc_object $P5119, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5119."add_core_pirop_mapping"("captureposarg_i", "set", "IQi")
.annotate 'line', 1389
    nqp_get_sc_object $P5120, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5120."add_core_pirop_mapping"("captureposarg_n", "set", "NQi")
.annotate 'line', 1390
    nqp_get_sc_object $P5121, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5121."add_core_pirop_mapping"("captureposarg_s", "set", "SQi")
.annotate 'line', 1391
    nqp_get_sc_object $P5122, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5122."add_core_pirop_mapping"("captureposprimspec", "captureposprimspec", "IPi")
.annotate 'line', 1394
    nqp_get_sc_object $P5123, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5123."add_core_pirop_mapping"("invokewithcapture", "invoke_with_capture", "PPP")
.annotate 'line', 1395
    nqp_get_sc_object $P5124, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5124."add_core_pirop_mapping"("multicacheadd", "multi_cache_add", "PPPP")
.annotate 'line', 1396
    nqp_get_sc_object $P5125, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5125."add_core_pirop_mapping"("multicachefind", "multi_cache_find", "PPP")
    new $P5126, 'Hash'
    box $P5127, 65535
    set $P5126["CCLASS_ANY"], $P5127
    box $P5128, 8
    set $P5126["CCLASS_NUMERIC"], $P5128
    box $P5129, 32
    set $P5126["CCLASS_WHITESPACE"], $P5129
    box $P5130, 8192
    set $P5126["CCLASS_WORD"], $P5130
    box $P5131, 4096
    set $P5126["CCLASS_NEWLINE"], $P5131
    box $P5132, 4096
    set $P5126["CCLASS_NEWLINE"], $P5132
    box $P5133, 4
    set $P5126["CCLASS_ALPHABETIC"], $P5133
    box $P5134, 1
    set $P5126["CCLASS_UPPERCASE"], $P5134
    box $P5135, 2
    set $P5126["CCLASS_LOWERCASE"], $P5135
    box $P5136, 8
    set $P5126["CCLASS_NUMERIC"], $P5136
    box $P5137, 16
    set $P5126["CCLASS_HEXADECIMAL"], $P5137
    box $P5138, 256
    set $P5126["CCLASS_BLANK"], $P5138
    box $P5139, 512
    set $P5126["CCLASS_CONTROL"], $P5139
    box $P5140, 1024
    set $P5126["CCLASS_PUNCTUATION"], $P5140
    box $P5141, 2048
    set $P5126["CCLASS_ALPHANUMERIC"], $P5141
    set $P105, $P5126
.annotate 'line', 1416
    nqp_get_sc_object $P5142, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5144 = 'cuid_231_1361964166.213' 
    capture_lex $P5144
    newclosure $P5143, $P5144
    $P5142."add_core_op"("const", $P5143)
    box $P5145, 0
    set $P106, $P5145
    box $P5146, 1
    set $P107, $P5146
    new $P5147, 'Hash'
    box $P5148, ".CONTROL_ALL"
    set $P5147["CATCH"], $P5148
    box $P5149, ".CONTROL_ALL"
    set $P5147["CONTROL"], $P5149
    box $P5150, ".CONTROL_LOOP_NEXT"
    set $P5147["NEXT"], $P5150
    box $P5151, ".CONTROL_LOOP_LAST"
    set $P5147["LAST"], $P5151
    box $P5152, ".CONTROL_LOOP_REDO"
    set $P5147["REDO"], $P5152
    box $P5153, ".CONTROL_TAKE"
    set $P5147["TAKE"], $P5153
    box $P5154, ".CONTROL_BREAK"
    set $P5147["SUCCEED"], $P5154
    box $P5155, ".CONTROL_CONTINUE"
    set $P5147["PROCEED"], $P5155
    set $P108, $P5147
.annotate 'line', 1438
    nqp_get_sc_object $P5156, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5158 = 'cuid_233_1361964166.213' 
    capture_lex $P5158
    newclosure $P5157, $P5158
    $P5156."add_core_op"("handle", $P5157)
.annotate 'line', 1579
    nqp_get_sc_object $P5159, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5161 = 'cuid_241_1361964166.213' 
    capture_lex $P5161
    newclosure $P5160, $P5161
    $P5159."add_core_op"("exception", $P5160)
.annotate 'line', 1588
    nqp_get_sc_object $P5162, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5164 = 'cuid_242_1361964166.213' 
    capture_lex $P5164
    newclosure $P5163, $P5164
    $P5162."add_core_op"("getpayload", $P5163)
.annotate 'line', 1600
    nqp_get_sc_object $P5165, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5167 = 'cuid_243_1361964166.213' 
    capture_lex $P5167
    newclosure $P5166, $P5167
    $P5165."add_core_op"("setpayload", $P5166)
.annotate 'line', 1611
    nqp_get_sc_object $P5168, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5170 = 'cuid_244_1361964166.213' 
    capture_lex $P5170
    newclosure $P5169, $P5170
    $P5168."add_core_op"("getmessage", $P5169)
.annotate 'line', 1625
    nqp_get_sc_object $P5171, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5173 = 'cuid_245_1361964166.213' 
    capture_lex $P5173
    newclosure $P5172, $P5173
    $P5171."add_core_op"("setmessage", $P5172)
.annotate 'line', 1640
    nqp_get_sc_object $P5174, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5176 = 'cuid_246_1361964166.213' 
    capture_lex $P5176
    newclosure $P5175, $P5176
    $P5174."add_core_op"("newexception", $P5175)
.annotate 'line', 1650
    nqp_get_sc_object $P5177, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5177."add_core_pirop_mapping"("die_s", "die", "0s")
.annotate 'line', 1651
    nqp_get_sc_object $P5178, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5178."add_core_pirop_mapping"("die", "die", "0P")
.annotate 'line', 1652
    nqp_get_sc_object $P5179, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5179."add_core_pirop_mapping"("throw", "throw", "0P")
.annotate 'line', 1653
    nqp_get_sc_object $P5180, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5180."add_core_pirop_mapping"("rethrow", "rethrow", "0P")
    new $P5181, 'Hash'
    box $P5182, ".CONTROL_LOOP_NEXT"
    set $P5181["next"], $P5182
    box $P5183, ".CONTROL_LOOP_LAST"
    set $P5181["last"], $P5183
    box $P5184, ".CONTROL_LOOP_REDO"
    set $P5181["redo"], $P5184
    set $P109, $P5181
.annotate 'line', 1661
    nqp_get_sc_object $P5185, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5187 = 'cuid_248_1361964166.213' 
    capture_lex $P5187
    newclosure $P5186, $P5187
    $P5185."add_core_op"("control", $P5186)
    new $P5191, 'ResizablePMCArray'
    box $P5192, "i"
    push $P5191, $P5192
    box $P5193, "n"
    push $P5191, $P5193
    box $P5194, "s"
    push $P5191, $P5194
    set $P5188, $P5191
    iter $P5190, $P5191
  for_next1156:
    unless $P5190, for_done1158
    shift $P5196, $P5190
  for_redo1157:
    .const 'Sub' $P5195 = 'cuid_250_1361964166.213' 
    capture_lex $P5195
    $P5188 = $P5195($P5196)
    goto for_next1156
  for_done1158:
.annotate 'line', 1684
    nqp_get_sc_object $P5197, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5199 = 'cuid_251_1361964166.213' 
    capture_lex $P5199
    newclosure $P5198, $P5199
    $P5197."add_hll_unbox"("nqp", "i", $P5198)
.annotate 'line', 1692
    nqp_get_sc_object $P5200, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5202 = 'cuid_252_1361964166.213' 
    capture_lex $P5202
    newclosure $P5201, $P5202
    $P5200."add_hll_unbox"("nqp", "n", $P5201)
.annotate 'line', 1700
    nqp_get_sc_object $P5203, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5205 = 'cuid_253_1361964166.213' 
    capture_lex $P5205
    newclosure $P5204, $P5205
    $P5203."add_hll_unbox"("nqp", "s", $P5204)
.annotate 'line', 1710
    nqp_get_sc_object $P5206, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5206."add_core_pirop_mapping"("positional_get", "set", "PQi", 1 :named("inlinable"))
.annotate 'line', 1711
    nqp_get_sc_object $P5207, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5207."add_core_pirop_mapping"("positional_bind", "set", "1QiP", 1 :named("inlinable"))
.annotate 'line', 1712
    nqp_get_sc_object $P5208, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5208."add_core_pirop_mapping"("associative_get", "set", "PQs", 1 :named("inlinable"))
.annotate 'line', 1713
    nqp_get_sc_object $P5209, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5209."add_core_pirop_mapping"("associative_bind", "set", "1QsP", 1 :named("inlinable"))
.annotate 'line', 1716
    nqp_get_sc_object $P5210, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5210."add_core_pirop_mapping"("print", "print", "0s", 1 :named("inlinable"))
.annotate 'line', 1717
    nqp_get_sc_object $P5211, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5211."add_core_pirop_mapping"("say", "say", "0s", 1 :named("inlinable"))
.annotate 'line', 1718
    nqp_get_sc_object $P5212, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5212."add_core_pirop_mapping"("stat", "stat", "Isi", 1 :named("inlinable"))
.annotate 'line', 1719
    nqp_get_sc_object $P5213, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5213."add_core_pirop_mapping"("open", "open", "Pss", 1 :named("inlinable"))
.annotate 'line', 1720
    nqp_get_sc_object $P5214, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5216 = 'cuid_254_1361964166.213' 
    capture_lex $P5216
    newclosure $P5215, $P5216
    $P5214."add_core_op"("getstdin", $P5215)
.annotate 'line', 1729
    nqp_get_sc_object $P5217, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5219 = 'cuid_255_1361964166.213' 
    capture_lex $P5219
    newclosure $P5218, $P5219
    $P5217."add_core_op"("getstdout", $P5218)
.annotate 'line', 1738
    nqp_get_sc_object $P5220, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5222 = 'cuid_256_1361964166.213' 
    capture_lex $P5222
    newclosure $P5221, $P5222
    $P5220."add_core_op"("getstderr", $P5221)
.annotate 'line', 1747
    nqp_get_sc_object $P5223, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5225 = 'cuid_257_1361964166.213' 
    capture_lex $P5225
    newclosure $P5224, $P5225
    $P5223."add_core_op"("setencoding", $P5224)
.annotate 'line', 1756
    nqp_get_sc_object $P5226, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5228 = 'cuid_258_1361964166.213' 
    capture_lex $P5228
    newclosure $P5227, $P5228
    $P5226."add_core_op"("tellfh", $P5227)
.annotate 'line', 1765
    nqp_get_sc_object $P5229, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5231 = 'cuid_259_1361964166.213' 
    capture_lex $P5231
    newclosure $P5230, $P5231
    $P5229."add_core_op"("printfh", $P5230)
.annotate 'line', 1774
    nqp_get_sc_object $P5232, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5234 = 'cuid_260_1361964166.213' 
    capture_lex $P5234
    newclosure $P5233, $P5234
    $P5232."add_core_op"("sayfh", $P5233)
.annotate 'line', 1783
    nqp_get_sc_object $P5235, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5237 = 'cuid_261_1361964166.213' 
    capture_lex $P5237
    newclosure $P5236, $P5237
    $P5235."add_core_op"("readlinefh", $P5236)
.annotate 'line', 1792
    nqp_get_sc_object $P5238, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5240 = 'cuid_262_1361964166.213' 
    capture_lex $P5240
    newclosure $P5239, $P5240
    $P5238."add_core_op"("readlineintfh", $P5239)
.annotate 'line', 1801
    nqp_get_sc_object $P5241, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5243 = 'cuid_263_1361964166.213' 
    capture_lex $P5243
    newclosure $P5242, $P5243
    $P5241."add_core_op"("readallfh", $P5242)
.annotate 'line', 1810
    nqp_get_sc_object $P5244, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5246 = 'cuid_264_1361964166.213' 
    capture_lex $P5246
    newclosure $P5245, $P5246
    $P5244."add_core_op"("eoffh", $P5245)
.annotate 'line', 1816
    nqp_get_sc_object $P5247, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5249 = 'cuid_265_1361964166.213' 
    capture_lex $P5249
    newclosure $P5248, $P5249
    $P5247."add_core_op"("closefh", $P5248)
.annotate 'line', 1827
    nqp_get_sc_object $P5250, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5250."add_core_pirop_mapping"("time_i", "time", "I", 1 :named("inlinable"))
.annotate 'line', 1828
    nqp_get_sc_object $P5251, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5251."add_core_pirop_mapping"("time_n", "time", "N", 1 :named("inlinable"))
.annotate 'line', 1831
    nqp_get_sc_object $P5252, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5252."add_core_pirop_mapping"("add_i", "add", "Iii", 1 :named("inlinable"))
.annotate 'line', 1832
    nqp_get_sc_object $P5253, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5253."add_core_pirop_mapping"("add_I", "nqp_bigint_add", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1833
    nqp_get_sc_object $P5254, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5254."add_core_pirop_mapping"("add_n", "add", "Nnn", 1 :named("inlinable"))
.annotate 'line', 1834
    nqp_get_sc_object $P5255, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5255."add_core_pirop_mapping"("sub_i", "sub", "Iii", 1 :named("inlinable"))
.annotate 'line', 1835
    nqp_get_sc_object $P5256, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5256."add_core_pirop_mapping"("sub_I", "nqp_bigint_sub", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1836
    nqp_get_sc_object $P5257, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5257."add_core_pirop_mapping"("sub_n", "sub", "Nnn", 1 :named("inlinable"))
.annotate 'line', 1837
    nqp_get_sc_object $P5258, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5258."add_core_pirop_mapping"("mul_i", "mul", "Iii", 1 :named("inlinable"))
.annotate 'line', 1838
    nqp_get_sc_object $P5259, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5259."add_core_pirop_mapping"("mul_I", "nqp_bigint_mul", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1839
    nqp_get_sc_object $P5260, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5260."add_core_pirop_mapping"("mul_n", "mul", "Nnn", 1 :named("inlinable"))
.annotate 'line', 1840
    nqp_get_sc_object $P5261, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5261."add_core_pirop_mapping"("div_i", "div", "Iii", 1 :named("inlinable"))
.annotate 'line', 1841
    nqp_get_sc_object $P5262, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5262."add_core_pirop_mapping"("div_I", "nqp_bigint_div", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1842
    nqp_get_sc_object $P5263, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5263."add_core_pirop_mapping"("div_In", "nqp_bigint_div_num", "NPP", 1 :named("inlinable"))
.annotate 'line', 1843
    nqp_get_sc_object $P5264, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5264."add_core_pirop_mapping"("div_n", "div", "Nnn", 1 :named("inlinable"))
.annotate 'line', 1844
    nqp_get_sc_object $P5265, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5265."add_core_pirop_mapping"("mod_i", "mod", "Iii", 1 :named("inlinable"))
.annotate 'line', 1845
    nqp_get_sc_object $P5266, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5266."add_core_pirop_mapping"("mod_I", "nqp_bigint_mod", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1846
    nqp_get_sc_object $P5267, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5267."add_core_pirop_mapping"("expmod_I", "nqp_bigint_exp_mod", "PPPPP", 1 :named("inlinable"))
.annotate 'line', 1847
    nqp_get_sc_object $P5268, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5268."add_core_pirop_mapping"("isprime_I", "nqp_bigint_is_prime", "IPi", 1 :named("inlinable"))
.annotate 'line', 1848
    nqp_get_sc_object $P5269, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5269."add_core_pirop_mapping"("rand_I", "nqp_bigint_rand", "PPP", 1 :named("inlinable"))
.annotate 'line', 1849
    nqp_get_sc_object $P5270, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5270."add_core_pirop_mapping"("mod_n", "mod", "Nnn", 1 :named("inlinable"))
.annotate 'line', 1850
    nqp_get_sc_object $P5271, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5271."add_core_pirop_mapping"("pow_n", "pow", "Nnn", 1 :named("inlinable"))
.annotate 'line', 1851
    nqp_get_sc_object $P5272, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5272."add_core_pirop_mapping"("pow_I", "nqp_bigint_pow", "PPPPP", 1 :named("inlinable"))
.annotate 'line', 1852
    nqp_get_sc_object $P5273, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5273."add_core_pirop_mapping"("neg_i", "neg", "Ii", 1 :named("inlinable"))
.annotate 'line', 1853
    nqp_get_sc_object $P5274, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5274."add_core_pirop_mapping"("neg_I", "nqp_bigint_neg", "PPP", 1 :named("inlinable"))
.annotate 'line', 1854
    nqp_get_sc_object $P5275, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5275."add_core_pirop_mapping"("neg_n", "neg", "Nn", 1 :named("inlinable"))
.annotate 'line', 1855
    nqp_get_sc_object $P5276, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5276."add_core_pirop_mapping"("abs_i", "abs", "Ii", 1 :named("inlinable"))
.annotate 'line', 1856
    nqp_get_sc_object $P5277, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5277."add_core_pirop_mapping"("abs_I", "nqp_bigint_abs", "PPP", 1 :named("inlinable"))
.annotate 'line', 1857
    nqp_get_sc_object $P5278, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5278."add_core_pirop_mapping"("abs_n", "abs", "Nn", 1 :named("inlinable"))
.annotate 'line', 1859
    nqp_get_sc_object $P5279, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5279."add_core_pirop_mapping"("gcd_i", "gcd", "Iii", 1 :named("inlinable"))
.annotate 'line', 1860
    nqp_get_sc_object $P5280, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5280."add_core_pirop_mapping"("gcd_I", "nqp_bigint_gcd", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1861
    nqp_get_sc_object $P5281, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5281."add_core_pirop_mapping"("lcm_i", "lcm", "Iii", 1 :named("inlinable"))
.annotate 'line', 1862
    nqp_get_sc_object $P5282, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5282."add_core_pirop_mapping"("lcm_I", "nqp_bigint_lcm", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1864
    nqp_get_sc_object $P5283, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5283."add_core_pirop_mapping"("ceil_n", "ceil", "Nn", 1 :named("inlinable"))
.annotate 'line', 1865
    nqp_get_sc_object $P5284, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5284."add_core_pirop_mapping"("floor_n", "floor", "NN", 1 :named("inlinable"))
.annotate 'line', 1866
    nqp_get_sc_object $P5285, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5285."add_core_pirop_mapping"("ln_n", "ln", "Nn", 1 :named("inlinable"))
.annotate 'line', 1867
    nqp_get_sc_object $P5286, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5286."add_core_pirop_mapping"("sqrt_n", "sqrt", "Nn", 1 :named("inlinable"))
.annotate 'line', 1868
    nqp_get_sc_object $P5287, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5287."add_core_pirop_mapping"("radix", "nqp_radix", "Pisii", 1 :named("inlinable"))
.annotate 'line', 1869
    nqp_get_sc_object $P5288, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5288."add_core_pirop_mapping"("radix_I", "nqp_bigint_radix", "PisiiP", 1 :named("inlinable"))
.annotate 'line', 1870
    nqp_get_sc_object $P5289, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5289."add_core_pirop_mapping"("log_n", "ln", "NN", 1 :named("inlinable"))
.annotate 'line', 1871
    nqp_get_sc_object $P5290, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5290."add_core_pirop_mapping"("exp_n", "exp", "Nn", 1 :named("inlinable"))
.annotate 'line', 1872
    nqp_get_sc_object $P5291, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5291."add_core_pirop_mapping"("isnanorinf", "is_inf_or_nan", "In", 1 :named("inlinable"))
.annotate 'line', 1875
    nqp_get_sc_object $P5292, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5292."add_core_pirop_mapping"("sin_n", "sin", "NN", 1 :named("inlinable"))
.annotate 'line', 1876
    nqp_get_sc_object $P5293, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5293."add_core_pirop_mapping"("asin_n", "asin", "NN", 1 :named("inlinable"))
.annotate 'line', 1877
    nqp_get_sc_object $P5294, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5294."add_core_pirop_mapping"("cos_n", "cos", "NN", 1 :named("inlinable"))
.annotate 'line', 1878
    nqp_get_sc_object $P5295, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5295."add_core_pirop_mapping"("acos_n", "acos", "NN", 1 :named("inlinable"))
.annotate 'line', 1879
    nqp_get_sc_object $P5296, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5296."add_core_pirop_mapping"("tan_n", "tan", "NN", 1 :named("inlinable"))
.annotate 'line', 1880
    nqp_get_sc_object $P5297, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5297."add_core_pirop_mapping"("atan_n", "atan", "NN", 1 :named("inlinable"))
.annotate 'line', 1881
    nqp_get_sc_object $P5298, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5298."add_core_pirop_mapping"("atan2_n", "atan", "NNN", 1 :named("inlinable"))
.annotate 'line', 1882
    nqp_get_sc_object $P5299, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5299."add_core_pirop_mapping"("sec_n", "sec", "NN", 1 :named("inlinable"))
.annotate 'line', 1883
    nqp_get_sc_object $P5300, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5300."add_core_pirop_mapping"("asec_n", "asec", "NN", 1 :named("inlinable"))
.annotate 'line', 1884
    nqp_get_sc_object $P5301, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5301."add_core_pirop_mapping"("sin_n", "sin", "NN", 1 :named("inlinable"))
.annotate 'line', 1885
    nqp_get_sc_object $P5302, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5302."add_core_pirop_mapping"("asin_n", "asin", "NN", 1 :named("inlinable"))
.annotate 'line', 1886
    nqp_get_sc_object $P5303, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5303."add_core_pirop_mapping"("sinh_n", "sinh", "NN", 1 :named("inlinable"))
.annotate 'line', 1887
    nqp_get_sc_object $P5304, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5304."add_core_pirop_mapping"("cosh_n", "cosh", "NN", 1 :named("inlinable"))
.annotate 'line', 1888
    nqp_get_sc_object $P5305, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5305."add_core_pirop_mapping"("tanh_n", "tanh", "NN", 1 :named("inlinable"))
.annotate 'line', 1889
    nqp_get_sc_object $P5306, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5306."add_core_pirop_mapping"("sech_n", "sech", "NN", 1 :named("inlinable"))
.annotate 'line', 1892
    nqp_get_sc_object $P5307, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5307."add_core_pirop_mapping"("bitor_i", "bor", "Iii", 1 :named("inlinable"))
.annotate 'line', 1893
    nqp_get_sc_object $P5308, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5308."add_core_pirop_mapping"("bitor_I", "nqp_bigint_bor", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1894
    nqp_get_sc_object $P5309, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5309."add_core_pirop_mapping"("bitxor_i", "bxor", "Iii", 1 :named("inlinable"))
.annotate 'line', 1895
    nqp_get_sc_object $P5310, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5310."add_core_pirop_mapping"("bitxor_I", "nqp_bigint_bxor", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1896
    nqp_get_sc_object $P5311, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5311."add_core_pirop_mapping"("bitand_i", "band", "Iii", 1 :named("inlinable"))
.annotate 'line', 1897
    nqp_get_sc_object $P5312, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5312."add_core_pirop_mapping"("bitand_I", "nqp_bigint_band", "PPPP", 1 :named("inlinable"))
.annotate 'line', 1898
    nqp_get_sc_object $P5313, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5313."add_core_pirop_mapping"("bitneg_i", "bnot", "Ii", 1 :named("inlinable"))
.annotate 'line', 1899
    nqp_get_sc_object $P5314, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5314."add_core_pirop_mapping"("bitneg_I", "nqp_bigint_bnot", "PPP", 1 :named("inlinable"))
.annotate 'line', 1900
    nqp_get_sc_object $P5315, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5315."add_core_pirop_mapping"("bitshiftl_i", "shl", "Iii", 1 :named("inlinable"))
.annotate 'line', 1901
    nqp_get_sc_object $P5316, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5316."add_core_pirop_mapping"("bitshiftl_I", "nqp_bigint_shl", "PPIP", 1 :named("inlinable"))
.annotate 'line', 1902
    nqp_get_sc_object $P5317, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5317."add_core_pirop_mapping"("bitshiftr_i", "shr", "Iii", 1 :named("inlinable"))
.annotate 'line', 1903
    nqp_get_sc_object $P5318, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5318."add_core_pirop_mapping"("bitshiftr_I", "nqp_bigint_shr", "PPIP", 1 :named("inlinable"))
.annotate 'line', 1906
    nqp_get_sc_object $P5319, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5319."add_core_pirop_mapping"("bitor_s", "bors", "Sss", 1 :named("inlinable"))
.annotate 'line', 1907
    nqp_get_sc_object $P5320, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5320."add_core_pirop_mapping"("bitxor_s", "bxors", "Sss", 1 :named("inlinable"))
.annotate 'line', 1908
    nqp_get_sc_object $P5321, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5321."add_core_pirop_mapping"("bitand_s", "bands", "Sss", 1 :named("inlinable"))
.annotate 'line', 1911
    nqp_get_sc_object $P5322, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5322."add_core_pirop_mapping"("chars", "length", "Is", 1 :named("inlinable"))
.annotate 'line', 1912
    nqp_get_sc_object $P5323, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5323."add_core_pirop_mapping"("concat", "concat", "Sss", 1 :named("inlinable"))
.annotate 'line', 1913
    nqp_get_sc_object $P5324, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5324."add_core_pirop_mapping"("concat_s", "concat", "Sss", 1 :named("inlinable"))
.annotate 'line', 1914
    nqp_get_sc_object $P5325, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5325."add_core_pirop_mapping"("join", "join", "SsP", 1 :named("inlinable"))
.annotate 'line', 1915
    nqp_get_sc_object $P5326, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5326."add_core_pirop_mapping"("split", "split", "Pss", 1 :named("inlinable"))
.annotate 'line', 1916
    nqp_get_sc_object $P5327, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5327."add_core_pirop_mapping"("chr", "chr", "Si", 1 :named("inlinable"))
.annotate 'line', 1917
    nqp_get_sc_object $P5328, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5328."add_core_pirop_mapping"("lc", "downcase", "Ss", 1 :named("inlinable"))
.annotate 'line', 1918
    nqp_get_sc_object $P5329, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5329."add_core_pirop_mapping"("uc", "upcase", "Ss", 1 :named("inlinable"))
.annotate 'line', 1919
    nqp_get_sc_object $P5330, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5330."add_core_pirop_mapping"("x", "repeat", "Ssi", 1 :named("inlinable"))
.annotate 'line', 1920
    nqp_get_sc_object $P5331, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5331."add_core_pirop_mapping"("iscclass", "is_cclass", "Iisi", 1 :named("inlinable"))
.annotate 'line', 1921
    nqp_get_sc_object $P5332, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5332."add_core_pirop_mapping"("findcclass", "find_cclass", "Iisii", 1 :named("inlinable"))
.annotate 'line', 1922
    nqp_get_sc_object $P5333, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5333."add_core_pirop_mapping"("findnotcclass", "find_not_cclass", "Iisii", 1 :named("inlinable"))
.annotate 'line', 1923
    nqp_get_sc_object $P5334, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5334."add_core_pirop_mapping"("sprintf", "sprintf", "SsP", 1 :named("inlinable"))
.annotate 'line', 1924
    nqp_get_sc_object $P5335, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5335."add_core_pirop_mapping"("escape", "escape", "Ss", 1 :named("inlinable"))
.annotate 'line', 1927
    nqp_get_sc_object $P5336, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5336."add_core_pirop_mapping"("substr2", "substr", "Ssi", 1 :named("inlinable"))
.annotate 'line', 1928
    nqp_get_sc_object $P5337, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5337."add_core_pirop_mapping"("substr3", "substr", "Ssii", 1 :named("inlinable"))
.annotate 'line', 1929
    nqp_get_sc_object $P5338, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5340 = 'cuid_266_1361964166.213' 
    capture_lex $P5340
    newclosure $P5339, $P5340
    $P5338."add_core_op"("substr", $P5339, 1 :named("inlinable"))
.annotate 'line', 1937
    nqp_get_sc_object $P5341, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5341."add_core_pirop_mapping"("ordfirst", "ord", "Is", 1 :named("inlinable"))
.annotate 'line', 1938
    nqp_get_sc_object $P5342, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5342."add_core_pirop_mapping"("ordat", "ord", "Isi", 1 :named("inlinable"))
.annotate 'line', 1939
    nqp_get_sc_object $P5343, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5345 = 'cuid_267_1361964166.213' 
    capture_lex $P5345
    newclosure $P5344, $P5345
    $P5343."add_core_op"("ord", $P5344, 1 :named("inlinable"))
.annotate 'line', 1947
    nqp_get_sc_object $P5346, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5346."add_core_pirop_mapping"("indexfrom", "index", "Issi", 1 :named("inlinable"))
.annotate 'line', 1948
    nqp_get_sc_object $P5347, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5349 = 'cuid_268_1361964166.213' 
    capture_lex $P5349
    newclosure $P5348, $P5349
    $P5347."add_core_op"("index", $P5348, 1 :named("inlinable"))
.annotate 'line', 1954
    nqp_get_sc_object $P5350, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5350."add_core_pirop_mapping"("rindexfrom", "rindex", "Issi", 1 :named("inlinable"))
.annotate 'line', 1955
    nqp_get_sc_object $P5351, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5351."add_core_pirop_mapping"("rindexfromend", "rindex", "Iss", 1 :named("inlinable"))
.annotate 'line', 1956
    nqp_get_sc_object $P5352, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5354 = 'cuid_269_1361964166.213' 
    capture_lex $P5354
    newclosure $P5353, $P5354
    $P5352."add_core_op"("rindex", $P5353, 1 :named("inlinable"))
.annotate 'line', 1963
    nqp_get_sc_object $P5355, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5357 = 'cuid_270_1361964166.213' 
    capture_lex $P5357
    newclosure $P5356, $P5357
    $P5355."add_core_op"("codepointfromname", $P5356, 1 :named("inlinable"))
.annotate 'line', 1979
    nqp_get_sc_object $P5358, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5358."add_core_pirop_mapping"("cmp_i", "cmp", "Iii", 1 :named("inlinable"))
.annotate 'line', 1980
    nqp_get_sc_object $P5359, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5359."add_core_pirop_mapping"("iseq_i", "iseq", "Iii", 1 :named("inlinable"))
.annotate 'line', 1981
    nqp_get_sc_object $P5360, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5360."add_core_pirop_mapping"("isne_i", "isne", "Iii", 1 :named("inlinable"))
.annotate 'line', 1982
    nqp_get_sc_object $P5361, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5361."add_core_pirop_mapping"("islt_i", "islt", "Iii", 1 :named("inlinable"))
.annotate 'line', 1983
    nqp_get_sc_object $P5362, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5362."add_core_pirop_mapping"("isle_i", "isle", "Iii", 1 :named("inlinable"))
.annotate 'line', 1984
    nqp_get_sc_object $P5363, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5363."add_core_pirop_mapping"("isgt_i", "isgt", "Iii", 1 :named("inlinable"))
.annotate 'line', 1985
    nqp_get_sc_object $P5364, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5364."add_core_pirop_mapping"("isge_i", "isge", "Iii", 1 :named("inlinable"))
.annotate 'line', 1987
    nqp_get_sc_object $P5365, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5365."add_core_pirop_mapping"("bool_I", "nqp_bigint_bool", "IP", 1 :named("inlinable"))
.annotate 'line', 1988
    nqp_get_sc_object $P5366, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5366."add_core_pirop_mapping"("cmp_I", "nqp_bigint_cmp", "IPP", 1 :named("inlinable"))
.annotate 'line', 1989
    nqp_get_sc_object $P5367, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5367."add_core_pirop_mapping"("iseq_I", "nqp_bigint_eq", "IPP", 1 :named("inlinable"))
.annotate 'line', 1990
    nqp_get_sc_object $P5368, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5368."add_core_pirop_mapping"("isne_I", "nqp_bigint_ne", "IPP", 1 :named("inlinable"))
.annotate 'line', 1991
    nqp_get_sc_object $P5369, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5369."add_core_pirop_mapping"("islt_I", "nqp_bigint_lt", "IPP", 1 :named("inlinable"))
.annotate 'line', 1992
    nqp_get_sc_object $P5370, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5370."add_core_pirop_mapping"("isle_I", "nqp_bigint_le", "IPP", 1 :named("inlinable"))
.annotate 'line', 1993
    nqp_get_sc_object $P5371, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5371."add_core_pirop_mapping"("isgt_I", "nqp_bigint_gt", "IPP", 1 :named("inlinable"))
.annotate 'line', 1994
    nqp_get_sc_object $P5372, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5372."add_core_pirop_mapping"("isge_I", "nqp_bigint_ge", "IPP", 1 :named("inlinable"))
.annotate 'line', 1996
    nqp_get_sc_object $P5373, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5373."add_core_pirop_mapping"("cmp_n", "cmp", "Inn", 1 :named("inlinable"))
.annotate 'line', 1997
    nqp_get_sc_object $P5374, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5374."add_core_pirop_mapping"("iseq_n", "iseq", "Inn", 1 :named("inlinable"))
.annotate 'line', 1998
    nqp_get_sc_object $P5375, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5375."add_core_pirop_mapping"("isne_n", "isne", "Inn", 1 :named("inlinable"))
.annotate 'line', 1999
    nqp_get_sc_object $P5376, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5376."add_core_pirop_mapping"("islt_n", "islt", "Inn", 1 :named("inlinable"))
.annotate 'line', 2000
    nqp_get_sc_object $P5377, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5377."add_core_pirop_mapping"("isle_n", "isle", "Inn", 1 :named("inlinable"))
.annotate 'line', 2001
    nqp_get_sc_object $P5378, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5378."add_core_pirop_mapping"("isgt_n", "isgt", "Inn", 1 :named("inlinable"))
.annotate 'line', 2002
    nqp_get_sc_object $P5379, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5379."add_core_pirop_mapping"("isge_n", "isge", "Inn", 1 :named("inlinable"))
.annotate 'line', 2004
    nqp_get_sc_object $P5380, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5380."add_core_pirop_mapping"("cmp_s", "cmp", "Iss", 1 :named("inlinable"))
.annotate 'line', 2005
    nqp_get_sc_object $P5381, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5381."add_core_pirop_mapping"("iseq_s", "iseq", "Iss", 1 :named("inlinable"))
.annotate 'line', 2006
    nqp_get_sc_object $P5382, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5382."add_core_pirop_mapping"("isne_s", "isne", "Iss", 1 :named("inlinable"))
.annotate 'line', 2007
    nqp_get_sc_object $P5383, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5383."add_core_pirop_mapping"("islt_s", "islt", "Iss", 1 :named("inlinable"))
.annotate 'line', 2008
    nqp_get_sc_object $P5384, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5384."add_core_pirop_mapping"("isle_s", "isle", "Iss", 1 :named("inlinable"))
.annotate 'line', 2009
    nqp_get_sc_object $P5385, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5385."add_core_pirop_mapping"("isgt_s", "isgt", "Iss", 1 :named("inlinable"))
.annotate 'line', 2010
    nqp_get_sc_object $P5386, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5386."add_core_pirop_mapping"("isge_s", "isge", "Iss", 1 :named("inlinable"))
.annotate 'line', 2013
    nqp_get_sc_object $P5387, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5387."add_core_pirop_mapping"("fromstr_I", "nqp_bigint_from_str", "PsP", 1 :named("inlinable"))
.annotate 'line', 2014
    nqp_get_sc_object $P5388, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5388."add_core_pirop_mapping"("tostr_I", "nqp_bigint_to_str", "SP", 1 :named("inlinable"))
.annotate 'line', 2015
    nqp_get_sc_object $P5389, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5389."add_core_pirop_mapping"("base_I", "nqp_bigint_to_str_base", "SPI", 1 :named("inlinable"))
.annotate 'line', 2016
    nqp_get_sc_object $P5390, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5390."add_core_pirop_mapping"("isbig_I", "nqp_bigint_is_big", "IP", 1 :named("inlinable"))
.annotate 'line', 2017
    nqp_get_sc_object $P5391, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5391."add_core_pirop_mapping"("fromnum_I", "nqp_bigint_from_num", "PNP", 1 :named("inlinable"))
.annotate 'line', 2018
    nqp_get_sc_object $P5392, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5392."add_core_pirop_mapping"("tonum_I", "nqp_bigint_to_num", "NP", 1 :named("inlinable"))
.annotate 'line', 2021
    nqp_get_sc_object $P5393, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5393."add_core_pirop_mapping"("buildnativecall", "nqp_native_call_build", "vPsssPP")
.annotate 'line', 2022
    nqp_get_sc_object $P5394, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5394."add_core_pirop_mapping"("nativecall", "nqp_native_call", "PPPP")
.annotate 'line', 2023
    nqp_get_sc_object $P5395, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5395."add_core_pirop_mapping"("nativecallrefresh", "nqp_native_call_wb", "vP")
.annotate 'line', 2026
    nqp_get_sc_object $P5396, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5396."add_core_pirop_mapping"("not_i", "not", "Ii", 1 :named("inlinable"))
.annotate 'line', 2029
    nqp_get_sc_object $P5397, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5397."add_core_pirop_mapping"("atkey", "set", "PQs", 1 :named("inlinable"))
.annotate 'line', 2030
    nqp_get_sc_object $P5398, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5398."add_core_pirop_mapping"("atkey_i", "set", "IQs", 1 :named("inlinable"))
.annotate 'line', 2031
    nqp_get_sc_object $P5399, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5399."add_core_pirop_mapping"("atkey_n", "set", "NQs", 1 :named("inlinable"))
.annotate 'line', 2032
    nqp_get_sc_object $P5400, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5400."add_core_pirop_mapping"("atkey_s", "set", "SQs", 1 :named("inlinable"))
.annotate 'line', 2033
    nqp_get_sc_object $P5401, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5401."add_core_pirop_mapping"("atpos", "set", "PQi", 1 :named("inlinable"))
.annotate 'line', 2034
    nqp_get_sc_object $P5402, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5402."add_core_pirop_mapping"("atpos_i", "set", "IQi", 1 :named("inlinable"))
.annotate 'line', 2035
    nqp_get_sc_object $P5403, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5403."add_core_pirop_mapping"("atpos_n", "set", "NQi", 1 :named("inlinable"))
.annotate 'line', 2036
    nqp_get_sc_object $P5404, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5404."add_core_pirop_mapping"("atpos_s", "set", "SQi", 1 :named("inlinable"))
.annotate 'line', 2037
    nqp_get_sc_object $P5405, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5405."add_core_pirop_mapping"("bindkey", "set", "1QsP", 1 :named("inlinable"))
.annotate 'line', 2038
    nqp_get_sc_object $P5406, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5406."add_core_pirop_mapping"("bindkey_i", "set", "1QsI", 1 :named("inlinable"))
.annotate 'line', 2039
    nqp_get_sc_object $P5407, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5407."add_core_pirop_mapping"("bindkey_n", "set", "1QsN", 1 :named("inlinable"))
.annotate 'line', 2040
    nqp_get_sc_object $P5408, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5408."add_core_pirop_mapping"("bindkey_s", "set", "1QsS", 1 :named("inlinable"))
.annotate 'line', 2041
    nqp_get_sc_object $P5409, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5409."add_core_pirop_mapping"("bindpos", "set", "1QiP", 1 :named("inlinable"))
.annotate 'line', 2042
    nqp_get_sc_object $P5410, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5410."add_core_pirop_mapping"("bindpos_i", "set", "1Qii", 1 :named("inlinable"))
.annotate 'line', 2043
    nqp_get_sc_object $P5411, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5411."add_core_pirop_mapping"("bindpos_n", "set", "1Qin", 1 :named("inlinable"))
.annotate 'line', 2044
    nqp_get_sc_object $P5412, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5412."add_core_pirop_mapping"("bindpos_s", "set", "1Qis", 1 :named("inlinable"))
.annotate 'line', 2045
    nqp_get_sc_object $P5413, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5413."add_core_pirop_mapping"("deletekey", "delete", "0Qs", 1 :named("inlinable"))
.annotate 'line', 2046
    nqp_get_sc_object $P5414, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5414."add_core_pirop_mapping"("deletepos", "delete", "0Qi", 1 :named("inlinable"))
.annotate 'line', 2047
    nqp_get_sc_object $P5415, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5415."add_core_pirop_mapping"("existskey", "exists", "IQs", 1 :named("inlinable"))
.annotate 'line', 2048
    nqp_get_sc_object $P5416, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5416."add_core_pirop_mapping"("existspos", "exists", "IQi", 1 :named("inlinable"))
.annotate 'line', 2049
    nqp_get_sc_object $P5417, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5417."add_core_pirop_mapping"("elems", "elements", "IP", 1 :named("inlinable"))
.annotate 'line', 2050
    nqp_get_sc_object $P5418, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5418."add_core_pirop_mapping"("push", "push", "0PP", 1 :named("inlinable"))
.annotate 'line', 2051
    nqp_get_sc_object $P5419, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5419."add_core_pirop_mapping"("push_s", "push", "0Ps", 1 :named("inlinable"))
.annotate 'line', 2052
    nqp_get_sc_object $P5420, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5420."add_core_pirop_mapping"("push_i", "push", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2053
    nqp_get_sc_object $P5421, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5421."add_core_pirop_mapping"("push_n", "push", "0Pn", 1 :named("inlinable"))
.annotate 'line', 2054
    nqp_get_sc_object $P5422, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5422."add_core_pirop_mapping"("pop", "pop", "PP", 1 :named("inlinable"))
.annotate 'line', 2055
    nqp_get_sc_object $P5423, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5423."add_core_pirop_mapping"("pop_s", "pop", "SP", 1 :named("inlinable"))
.annotate 'line', 2056
    nqp_get_sc_object $P5424, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5424."add_core_pirop_mapping"("pop_i", "pop", "IP", 1 :named("inlinable"))
.annotate 'line', 2057
    nqp_get_sc_object $P5425, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5425."add_core_pirop_mapping"("pop_n", "pop", "NP", 1 :named("inlinable"))
.annotate 'line', 2058
    nqp_get_sc_object $P5426, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5426."add_core_pirop_mapping"("shift", "shift", "PP", 1 :named("inlinable"))
.annotate 'line', 2059
    nqp_get_sc_object $P5427, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5427."add_core_pirop_mapping"("shift_s", "shift", "SP", 1 :named("inlinable"))
.annotate 'line', 2060
    nqp_get_sc_object $P5428, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5428."add_core_pirop_mapping"("shift_i", "shift", "IP", 1 :named("inlinable"))
.annotate 'line', 2061
    nqp_get_sc_object $P5429, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5429."add_core_pirop_mapping"("shift_n", "shift", "NP", 1 :named("inlinable"))
.annotate 'line', 2062
    nqp_get_sc_object $P5430, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5430."add_core_pirop_mapping"("unshift", "unshift", "0PP", 1 :named("inlinable"))
.annotate 'line', 2063
    nqp_get_sc_object $P5431, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5431."add_core_pirop_mapping"("unshift_s", "unshift", "0Ps", 1 :named("inlinable"))
.annotate 'line', 2064
    nqp_get_sc_object $P5432, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5432."add_core_pirop_mapping"("unshift_i", "unshift", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2065
    nqp_get_sc_object $P5433, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5433."add_core_pirop_mapping"("unshift_n", "unshift", "0Pn", 1 :named("inlinable"))
.annotate 'line', 2066
    nqp_get_sc_object $P5434, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5434."add_core_pirop_mapping"("splice", "splice", "0PPii", 1 :named("inlinable"))
.annotate 'line', 2067
    nqp_get_sc_object $P5435, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5435."add_core_pirop_mapping"("islist", "nqp_islist", "IP", 1 :named("inlinable"))
.annotate 'line', 2068
    nqp_get_sc_object $P5436, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5436."add_core_pirop_mapping"("ishash", "nqp_ishash", "IP", 1 :named("inlinable"))
.annotate 'line', 2069
    nqp_get_sc_object $P5437, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5437."add_core_pirop_mapping"("isinvokable", "is_invokable", "IP", 1 :named("inlinable"))
.annotate 'line', 2070
    nqp_get_sc_object $P5438, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5438."add_core_pirop_mapping"("iterator", "iter", "PP", 1 :named("inlinable"))
.annotate 'line', 2071
    nqp_get_sc_object $P5439, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5441 = 'cuid_271_1361964166.213' 
    capture_lex $P5441
    newclosure $P5440, $P5441
    $P5439."add_core_op"("iterkey_s", $P5440)
.annotate 'line', 2074
    nqp_get_sc_object $P5442, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5444 = 'cuid_272_1361964166.213' 
    capture_lex $P5444
    newclosure $P5443, $P5444
    $P5442."add_core_op"("iterval", $P5443)
.annotate 'line', 2079
    nqp_get_sc_object $P5445, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5445."add_core_pirop_mapping"("r_atpos", "repr_at_pos_obj", "PPi", 1 :named("inlinable"))
.annotate 'line', 2080
    nqp_get_sc_object $P5446, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5446."add_core_pirop_mapping"("r_atpos_i", "repr_at_pos_int", "IPi", 1 :named("inlinable"))
.annotate 'line', 2081
    nqp_get_sc_object $P5447, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5447."add_core_pirop_mapping"("r_atpos_n", "repr_at_pos_num", "NPi", 1 :named("inlinable"))
.annotate 'line', 2082
    nqp_get_sc_object $P5448, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5448."add_core_pirop_mapping"("r_bindpos", "repr_bind_pos_obj", "2PiP", 1 :named("inlinable"))
.annotate 'line', 2083
    nqp_get_sc_object $P5449, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5449."add_core_pirop_mapping"("r_bindpos_i", "repr_bind_pos_int", "2Pii", 1 :named("inlinable"))
.annotate 'line', 2084
    nqp_get_sc_object $P5450, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5450."add_core_pirop_mapping"("r_bindpos_n", "repr_bind_pos_num", "2Pin", 1 :named("inlinable"))
.annotate 'line', 2085
    nqp_get_sc_object $P5451, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5451."add_core_pirop_mapping"("r_elems", "repr_elems", "IP", 1 :named("inlinable"))
.annotate 'line', 2088
    nqp_get_sc_object $P5452, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5452."add_core_pirop_mapping"("bindattr", "setattribute", "3PPsP", 1 :named("inlinable"))
.annotate 'line', 2089
    nqp_get_sc_object $P5453, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5453."add_core_pirop_mapping"("bindattr_i", "repr_bind_attr_int", "3PPsi", 1 :named("inlinable"))
.annotate 'line', 2090
    nqp_get_sc_object $P5454, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5454."add_core_pirop_mapping"("bindattr_n", "repr_bind_attr_num", "3PPsn", 1 :named("inlinable"))
.annotate 'line', 2091
    nqp_get_sc_object $P5455, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5455."add_core_pirop_mapping"("bindattr_s", "repr_bind_attr_str", "3PPss", 1 :named("inlinable"))
.annotate 'line', 2092
    nqp_get_sc_object $P5456, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5456."add_core_pirop_mapping"("getattr", "getattribute", "PPPs", 1 :named("inlinable"))
.annotate 'line', 2093
    nqp_get_sc_object $P5457, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5457."add_core_pirop_mapping"("getattr_i", "repr_get_attr_int", "IPPs", 1 :named("inlinable"))
.annotate 'line', 2094
    nqp_get_sc_object $P5458, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5458."add_core_pirop_mapping"("getattr_n", "repr_get_attr_num", "NPPs", 1 :named("inlinable"))
.annotate 'line', 2095
    nqp_get_sc_object $P5459, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5459."add_core_pirop_mapping"("getattr_s", "repr_get_attr_str", "SPPs", 1 :named("inlinable"))
.annotate 'line', 2096
    nqp_get_sc_object $P5460, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5460."add_core_pirop_mapping"("attrinited", "repr_is_attr_initialized", "IPPs", 1 :named("inlinable"))
.annotate 'line', 2097
    nqp_get_sc_object $P5461, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5461."add_core_pirop_mapping"("create", "repr_instance_of", "PP", 1 :named("inlinable"))
.annotate 'line', 2098
    nqp_get_sc_object $P5462, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5462."add_core_pirop_mapping"("clone", "repr_clone", "PP", 1 :named("inlinable"))
.annotate 'line', 2099
    nqp_get_sc_object $P5463, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5463."add_core_pirop_mapping"("isconcrete", "repr_defined", "IP", 1 :named("inlinable"))
.annotate 'line', 2100
    nqp_get_sc_object $P5464, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5464."add_core_pirop_mapping"("iscont", "is_container", "IP", 1 :named("inlinable"))
.annotate 'line', 2101
    nqp_get_sc_object $P5465, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5465."add_core_pirop_mapping"("decont", "nqp_decontainerize", "PP", 1 :named("inlinable"))
.annotate 'line', 2102
    nqp_get_sc_object $P5466, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5466."add_core_pirop_mapping"("isnull", "isnull", "IP", 1 :named("inlinable"))
.annotate 'line', 2103
    nqp_get_sc_object $P5467, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5467."add_core_pirop_mapping"("isnull_s", "isnull", "IS", 1 :named("inlinable"))
.annotate 'line', 2104
    nqp_get_sc_object $P5468, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5468."add_core_pirop_mapping"("istrue", "istrue", "IP", 1 :named("inlinable"))
.annotate 'line', 2105
    nqp_get_sc_object $P5469, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5469."add_core_pirop_mapping"("isfalse", "isfalse", "IP", 1 :named("inlinable"))
.annotate 'line', 2106
    nqp_get_sc_object $P5470, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5470."add_core_pirop_mapping"("istype", "type_check", "IPP", 1 :named("inlinable"))
.annotate 'line', 2107
    nqp_get_sc_object $P5471, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5471."add_core_pirop_mapping"("null", "null", "P", 1 :named("inlinable"))
.annotate 'line', 2108
    nqp_get_sc_object $P5472, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5472."add_core_pirop_mapping"("null_s", "null", "S", 1 :named("inlinable"))
.annotate 'line', 2109
    nqp_get_sc_object $P5473, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5473."add_core_pirop_mapping"("unbox_i", "repr_unbox_int", "IP", 1 :named("inlinable"))
.annotate 'line', 2110
    nqp_get_sc_object $P5474, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5474."add_core_pirop_mapping"("unbox_n", "repr_unbox_num", "NP", 1 :named("inlinable"))
.annotate 'line', 2111
    nqp_get_sc_object $P5475, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5475."add_core_pirop_mapping"("unbox_s", "repr_unbox_str", "SP", 1 :named("inlinable"))
.annotate 'line', 2112
    nqp_get_sc_object $P5476, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5476."add_core_pirop_mapping"("box_i", "repr_box_int", "PiP", 1 :named("inlinable"))
.annotate 'line', 2113
    nqp_get_sc_object $P5477, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5477."add_core_pirop_mapping"("box_n", "repr_box_num", "PnP", 1 :named("inlinable"))
.annotate 'line', 2114
    nqp_get_sc_object $P5478, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5478."add_core_pirop_mapping"("box_s", "repr_box_str", "PsP", 1 :named("inlinable"))
.annotate 'line', 2115
    nqp_get_sc_object $P5479, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5479."add_core_pirop_mapping"("what", "get_what", "PP", 1 :named("inlinable"))
.annotate 'line', 2116
    nqp_get_sc_object $P5480, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5480."add_core_pirop_mapping"("how", "get_how", "PP", 1 :named("inlinable"))
.annotate 'line', 2117
    nqp_get_sc_object $P5481, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5481."add_core_pirop_mapping"("who", "get_who", "PP", 1 :named("inlinable"))
.annotate 'line', 2118
    nqp_get_sc_object $P5482, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5482."add_core_pirop_mapping"("where", "get_id", "IP", 1 :named("inlinable"))
.annotate 'line', 2119
    nqp_get_sc_object $P5483, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5483."add_core_pirop_mapping"("findmethod", "find_method", "PPs", 1 :named("inlinable"))
.annotate 'line', 2120
    nqp_get_sc_object $P5484, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5484."add_core_pirop_mapping"("defined", "defined", "IP", 1 :named("inlinable"))
.annotate 'line', 2121
    nqp_get_sc_object $P5485, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5485."add_core_pirop_mapping"("can", "can", "IPs", 1 :named("inlinable"))
.annotate 'line', 2122
    nqp_get_sc_object $P5486, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5486."add_core_pirop_mapping"("reprname", "repr_name", "SP", 1 :named("inlinable"))
.annotate 'line', 2123
    nqp_get_sc_object $P5487, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5487."add_core_pirop_mapping"("newtype", "repr_type_object_for", "PPs", 1 :named("inlinable"))
.annotate 'line', 2124
    nqp_get_sc_object $P5488, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5488."add_core_pirop_mapping"("composetype", "repr_compose", "0PP", 1 :named("inlinable"))
.annotate 'line', 2125
    nqp_get_sc_object $P5489, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5489."add_core_pirop_mapping"("setwho", "set_who", "0PP", 1 :named("inlinable"))
.annotate 'line', 2126
    nqp_get_sc_object $P5490, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5490."add_core_pirop_mapping"("rebless", "repr_change_type", "0PP", 1 :named("inlinable"))
.annotate 'line', 2127
    nqp_get_sc_object $P5491, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5491."add_core_pirop_mapping"("knowhow", "get_knowhow", "P", 1 :named("inlinable"))
.annotate 'line', 2128
    nqp_get_sc_object $P5492, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5492."add_core_pirop_mapping"("knowhowattr", "get_knowhow_attribute", "P", 1 :named("inlinable"))
.annotate 'line', 2129
    nqp_get_sc_object $P5493, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5493."add_core_pirop_mapping"("setboolspec", "set_boolification_spec", "0PiP", 1 :named("inlinable"))
.annotate 'line', 2130
    nqp_get_sc_object $P5494, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5494."add_core_pirop_mapping"("setmethcache", "publish_method_cache", "0PP", 1 :named("inlinable"))
.annotate 'line', 2131
    nqp_get_sc_object $P5495, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5495."add_core_pirop_mapping"("setmethcacheauth", "set_method_cache_authoritativeness", "0Pi", 1 :named("inlinable"))
.annotate 'line', 2132
    nqp_get_sc_object $P5496, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5496."add_core_pirop_mapping"("settypecache", "publish_type_check_cache", "0PP", 1 :named("inlinable"))
.annotate 'line', 2133
    nqp_get_sc_object $P5497, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5497."add_core_pirop_mapping"("objprimspec", "repr_get_primitive_type_spec", "IP", 1 :named("inlinable"))
.annotate 'line', 2134
    nqp_get_sc_object $P5498, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5498."add_core_pirop_mapping"("setcontspec", "set_container_spec", "0PPsP", 1 :named("inlinable"))
.annotate 'line', 2135
    nqp_get_sc_object $P5499, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5499."add_core_pirop_mapping"("setinvokespec", "set_invocation_spec", "0PPsP", 1 :named("inlinable"))
.annotate 'line', 2138
    nqp_get_sc_object $P5500, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5500."add_core_pirop_mapping"("getlex", "find_lex", "Ps")
.annotate 'line', 2139
    nqp_get_sc_object $P5501, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5501."add_core_pirop_mapping"("getlex_i", "find_lex", "Is")
.annotate 'line', 2140
    nqp_get_sc_object $P5502, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5502."add_core_pirop_mapping"("getlex_n", "find_lex", "Ns")
.annotate 'line', 2141
    nqp_get_sc_object $P5503, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5503."add_core_pirop_mapping"("getlex_s", "find_lex", "Ss")
.annotate 'line', 2142
    nqp_get_sc_object $P5504, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5504."add_core_pirop_mapping"("bindlex", "store_lex", "1sP")
.annotate 'line', 2143
    nqp_get_sc_object $P5505, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5505."add_core_pirop_mapping"("bindlex_i", "store_lex", "1si")
.annotate 'line', 2144
    nqp_get_sc_object $P5506, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5506."add_core_pirop_mapping"("bindlex_n", "store_lex", "1sn")
.annotate 'line', 2145
    nqp_get_sc_object $P5507, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5507."add_core_pirop_mapping"("bindlex_s", "store_lex", "1ss")
.annotate 'line', 2146
    nqp_get_sc_object $P5508, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5508."add_core_pirop_mapping"("getlexdyn", "find_dynamic_lex", "Ps")
.annotate 'line', 2147
    nqp_get_sc_object $P5509, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5509."add_core_pirop_mapping"("bindlexdyn", "store_dynamic_lex", "1sP")
.annotate 'line', 2150
    nqp_get_sc_object $P5510, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5510."add_core_pirop_mapping"("takeclosure", "newclosure", "PP")
.annotate 'line', 2151
    nqp_get_sc_object $P5511, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5511."add_core_pirop_mapping"("getcodeobj", "get_sub_code_object", "PP")
.annotate 'line', 2152
    nqp_get_sc_object $P5512, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5512."add_core_pirop_mapping"("setcodeobj", "set_sub_code_object", "1PP")
.annotate 'line', 2153
    nqp_get_sc_object $P5513, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5513."add_core_pirop_mapping"("getcodename", "set", "SP")
.annotate 'line', 2154
    nqp_get_sc_object $P5514, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5514."add_core_pirop_mapping"("setcodename", "assign", "1Ps")
.annotate 'line', 2155
    nqp_get_sc_object $P5515, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5517 = 'cuid_273_1361964166.213' 
    capture_lex $P5517
    newclosure $P5516, $P5517
    $P5515."add_core_op"("getcodecuid", $P5516)
.annotate 'line', 2164
    nqp_get_sc_object $P5518, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5520 = 'cuid_274_1361964166.213' 
    capture_lex $P5520
    newclosure $P5519, $P5520
    $P5518."add_core_op"("setstaticlex", $P5519)
.annotate 'line', 2191
    nqp_get_sc_object $P5521, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5523 = 'cuid_275_1361964166.213' 
    capture_lex $P5523
    newclosure $P5522, $P5523
    $P5521."add_core_op"("forceouterctx", $P5522)
.annotate 'line', 2200
    nqp_get_sc_object $P5524, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5524."add_core_pirop_mapping"("freshcoderef", "nqp_fresh_stub", "PP")
.annotate 'line', 2201
    nqp_get_sc_object $P5525, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5525."add_core_pirop_mapping"("replacecoderef", "assign", "0PP")
.annotate 'line', 2202
    nqp_get_sc_object $P5526, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5528 = 'cuid_276_1361964166.213' 
    capture_lex $P5528
    newclosure $P5527, $P5528
    $P5526."add_core_op"("markcodestatic", $P5527)
.annotate 'line', 2213
    nqp_get_sc_object $P5529, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5531 = 'cuid_277_1361964166.213' 
    capture_lex $P5531
    newclosure $P5530, $P5531
    $P5529."add_core_op"("markcodestub", $P5530)
.annotate 'line', 2226
    nqp_get_sc_object $P5532, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5532."add_core_pirop_mapping"("sha1", "nqp_sha1", "Ss")
.annotate 'line', 2227
    nqp_get_sc_object $P5533, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5533."add_core_pirop_mapping"("createsc", "nqp_create_sc", "Ps")
.annotate 'line', 2228
    nqp_get_sc_object $P5534, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5534."add_core_pirop_mapping"("scsetobj", "set", "1QiP")
.annotate 'line', 2229
    nqp_get_sc_object $P5535, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5535."add_core_pirop_mapping"("scsetcode", "nqp_add_code_ref_to_sc", "2PiP")
.annotate 'line', 2230
    nqp_get_sc_object $P5536, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5536."add_core_pirop_mapping"("scgetobj", "set", "PQi")
.annotate 'line', 2231
    nqp_get_sc_object $P5537, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5537."add_core_pirop_mapping"("scgetcode", "nqp_get_sc_code_ref", "Psi")
.annotate 'line', 2232
    nqp_get_sc_object $P5538, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5540 = 'cuid_278_1361964166.213' 
    capture_lex $P5540
    newclosure $P5539, $P5540
    $P5538."add_core_op"("scgethandle", $P5539)
.annotate 'line', 2238
    nqp_get_sc_object $P5541, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5543 = 'cuid_279_1361964166.213' 
    capture_lex $P5543
    newclosure $P5542, $P5543
    $P5541."add_core_op"("scgetobjidx", $P5542)
.annotate 'line', 2244
    nqp_get_sc_object $P5544, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5546 = 'cuid_280_1361964166.213' 
    capture_lex $P5546
    newclosure $P5545, $P5546
    $P5544."add_core_op"("scsetdesc", $P5545)
.annotate 'line', 2250
    nqp_get_sc_object $P5547, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5549 = 'cuid_281_1361964166.213' 
    capture_lex $P5549
    newclosure $P5548, $P5549
    $P5547."add_core_op"("scobjcount", $P5548)
.annotate 'line', 2256
    nqp_get_sc_object $P5550, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5550."add_core_pirop_mapping"("setobjsc", "nqp_set_sc_for_object", "0PP")
.annotate 'line', 2257
    nqp_get_sc_object $P5551, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5551."add_core_pirop_mapping"("getobjsc", "nqp_get_sc_for_object", "PP")
.annotate 'line', 2258
    nqp_get_sc_object $P5552, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5552."add_core_pirop_mapping"("serialize", "nqp_serialize_sc", "SPP")
.annotate 'line', 2259
    nqp_get_sc_object $P5553, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5553."add_core_pirop_mapping"("deserialize", "nqp_deserialize_sc", "0sPPPP")
.annotate 'line', 2260
    nqp_get_sc_object $P5554, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5554."add_core_pirop_mapping"("wval", "nqp_get_sc_object", "Psi")
.annotate 'line', 2261
    nqp_get_sc_object $P5555, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5557 = 'cuid_282_1361964166.213' 
    capture_lex $P5557
    newclosure $P5556, $P5557
    $P5555."add_core_op"("scwbdisable", $P5556)
.annotate 'line', 2267
    nqp_get_sc_object $P5558, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5560 = 'cuid_283_1361964166.213' 
    capture_lex $P5560
    newclosure $P5559, $P5560
    $P5558."add_core_op"("scwbenable", $P5559)
.annotate 'line', 2273
    nqp_get_sc_object $P5561, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5561."add_core_pirop_mapping"("pushcompsc", "nqp_push_compiling_sc", "0P")
.annotate 'line', 2274
    nqp_get_sc_object $P5562, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5564 = 'cuid_284_1361964166.213' 
    capture_lex $P5564
    newclosure $P5563, $P5564
    $P5562."add_core_op"("popcompsc", $P5563)
.annotate 'line', 2282
    nqp_get_sc_object $P5565, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5565."add_core_pirop_mapping"("getcomp", "compreg", "Ps")
.annotate 'line', 2283
    nqp_get_sc_object $P5566, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5566."add_core_pirop_mapping"("bindcomp", "compreg", "1sP")
.annotate 'line', 2284
    nqp_get_sc_object $P5567, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5567."add_core_pirop_mapping"("getcurhllsym", "get_hll_global", "Ps")
.annotate 'line', 2285
    nqp_get_sc_object $P5568, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5568."add_core_pirop_mapping"("bindcurhllsym", "set_hll_global", "1sP")
.annotate 'line', 2286
    nqp_get_sc_object $P5569, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5569."add_core_pirop_mapping"("loadbytecode", "load_bytecode", "0s")
.annotate 'line', 2287
    nqp_get_sc_object $P5570, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5572 = 'cuid_285_1361964166.213' 
    capture_lex $P5572
    newclosure $P5571, $P5572
    $P5570."add_core_op"("sethllconfig", $P5571)
.annotate 'line', 2295
    nqp_get_sc_object $P5573, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5573."add_core_pirop_mapping"("nfafromstatelist", "nqp_nfa_from_statelist", "PPP")
.annotate 'line', 2296
    nqp_get_sc_object $P5574, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5574."add_core_pirop_mapping"("nfatostatelist", "nqp_nfa_to_statelist", "PP")
.annotate 'line', 2297
    nqp_get_sc_object $P5575, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5575."add_core_pirop_mapping"("nfarunproto", "nqp_nfa_run_proto", "PPsi")
.annotate 'line', 2298
    nqp_get_sc_object $P5576, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5576."add_core_pirop_mapping"("nfarunalt", "nqp_nfa_run_alt", "0PsiPPP")
.annotate 'line', 2301
    nqp_get_sc_object $P5577, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5577."add_core_pirop_mapping"("exit", "exit", "0i", 1 :named("inlinable"))
.annotate 'line', 2302
    nqp_get_sc_object $P5578, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5578."add_core_pirop_mapping"("sleep", "sleep", "0n", 1 :named("inlinable"))
    .const 'Sub' $P5579 = 'cuid_287_1361964166.213' 
    capture_lex $P5579
    $P5580 = $P5579()
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "handle_arg" :subid("cuid_143_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1159
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .param pmc _lex_param_5 :named("coerce") :optional 
    .param int haz_param_1 :opt_flag 
    .const 'Sub' $P5020 = 'cuid_142_1361964166.213' 
    capture_lex $P5020 
    .lex "$arg_post", $P101 
    .lex "$result", $P102 
    .lex "$arg", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$ops", _lex_param_2 
    .lex "@pos_arg_results", _lex_param_3 
    .lex "@named_arg_results", _lex_param_4 
    .lex "$coerce", _lex_param_5 
    if haz_param_1, default20
    nqp_get_sc_object $P5019, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_5, $P5019
  default20:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1160
    $P5003 = _lex_param_1."as_post"(_lex_param_0)
    set $P101, $P5003
    unless _lex_param_5 goto if10_end11 
.annotate 'line', 1161
.annotate 'line', 1162
    $P5004 = _lex_param_1."coerce"($P101, _lex_param_5)
    set $P101, $P5004
  if10_end11:
.annotate 'line', 1164
    _lex_param_2."push"($P101)
.annotate 'line', 1165
    $P5005 = $P101."result"()
    set $P102, $P5005
.annotate 'line', 1166
    $P5006 = _lex_param_0."flat"()
    unless $P5006 goto if11_else12 
    set $S5002, $P102
    concat $S5001, $S5002, " :flat"
    box $P5007, $S5001
    set $P102, $P5007
.annotate 'line', 1168
    $P5008 = _lex_param_0."named"()
    set $P5010, $P5008
    unless $P5008 goto if12_end15 
    set $S5004, $P102
    concat $S5003, $S5004, " :named"
    box $P5009, $S5003
    set $P102, $P5009
    set $P5010, $P102
  if12_end15:
    goto if11_end13
  if11_else12:
.annotate 'line', 1172
    $P5011 = _lex_param_0."named"()
    set $P5014, $P5011
    unless $P5011 goto if13_end17 
    .const 'Sub' $P5012 = 'cuid_142_1361964166.213' 
    capture_lex $P5012
    $P5013 = $P5012($P5011)
    set $P5014, $P5013
  if13_end17:
  if11_end13:
.annotate 'line', 1175
    $P5015 = _lex_param_0."named"()
    unless $P5015 goto if14_else18 
.annotate 'line', 1176
    $P5016 = _lex_param_4."push"($P102)
    set $P5018, $P5016
    goto if14_end19
  if14_else18:
.annotate 'line', 1178
.annotate 'line', 1179
    $P5017 = _lex_param_3."push"($P102)
    set $P5018, $P5017
  if14_end19:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_142_1361964166.213") :anon :lex :outer("cuid_143_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1172
    .param pmc _lex_param_0 
    .lex "$name", _lex_param_0 
    find_lex $P5001, "$result"
    set $S5004, $P5001
    concat $S5003, $S5004, " :named("
.annotate 'line', 1173
    find_lex $P5002, "$qastcomp"
    $P5003 = $P5002."escape"(_lex_param_0)
    set $S5005, $P5003
    concat $S5002, $S5003, $S5005
    concat $S5001, $S5002, ")"
    box $P5004, $S5001
    store_lex "$result", $P5004
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_145_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 10
    .const 'Sub' $P5003 = 'cuid_1_1361964166.213' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_2_1361964166.213' 
    capture_lex $P5003 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_1_1361964166.213' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_2_1361964166.213' 
    capture_lex $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_1_1361964166.213") :anon :lex :outer("cuid_145_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 13
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("result") 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$result", _lex_param_1 
    .local pmc fb_tmp_1 
    .local pmc pkg_lookup_tmp_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 3
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    set pkg_lookup_tmp_1, $P5006
    get_who $P5007, pkg_lookup_tmp_1
    exists $I5003, $P5007["PIRT"]
    unless $I5003 goto if19_else29 
    get_who $P5009, pkg_lookup_tmp_1
    set $P5008, $P5009["PIRT"]
    set $P5011, $P5008
    goto if19_end30
  if19_else29:
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5010
  if19_end30:
    get_who $P5005, $P5011
    set fb_tmp_1, $P5005
    repr_defined $I5002, fb_tmp_1
    unless $I5002 goto if18_else27 
    set $P5012, fb_tmp_1["Node"]
    set $P5014, $P5012
    goto if18_end28
  if18_else27:
    null $P5013
    set $P5014, $P5013
  if18_end28:
    unless_null $P5014, vivi_2031
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5014, $P5015
  vivi_2031:
    type_check $I5001, _lex_param_1, $P5014
    unless $I5001 goto if17_else25 
.annotate 'line', 16
    $P5016 = _lex_param_1."result"()
    set $P5017, $P5016
    goto if17_end26
  if17_else25:
    set $P5017, _lex_param_1
  if17_end26:
    set $S5001, $P5017
    repr_bind_attr_str $P101, $P5004, "$!result", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_2_1361964166.213") :anon :lex :outer("cuid_145_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 20
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 3
    repr_get_attr_str $S5001, $P5001, $P5002, "$!result"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_146_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 25
    .const 'Sub' $P5016 = 'cuid_3_1361964166.213' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_4_1361964166.213' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_5_1361964166.213' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_6_1361964166.213' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_7_1361964166.213' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_10_1361964166.213' 
    capture_lex $P5016 
    .const 'Sub' $P5016 = 'cuid_11_1361964166.213' 
    capture_lex $P5016 
    .lex "%op_compilers", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    .const 'Sub' $P5004 = 'cuid_3_1361964166.213' 
    capture_lex $P5004
    newclosure $P5003, $P5004
    set $P5002["call"], $P5003
    .const 'Sub' $P5006 = 'cuid_4_1361964166.213' 
    capture_lex $P5006
    newclosure $P5005, $P5006
    set $P5002["callmethod"], $P5005
    .const 'Sub' $P5008 = 'cuid_5_1361964166.213' 
    capture_lex $P5008
    newclosure $P5007, $P5008
    set $P5002["return"], $P5007
    .const 'Sub' $P5010 = 'cuid_6_1361964166.213' 
    capture_lex $P5010
    newclosure $P5009, $P5010
    set $P5002["yield"], $P5009
    .const 'Sub' $P5012 = 'cuid_7_1361964166.213' 
    capture_lex $P5012
    newclosure $P5011, $P5012
    set $P5002["tailcall"], $P5011
    .const 'Sub' $P5014 = 'cuid_10_1361964166.213' 
    capture_lex $P5014
    newclosure $P5013, $P5014
    set $P5002["inline"], $P5013
    set $P101, $P5002
    .const 'Sub' $P5015 = 'cuid_11_1361964166.213' 
    capture_lex $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_3_1361964166.213") :anon :lex :outer("cuid_146_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 27
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_2 
    find_dynamic_lex $P5001, "$*HAS_RESULT"
    unless_null $P5001, fallback34
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5002, $P5003
    set fb_tmp_2, $P5002
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if22_else35 
    set $P5004, fb_tmp_2["$HAS_RESULT"]
    set $P5006, $P5004
    goto if22_end36
  if22_else35:
    null $P5005
    set $P5006, $P5005
  if22_end36:
    unless_null $P5006, vivi_2337
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_2337:
    unless_null $P5006, vivi_2438
    die "Contextual $*HAS_RESULT not found"
    box $P5008, "Contextual $*HAS_RESULT not found"
    set $P5006, $P5008
  vivi_2438:
    set $P5001, $P5006
  fallback34:
    unless $P5001 goto if21_else32 
.annotate 'line', 29
    $P5009 = _lex_param_0."shift"()
    set $S5007, $P5009
    concat $S5006, $S5007, " = "
    set $S5008, $S5006
    goto if21_end33
  if21_else32:
    set $S5008, ""
  if21_end33:
    concat $S5005, "    ", $S5008
.annotate 'line', 30
    $P5010 = _lex_param_0."shift"()
    set $S5009, $P5010
    concat $S5004, $S5005, $S5009
    concat $S5003, $S5004, "("
    join $S5010, ", ", _lex_param_0
    concat $S5002, $S5003, $S5010
    concat $S5001, $S5002, ")"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_4_1361964166.213") :anon :lex :outer("cuid_146_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 32
    .param pmc _lex_param_0 
    .lex "$pir", $P101 
    .lex "$name", $P102 
    .lex "$invocant", $P103 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_3 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    find_dynamic_lex $P5004, "$*HAS_RESULT"
    unless_null $P5004, fallback41
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_3, $P5005
    repr_defined $I5001, fb_tmp_3
    unless $I5001 goto if26_else42 
    set $P5007, fb_tmp_3["$HAS_RESULT"]
    set $P5009, $P5007
    goto if26_end43
  if26_else42:
    null $P5008
    set $P5009, $P5008
  if26_end43:
    unless_null $P5009, vivi_2744
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_2744:
    unless_null $P5009, vivi_2845
    die "Contextual $*HAS_RESULT not found"
    box $P5011, "Contextual $*HAS_RESULT not found"
    set $P5009, $P5011
  vivi_2845:
    set $P5004, $P5009
  fallback41:
    unless $P5004 goto if25_else39 
.annotate 'line', 33
    $P5012 = _lex_param_0."shift"()
    set $S5003, $P5012
    concat $S5002, $S5003, " = "
    set $S5004, $S5002
    goto if25_end40
  if25_else39:
    set $S5004, ""
  if25_end40:
    concat $S5001, "    ", $S5004
    box $P5013, $S5001
    set $P101, $P5013
.annotate 'line', 34
    $P5014 = _lex_param_0."shift"()
    set $P102, $P5014
.annotate 'line', 35
    $P5015 = _lex_param_0."shift"()
    set $P103, $P5015
    set $S5011, $P101
    set $S5012, $P103
    concat $S5010, $S5011, $S5012
    concat $S5009, $S5010, "."
    set $S5013, $P102
    concat $S5008, $S5009, $S5013
    concat $S5007, $S5008, "("
    join $S5014, ", ", _lex_param_0
    concat $S5006, $S5007, $S5014
    concat $S5005, $S5006, ")"
    .return ($S5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_5_1361964166.213") :anon :lex :outer("cuid_146_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 38
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    join $S5003, ", ", _lex_param_0
    concat $S5002, "    .return (", $S5003
    concat $S5001, $S5002, ")"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_6_1361964166.213") :anon :lex :outer("cuid_146_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 41
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    box $P5001, "yield compilation NYI"
    die $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_7_1361964166.213") :anon :lex :outer("cuid_146_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 44
    .param pmc _lex_param_0 
    .lex "@args", _lex_param_0 
    box $P5001, "tailcall compilation NYI"
    die $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_10_1361964166.213") :anon :lex :outer("cuid_146_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 47
    .param pmc _lex_param_0 
    .const 'Sub' $P5020 = 'cuid_147_1361964166.213' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_148_1361964166.213' 
    capture_lex $P5020 
    .lex "$pir", $P101 
    .lex "$i", $P102 
    .lex "@args", _lex_param_0 
    .local pmc fb_tmp_4 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    find_dynamic_lex $P5003, "$*HAS_RESULT"
    unless_null $P5003, fallback48
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_4, $P5004
    repr_defined $I5001, fb_tmp_4
    unless $I5001 goto if30_else49 
    set $P5006, fb_tmp_4["$HAS_RESULT"]
    set $P5008, $P5006
    goto if30_end50
  if30_else49:
    null $P5007
    set $P5008, $P5007
  if30_end50:
    unless_null $P5008, vivi_3151
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_3151:
    unless_null $P5008, vivi_3252
    die "Contextual $*HAS_RESULT not found"
    box $P5010, "Contextual $*HAS_RESULT not found"
    set $P5008, $P5010
  vivi_3252:
    set $P5003, $P5008
  fallback48:
    unless $P5003 goto if29_else46 
    .const 'Sub' $P5011 = 'cuid_147_1361964166.213' 
    capture_lex $P5011
    $P5012 = $P5011()
    goto if29_end47
  if29_else46:
.annotate 'line', 53
.annotate 'line', 54
    $P5013 = _lex_param_0."shift"()
    set $P101, $P5013
  if29_end47:
    box $P5014, 0
    set $P102, $P5014
    set $P5015, _lex_param_0
    iter $P5017, _lex_param_0
  for_next83:
    unless $P5017, for_done85
    shift $P5019, $P5017
  for_redo84:
    .const 'Sub' $P5018 = 'cuid_148_1361964166.213' 
    capture_lex $P5018
    $P5015 = $P5018($P5019)
    goto for_next83
  for_done85:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_147_1361964166.213") :anon :lex :outer("cuid_10_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 49
    .const 'Sub' $P5018 = 'cuid_8_1361964166.213' 
    capture_lex $P5018 
    .lex "$result", $P101 
    .local pmc fb_tmp_5 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 50
    find_lex $P5002, "@args"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 51
    find_lex $P5004, "@args"
    $P5005 = $P5004."shift"()
    find_lex $P5007, "$?PACKAGE"
    get_who $P5006, $P5007
    set fb_tmp_5, $P5006
    repr_defined $I5001, fb_tmp_5
    unless $I5001 goto if33_else53 
    set $P5008, fb_tmp_5["NQPRegex"]
    set $P5010, $P5008
    goto if33_end54
  if33_else53:
    null $P5009
    set $P5010, $P5009
  if33_end54:
    unless_null $P5010, vivi_3556
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5012, $P5013
    set $P5011, $P5012["NQPRegex"]
    unless_null $P5011, vivi_3455
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5014
  vivi_3455:
    set $P5010, $P5011
  vivi_3556:
    .const 'Sub' $P5015 = 'cuid_8_1361964166.213' 
    capture_lex $P5015
    $P5016 = $P5010."new"($P5015)
    $P5017 = "&subst"($P5005, $P5016, $P101, 1 :named("global"))
    store_lex "$pir", $P5017
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_8_1361964166.213") :anon :lex :outer("cuid_147_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 51
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx36_start
    .local string rx36_tgt
    .local int rx36_pos
    .local int rx36_off
    .local int rx36_eos
    .local int rx36_rep
    .local pmc rx36_cur
    .local pmc rx36_curclass
    .local pmc rx36_bstack
    .local pmc rx36_cstack
    rx36_start = self."!cursor_start_all"()
    set rx36_cur, rx36_start[0]
    set rx36_tgt, rx36_start[1]
    set rx36_pos, rx36_start[2]
    set rx36_curclass, rx36_start[3]
    set rx36_bstack, rx36_start[4]
    set $I19, rx36_start[5]
    store_lex unicode:"$\x{a2}", rx36_cur
    length rx36_eos, rx36_tgt
    eq $I19, 1, rx36_restart59
    gt rx36_pos, rx36_eos, rx36_fail60
    repr_get_attr_int $I11, self, rx36_curclass, "$!from"
    ne $I11, -1, rxscan37_done66
    goto rxscan37_scan65
  rxscan37_loop64:
    inc rx36_pos
    gt rx36_pos, rx36_eos, rx36_fail60
    repr_bind_attr_int rx36_cur, rx36_curclass, "$!from", rx36_pos
  rxscan37_scan65:
    nqp_rxmark rx36_bstack, rxscan37_loop64, rx36_pos, 0
  rxscan37_done66:
    add $I11, rx36_pos, 2
    gt $I11, rx36_eos, rx36_fail60
    substr $S10, rx36_tgt, rx36_pos, 2
    ne $S10, ucs4:"%r", rx36_fail60
    add rx36_pos, 2
    rx36_cur."!cursor_pass"(rx36_pos, 'backtrack'=>1)
    .return (rx36_cur)
  rx36_restart59:
    repr_get_attr_obj rx36_cstack, rx36_cur, rx36_curclass, "$!cstack"
  rx36_fail60:
    unless rx36_bstack, rx36_done58
    pop $I19, rx36_bstack
    if_null rx36_cstack, rx36_cstack_done63
    unless rx36_cstack, rx36_cstack_done63
    dec $I19
    set $P11, rx36_cstack[$I19]
  rx36_cstack_done63:
    pop rx36_rep, rx36_bstack
    pop rx36_pos, rx36_bstack
    pop $I19, rx36_bstack
    lt rx36_pos, -1, rx36_done58
    lt rx36_pos, 0, rx36_fail60
    eq $I19, 0, rx36_fail60
    nqp_islist $I20, rx36_cstack
    unless $I20, rx36_jump61
    elements $I18, rx36_bstack
    le $I18, 0, rx36_cut62
    dec $I18
    set $I18, rx36_bstack[$I18]
  rx36_cut62:
    assign rx36_cstack, $I18
  rx36_jump61:
    jump $I19
  rx36_done58:
    rx36_cur."!cursor_fail"()
    .return (rx36_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_148_1361964166.213") :anon :lex :outer("cuid_10_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 57
    .param pmc _lex_param_0 
    .const 'Sub' $P5016 = 'cuid_9_1361964166.213' 
    capture_lex $P5016 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_6 
.annotate 'line', 58
    find_lex $P5001, "$pir"
    find_lex $P5003, "$?PACKAGE"
    get_who $P5002, $P5003
    set fb_tmp_6, $P5002
    repr_defined $I5001, fb_tmp_6
    unless $I5001 goto if38_else67 
    set $P5004, fb_tmp_6["NQPRegex"]
    set $P5006, $P5004
    goto if38_end68
  if38_else67:
    null $P5005
    set $P5006, $P5005
  if38_end68:
    unless_null $P5006, vivi_4070
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set $P5007, $P5008["NQPRegex"]
    unless_null $P5007, vivi_3969
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5010
  vivi_3969:
    set $P5006, $P5007
  vivi_4070:
    .const 'Sub' $P5011 = 'cuid_9_1361964166.213' 
    capture_lex $P5011
    $P5012 = $P5006."new"($P5011)
    $P5013 = "&subst"($P5001, $P5012, _lex_param_0, 1 :named("global"))
    store_lex "$pir", $P5013
    find_lex $P5014, "$i"
    set $N5002, $P5014
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$i", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_9_1361964166.213") :anon :lex :outer("cuid_148_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 58
    .param pmc _lex_param_0 
    .lex utf8:"$\x{a2}", $P101 
    .lex "$/", $P102 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx41_start
    .local string rx41_tgt
    .local int rx41_pos
    .local int rx41_off
    .local int rx41_eos
    .local int rx41_rep
    .local pmc rx41_cur
    .local pmc rx41_curclass
    .local pmc rx41_bstack
    .local pmc rx41_cstack
    rx41_start = self."!cursor_start_all"()
    set rx41_cur, rx41_start[0]
    set rx41_tgt, rx41_start[1]
    set rx41_pos, rx41_start[2]
    set rx41_curclass, rx41_start[3]
    set rx41_bstack, rx41_start[4]
    set $I19, rx41_start[5]
    store_lex unicode:"$\x{a2}", rx41_cur
    length rx41_eos, rx41_tgt
    eq $I19, 1, rx41_restart73
    gt rx41_pos, rx41_eos, rx41_fail74
    repr_get_attr_int $I11, self, rx41_curclass, "$!from"
    ne $I11, -1, rxscan42_done80
    goto rxscan42_scan79
  rxscan42_loop78:
    inc rx41_pos
    gt rx41_pos, rx41_eos, rx41_fail74
    repr_bind_attr_int rx41_cur, rx41_curclass, "$!from", rx41_pos
  rxscan42_scan79:
    nqp_rxmark rx41_bstack, rxscan42_loop78, rx41_pos, 0
  rxscan42_done80:
    add $I11, rx41_pos, 1
    gt $I11, rx41_eos, rx41_fail74
    substr $S10, rx41_tgt, rx41_pos, 1
    ne $S10, ucs4:"%", rx41_fail74
    add rx41_pos, 1
    find_lex $P5001, "$i"
    repr_bind_attr_int rx41_cur, rx41_curclass, "$!pos", rx41_pos
    $P11 = rx41_cur."!INTERPOLATE"($P5001, 0)
    repr_get_attr_int $I11, $P11, rx41_curclass, "$!pos"
    lt $I11, 0, rx41_fail74
    goto rxsubrule43_pass81
  rxsubrule43_back82:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx41_curclass, "$!pos"
    lt $I11, 0, rx41_fail74
  rxsubrule43_pass81:
    rx41_cstack = rx41_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule43_back82
    push rx41_bstack, $I11
    push rx41_bstack, 0
    push rx41_bstack, rx41_pos
    elements $I11, rx41_cstack
    push rx41_bstack, $I11
    repr_get_attr_int rx41_pos, $P11, rx41_curclass, "$!pos"
    rx41_cur."!cursor_pass"(rx41_pos, 'backtrack'=>1)
    .return (rx41_cur)
  rx41_restart73:
    repr_get_attr_obj rx41_cstack, rx41_cur, rx41_curclass, "$!cstack"
  rx41_fail74:
    unless rx41_bstack, rx41_done72
    pop $I19, rx41_bstack
    if_null rx41_cstack, rx41_cstack_done77
    unless rx41_cstack, rx41_cstack_done77
    dec $I19
    set $P11, rx41_cstack[$I19]
  rx41_cstack_done77:
    pop rx41_rep, rx41_bstack
    pop rx41_pos, rx41_bstack
    pop $I19, rx41_bstack
    lt rx41_pos, -1, rx41_done72
    lt rx41_pos, 0, rx41_fail74
    eq $I19, 0, rx41_fail74
    nqp_islist $I20, rx41_cstack
    unless $I20, rx41_jump75
    elements $I18, rx41_bstack
    le $I18, 0, rx41_cut76
    dec $I18
    set $I18, rx41_bstack[$I18]
  rx41_cut76:
    assign rx41_cstack, $I18
  rx41_jump75:
    jump $I19
  rx41_done72:
    rx41_cur."!cursor_fail"()
    .return (rx41_cur) 
.end
.HLL "nqp"
.namespace []
.sub "children_pir" :subid("cuid_11_1361964166.213") :anon :lex :outer("cuid_146_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 64
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5007 = 'cuid_150_1361964166.213' 
    capture_lex $P5007 
    .lex "@parts", $P101 
    .lex "self", _lex_param_0 
    .lex "@children", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    set $P5002, _lex_param_1
    iter $P5004, _lex_param_1
  for_next131:
    unless $P5004, for_done133
    shift $P5006, $P5004
  for_redo132:
    .const 'Sub' $P5005 = 'cuid_150_1361964166.213' 
    capture_lex $P5005
    $P5002 = $P5005($P5006)
    goto for_next131
  for_done133:
    join $S5001, "\n", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_150_1361964166.213") :anon :lex :outer("cuid_11_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 66
    .param pmc _lex_param_0 
    .const 'Sub' $P5029 = 'cuid_149_1361964166.213' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_151_1361964166.213' 
    capture_lex $P5029 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_11 
    .local pmc pkg_lookup_tmp_2 
    .local pmc fb_tmp_12 
    .local pmc pkg_viv_tmp_1 
    nqp_islist $I5001, _lex_param_0
    unless $I5001 goto if44_else86 
    .const 'Sub' $P5001 = 'cuid_149_1361964166.213' 
    capture_lex $P5001
    $P5002 = $P5001()
    set $P5028, $P5002
    goto if44_end87
  if44_else86:
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    set pkg_lookup_tmp_2, $P5004
    get_who $P5005, pkg_lookup_tmp_2
    exists $I5004, $P5005["PIRT"]
    unless $I5004 goto if61_else119 
    get_who $P5007, pkg_lookup_tmp_2
    set $P5006, $P5007["PIRT"]
    set $P5009, $P5006
    goto if61_end120
  if61_else119:
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5008
  if61_end120:
    get_who $P5003, $P5009
    set fb_tmp_11, $P5003
    repr_defined $I5003, fb_tmp_11
    unless $I5003 goto if60_else117 
    set $P5010, fb_tmp_11["Sub"]
    set $P5012, $P5010
    goto if60_end118
  if60_else117:
    null $P5011
    set $P5012, $P5011
  if60_end118:
    unless_null $P5012, vivi_62121
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_62121:
    type_check $I5002, _lex_param_0, $P5012
    unless $I5002 goto if59_else115 
.annotate 'line', 99
    find_dynamic_lex $P5014, "@*PIRT_BLOCKS"
    unless_null $P5014, fallback122
    nqp_get_sc_object $P5016, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5015, $P5016
    set pkg_viv_tmp_1, $P5015
    set fb_tmp_12, pkg_viv_tmp_1
    repr_defined $I5005, fb_tmp_12
    unless $I5005 goto if63_else123 
    set $P5017, fb_tmp_12["@PIRT_BLOCKS"]
    set $P5019, $P5017
    goto if63_end124
  if63_else123:
    null $P5018
    set $P5019, $P5018
  if63_end124:
    unless_null $P5019, vivi_64125
    new $P5020, 'ResizablePMCArray'
    set pkg_viv_tmp_1["@PIRT_BLOCKS"], $P5020
    set $P5019, $P5020
  vivi_64125:
    unless_null $P5019, vivi_65126
    die "Contextual @*PIRT_BLOCKS not found"
    box $P5021, "Contextual @*PIRT_BLOCKS not found"
    set $P5019, $P5021
  vivi_65126:
    set $P5014, $P5019
  fallback122:
    push $P5014, _lex_param_0
    set $P5027, $P5014
    goto if59_end116
  if59_else115:
    nqp_get_sc_object $P5022, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 6
    type_check $I5006, _lex_param_0, $P5022
    unless $I5006 goto if66_else127 
    .const 'Sub' $P5023 = 'cuid_151_1361964166.213' 
    capture_lex $P5023
    $P5024 = $P5023()
    set $P5026, $P5024
    goto if66_end128
  if66_else127:
.annotate 'line', 106
    box $P5025, "Unexpected object in PIRT tree"
    die $P5025
    set $P5026, $P5025
  if66_end128:
    set $P5027, $P5026
  if59_end116:
    set $P5028, $P5027
  if44_end87:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_149_1361964166.213") :anon :lex :outer("cuid_150_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 67
    .lex "$op_name", $P101 
    .lex "@op_args", $P102 
    .lex "$i", $P103 
    .lex "$c", $P104 
    .lex "$arg", $P105 
    .lex "$*HAS_RESULT", $P106 
    .lex "$result", $P107 
    .local pmc fb_tmp_7 
    .local pmc fb_tmp_8 
    .local pmc fb_tmp_9 
    .local pmc fb_tmp_10 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    find_lex $P5008, "$_"
    set fb_tmp_7, $P5008
    repr_defined $I5001, fb_tmp_7
    unless $I5001 goto if45_else88 
    set $P5009, fb_tmp_7[0]
    set $P5011, $P5009
    goto if45_end89
  if45_else88:
    null $P5010
    set $P5011, $P5010
  if45_end89:
    unless_null $P5011, vivi_4690
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_4690:
    set $P101, $P5011
    box $P5013, 1
    set $P103, $P5013
    find_lex $P5014, "$_"
    elements $I5002, $P5014
    box $P5015, $I5002
    set $P104, $P5015
    box $P5016, 0
    set $P106, $P5016
  while47_test91:
    set $N5001, $P103
    set $N5002, $P104
    islt $I5003, $N5001, $N5002
    box $P5030, $I5003
    set $P5029, $P5030
    unless $I5003 goto while47_done95 
  while47_redo93:
.annotate 'line', 75
    find_lex $P5017, "$_"
    set fb_tmp_8, $P5017
    repr_defined $I5004, fb_tmp_8
    unless $I5004 goto if48_else96 
    set $I5005, $P103
    set $P5018, fb_tmp_8[$I5005]
    set $P5020, $P5018
    goto if48_end97
  if48_else96:
    null $P5019
    set $P5020, $P5019
  if48_end97:
    unless_null $P5020, vivi_4998
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_4998:
    set $P105, $P5020
    nqp_get_sc_object $P5022, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 6
    type_check $I5006, $P105, $P5022
    unless $I5006 goto if50_else99 
.annotate 'line', 77
.annotate 'line', 78
    $P5023 = $P105."result"()
    push $P102, $P5023
    goto if50_end100
  if50_else99:
    nqp_get_sc_object $P5024, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 3
    type_check $I5007, $P105, $P5024
    unless $I5007 goto if51_else101 
.annotate 'line', 80
.annotate 'line', 81
    $P5025 = $P105."result"()
    set $P107, $P5025
    box $P5026, 1
    set $P106, $P5026
    set $P5027, $P106
    goto if51_end102
  if51_else101:
.annotate 'line', 84
    push $P102, $P105
    set $P5027, $P102
  if51_end102:
  if50_end100:
    set $N5004, $P103
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5028, $N5003
    set $P103, $P5028
    set $P5029, $P103
    goto while47_test91 
  while47_done95:
    unless_null $P106, fallback105
    nqp_get_sc_object $P5032, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5031, $P5032
    set fb_tmp_9, $P5031
    repr_defined $I5008, fb_tmp_9
    unless $I5008 goto if53_else106 
    set $P5033, fb_tmp_9["$HAS_RESULT"]
    set $P5035, $P5033
    goto if53_end107
  if53_else106:
    null $P5034
    set $P5035, $P5034
  if53_end107:
    unless_null $P5035, vivi_54108
    nqp_get_sc_object $P5036, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5035, $P5036
  vivi_54108:
    unless_null $P5035, vivi_55109
    die "Contextual $*HAS_RESULT not found"
    box $P5037, "Contextual $*HAS_RESULT not found"
    set $P5035, $P5037
  vivi_55109:
    set $P106, $P5035
  fallback105:
    unless $P106 goto if52_end104 
.annotate 'line', 89
    unshift $P102, $P107
  if52_end104:
    find_lex $P5038, "%op_compilers"
    set $S5001, $P101
    exists $I5009, $P5038[$S5001]
    unless $I5009 goto if56_else110 
.annotate 'line', 92
    find_lex $P5039, "@parts"
.annotate 'line', 93
    find_lex $P5040, "%op_compilers"
    set fb_tmp_10, $P5040
    repr_defined $I5010, fb_tmp_10
    unless $I5010 goto if57_else112 
    set $S5002, $P101
    set $P5041, fb_tmp_10[$S5002]
    set $P5043, $P5041
    goto if57_end113
  if57_else112:
    null $P5042
    set $P5043, $P5042
  if57_end113:
    unless_null $P5043, vivi_58114
    nqp_get_sc_object $P5044, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5043, $P5044
  vivi_58114:
    $P5045 = $P5043($P102)
    push $P5039, $P5045
    set $P5048, $P5039
    goto if56_end111
  if56_else110:
.annotate 'line', 95
    find_lex $P5046, "@parts"
    set $S5006, $P101
    concat $S5005, "    ", $S5006
    concat $S5004, $S5005, " "
    join $S5007, ", ", $P102
    concat $S5003, $S5004, $S5007
    box $P5047, $S5003
    push $P5046, $P5047
    set $P5048, $P5046
  if56_end111:
    .return ($P5048) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_151_1361964166.213") :anon :lex :outer("cuid_150_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 102
    .lex "$pir", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 103
    find_lex $P5002, "$_"
    $P5003 = $P5002."pir"()
    set $P101, $P5003
    set $S5001, $P101
    iseq $I5001, $S5001, ""
    box $P5006, $I5001
    set $P5005, $P5006
    if $I5001 goto unless67_end130 
    find_lex $P5004, "@parts"
    push $P5004, $P101
    set $P5005, $P5004
  unless67_end130:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_152_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 114
    .const 'Sub' $P5015 = 'cuid_12_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_13_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_14_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_15_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_16_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_17_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_18_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_19_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_20_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_21_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_22_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_23_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_24_1361964166.213' 
    capture_lex $P5015 
    .const 'Sub' $P5015 = 'cuid_25_1361964166.213' 
    capture_lex $P5015 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_12_1361964166.213' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_13_1361964166.213' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_14_1361964166.213' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_15_1361964166.213' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_16_1361964166.213' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_17_1361964166.213' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_18_1361964166.213' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_19_1361964166.213' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_20_1361964166.213' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_21_1361964166.213' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_22_1361964166.213' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_23_1361964166.213' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_24_1361964166.213' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_25_1361964166.213' 
    capture_lex $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "escape" :subid("cuid_12_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 126
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$esc", $P101 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    set $S5002, _lex_param_1
    escape $S5001, $S5002
    box $P5002, $S5001
    set $P101, $P5002
    set $S5003, $P101
    index $I5002, $S5003, utf8:"\\x", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if68_else134 
    set $S5006, $P101
    concat $S5005, "utf8:\"", $S5006
    concat $S5004, $S5005, "\""
    set $S5015, $S5004
    goto if68_end135
  if68_else134:
    set $S5007, $P101
    index $I5004, $S5007, unicode:"\\u", 0
    set $N5003, $I5004
    set $N5004, 0
    isge $I5003, $N5003, $N5004
    unless $I5003 goto if69_else136 
    set $S5010, $P101
    concat $S5009, "unicode:\"", $S5010
    concat $S5008, $S5009, "\""
    set $S5014, $S5008
    goto if69_end137
  if69_else136:
    set $S5013, $P101
    concat $S5012, "\"", $S5013
    concat $S5011, $S5012, "\""
    set $S5014, $S5011
  if69_end137:
    set $S5015, $S5014
  if68_end135:
    .return ($S5015) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_13_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 135
    .param pmc _lex_param_0 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    new $P5005, 'ResizablePMCArray'
    setattribute $P101, $P5004, "@!children", $P5005
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "push" :subid("cuid_14_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 141
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!children"
    push $P5003, _lex_param_1
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "push_pirop" :subid("cuid_15_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 145
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .param pmc _lex_param_2 :named("result") :optional 
    .param int haz_param_2 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@opbits", _lex_param_1 
    .lex "$result", _lex_param_2 
    if haz_param_2, default140
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5006
  default140:
    unless _lex_param_2 goto if70_end139 
.annotate 'line', 146
.annotate 'line', 147
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 3
    $P5002 = $P5001."new"(_lex_param_2)
    push _lex_param_1, $P5002
  if70_end139:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!children"
    push $P5005, _lex_param_1
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "subid" :subid("cuid_16_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 152
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_13 
    unless _lex_param_1 goto if71_else141 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    set fb_tmp_13, _lex_param_1
    repr_defined $I5001, fb_tmp_13
    unless $I5001 goto if72_else143 
    set $P5003, fb_tmp_13[0]
    set $P5005, $P5003
    goto if72_end144
  if72_else143:
    null $P5004
    set $P5005, $P5004
  if72_end144:
    unless_null $P5005, vivi_73145
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_73145:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!subid", $S5001
    set $S5003, $S5001
    goto if71_end142
  if71_else141:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!subid"
    set $S5003, $S5002
  if71_end142:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "pirflags" :subid("cuid_17_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 156
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_14 
    unless _lex_param_1 goto if74_else146 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    set fb_tmp_14, _lex_param_1
    repr_defined $I5001, fb_tmp_14
    unless $I5001 goto if75_else148 
    set $P5003, fb_tmp_14[0]
    set $P5005, $P5003
    goto if75_end149
  if75_else148:
    null $P5004
    set $P5005, $P5004
  if75_end149:
    unless_null $P5005, vivi_76150
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_76150:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!pirflags", $S5001
    set $S5003, $S5001
    goto if74_end147
  if74_else146:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!pirflags"
    set $S5003, $S5002
  if74_end147:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_18_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 160
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_15 
    unless _lex_param_1 goto if77_else151 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    set fb_tmp_15, _lex_param_1
    repr_defined $I5001, fb_tmp_15
    unless $I5001 goto if78_else153 
    set $P5003, fb_tmp_15[0]
    set $P5005, $P5003
    goto if78_end154
  if78_else153:
    null $P5004
    set $P5005, $P5004
  if78_end154:
    unless_null $P5005, vivi_79155
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_79155:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!name", $S5001
    set $S5003, $S5001
    goto if77_end152
  if77_else151:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!name"
    set $S5003, $S5002
  if77_end152:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "loadlibs" :subid("cuid_19_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 164
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_3 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@libs", _lex_param_1 
    if haz_param_3, default158
    new $P5007, 'ResizablePMCArray'
    set _lex_param_1, $P5007
  default158:
    unless _lex_param_1 goto if80_else156 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_bind_attr_obj $P5001, $P5002, "@!loadlibs", _lex_param_1
    set $P5006, _lex_param_1
    goto if80_end157
  if80_else156:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!loadlibs"
    set $P5006, $P5005
  if80_end157:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "hll" :subid("cuid_20_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 168
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_16 
    unless _lex_param_1 goto if81_else159 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    set fb_tmp_16, _lex_param_1
    repr_defined $I5001, fb_tmp_16
    unless $I5001 goto if82_else161 
    set $P5003, fb_tmp_16[0]
    set $P5005, $P5003
    goto if82_end162
  if82_else161:
    null $P5004
    set $P5005, $P5004
  if82_end162:
    unless_null $P5005, vivi_83163
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_83163:
    set $S5001, $P5005
    repr_bind_attr_str $P5001, $P5002, "$!hll", $S5001
    set $S5003, $S5001
    goto if81_end160
  if81_else159:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5002, $P5007, $P5008, "$!hll"
    set $S5003, $S5002
  if81_end160:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "namespace" :subid("cuid_21_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 172
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_4 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@namespace", _lex_param_1 
    if haz_param_4, default166
    new $P5007, 'ResizablePMCArray'
    set _lex_param_1, $P5007
  default166:
    unless _lex_param_1 goto if84_else164 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_bind_attr_obj $P5001, $P5002, "@!namespace", _lex_param_1
    set $P5006, _lex_param_1
    goto if84_end165
  if84_else164:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!namespace"
    set $P5006, $P5005
  if84_end165:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_22_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 176
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    .return ("") 
.end
.HLL "nqp"
.namespace []
.sub "close_sub" :subid("cuid_23_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 180
    .param pmc _lex_param_0 
    .const 'Sub' $P5080 = 'cuid_153_1361964166.213' 
    capture_lex $P5080 
    .const 'Sub' $P5080 = 'cuid_155_1361964166.213' 
    capture_lex $P5080 
    .lex "@parts", $P101 
    .lex "$sub_decl", $P102 
    .lex "$file", $P103 
    .lex "@*PIRT_BLOCKS", $P104 
    .lex "$*SUB_LINE", $P105 
    .lex "self", _lex_param_0 
    .local pmc fb_tmp_17 
    .local pmc pkg_viv_tmp_2 
    .local pmc fb_tmp_18 
    .local pmc pkg_viv_tmp_3 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!loadlibs"
    isnull $I5001, $P5008
    if $I5001 goto unless85_end168 
.annotate 'line', 184
    nqp_decontainerize $P5012, _lex_param_0
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5014, $P5012, $P5013, "@!loadlibs"
    set $P5009, $P5014
    iter $P5011, $P5014
  for_next169:
    unless $P5011, for_done171
    shift $P5016, $P5011
  for_redo170:
    .const 'Sub' $P5015 = 'cuid_153_1361964166.213' 
    capture_lex $P5015
    $P5009 = $P5015($P5016)
    goto for_next169
  for_done171:
  unless85_end168:
    nqp_decontainerize $P5017, _lex_param_0
    nqp_get_sc_object $P5018, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5001, $P5017, $P5018, "$!hll"
    unless_null $S5001, vivi_87174
    set $S5002, ""
    set $S5001, $S5002
  vivi_87174:
    unless $S5001 goto if86_end173 
.annotate 'line', 189
.annotate 'line', 190
    nqp_decontainerize $P5019, _lex_param_0
    nqp_decontainerize $P5020, _lex_param_0
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5004, $P5020, $P5021, "$!hll"
    $P5022 = $P5019."escape"($S5004)
    set $S5005, $P5022
    concat $S5003, ".HLL ", $S5005
    box $P5023, $S5003
    push $P101, $P5023
  if86_end173:
    nqp_decontainerize $P5024, _lex_param_0
    nqp_get_sc_object $P5025, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5026, $P5024, $P5025, "@!namespace"
    isnull $I5002, $P5026
    unless $I5002 goto if88_else175 
.annotate 'line', 192
    box $P5027, ".namespace []"
    push $P101, $P5027
    goto if88_end176
  if88_else175:
    .const 'Sub' $P5028 = 'cuid_155_1361964166.213' 
    capture_lex $P5028
    $P5029 = $P5028()
  if88_end176:
.annotate 'line', 202
    nqp_decontainerize $P5030, _lex_param_0
    nqp_decontainerize $P5031, _lex_param_0
    nqp_get_sc_object $P5032, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5007, $P5031, $P5032, "$!name"
    set $S5008, $S5007
    if $S5007 goto unless89_end181 
    set $S5008, ""
  unless89_end181:
    $P5033 = $P5030."escape"($S5008)
    set $S5009, $P5033
    concat $S5006, ".sub ", $S5009
    box $P5034, $S5006
    set $P102, $P5034
    nqp_decontainerize $P5035, _lex_param_0
    nqp_get_sc_object $P5036, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5010, $P5035, $P5036, "$!subid"
    unless_null $S5010, vivi_91184
    set $S5011, ""
    set $S5010, $S5011
  vivi_91184:
    unless $S5010 goto if90_end183 
.annotate 'line', 203
    set $S5015, $P102
    concat $S5014, $S5015, " :subid("
.annotate 'line', 204
    nqp_decontainerize $P5037, _lex_param_0
    nqp_decontainerize $P5038, _lex_param_0
    nqp_get_sc_object $P5039, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5016, $P5038, $P5039, "$!subid"
    $P5040 = $P5037."escape"($S5016)
    set $S5017, $P5040
    concat $S5013, $S5014, $S5017
    concat $S5012, $S5013, ")"
    box $P5041, $S5012
    set $P102, $P5041
  if90_end183:
    nqp_decontainerize $P5042, _lex_param_0
    nqp_get_sc_object $P5043, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5018, $P5042, $P5043, "$!pirflags"
    unless_null $S5018, vivi_93187
    set $S5019, ""
    set $S5018, $S5019
  vivi_93187:
    unless $S5018 goto if92_end186 
.annotate 'line', 206
    set $S5022, $P102
    concat $S5021, $S5022, " "
    nqp_decontainerize $P5044, _lex_param_0
    nqp_get_sc_object $P5045, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5023, $P5044, $P5045, "$!pirflags"
    concat $S5020, $S5021, $S5023
    box $P5046, $S5020
    set $P102, $P5046
  if92_end186:
    push $P101, $P102
    find_dynamic_lex $P5047, "$?FILES"
    set $P103, $P5047
    unless_null $P103, vivi_95190
    box $P5048, ""
    set $P103, $P5048
  vivi_95190:
    unless $P103 goto if94_end189 
.annotate 'line', 213
.annotate 'line', 214
    nqp_decontainerize $P5049, _lex_param_0
    $P5050 = $P5049."escape"($P103)
    set $S5025, $P5050
    concat $S5024, ".annotate 'file', ", $S5025
    box $P5051, $S5024
    push $P101, $P5051
  if94_end189:
    box $P5059, -1
    set $P105, $P5059
.annotate 'line', 220
    nqp_decontainerize $P5060, _lex_param_0
    nqp_decontainerize $P5061, _lex_param_0
    nqp_get_sc_object $P5062, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5063, $P5061, $P5062, "@!children"
    $P5064 = $P5060."children_pir"($P5063)
    push $P101, $P5064
    box $P5065, ".end"
    push $P101, $P5065
    nqp_decontainerize $P5066, _lex_param_0
    nqp_get_sc_object $P5067, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    join $S5026, "\n", $P101
    repr_bind_attr_str $P5066, $P5067, "$!cached_pir", $S5026
    nqp_decontainerize $P5068, _lex_param_0
    nqp_get_sc_object $P5069, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    unless_null $P104, fallback196
    nqp_get_sc_object $P5071, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5070, $P5071
    set pkg_viv_tmp_3, $P5070
    set fb_tmp_18, pkg_viv_tmp_3
    repr_defined $I5004, fb_tmp_18
    unless $I5004 goto if99_else197 
    set $P5072, fb_tmp_18["@PIRT_BLOCKS"]
    set $P5074, $P5072
    goto if99_end198
  if99_else197:
    null $P5073
    set $P5074, $P5073
  if99_end198:
    unless_null $P5074, vivi_100199
    new $P5075, 'ResizablePMCArray'
    set pkg_viv_tmp_3["@PIRT_BLOCKS"], $P5075
    set $P5074, $P5075
  vivi_100199:
    unless_null $P5074, vivi_101200
    die "Contextual @*PIRT_BLOCKS not found"
    box $P5076, "Contextual @*PIRT_BLOCKS not found"
    set $P5074, $P5076
  vivi_101200:
    set $P104, $P5074
  fallback196:
    repr_bind_attr_obj $P5068, $P5069, "@!nested_blocks", $P104
    nqp_decontainerize $P5077, _lex_param_0
    nqp_get_sc_object $P5078, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    null $P5079
    repr_bind_attr_obj $P5077, $P5078, "@!children", $P5079
    .return ($P5079) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_153_1361964166.213") :anon :lex :outer("cuid_23_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 185
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@parts"
.annotate 'line', 186
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."escape"(_lex_param_0)
    set $S5002, $P5004
    concat $S5001, ".loadlib ", $S5002
    box $P5005, $S5001
    push $P5001, $P5005
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_155_1361964166.213") :anon :lex :outer("cuid_23_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 195
    .const 'Sub' $P5013 = 'cuid_154_1361964166.213' 
    capture_lex $P5013 
    .lex "@ns", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5008, $P5005, $P5007, "@!namespace"
    set $P5002, $P5008
    iter $P5004, $P5008
  for_next177:
    unless $P5004, for_done179
    shift $P5010, $P5004
  for_redo178:
    .const 'Sub' $P5009 = 'cuid_154_1361964166.213' 
    capture_lex $P5009
    $P5002 = $P5009($P5010)
    goto for_next177
  for_done179:
    find_lex $P5011, "@parts"
    join $S5003, ";", $P101
    concat $S5002, ".namespace [", $S5003
    concat $S5001, $S5002, "]"
    box $P5012, $S5001
    push $P5011, $P5012
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_154_1361964166.213") :anon :lex :outer("cuid_155_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 197
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@ns"
.annotate 'line', 198
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."escape"(_lex_param_0)
    push $P5001, $P5004
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_24_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 232
    .param pmc _lex_param_0 
    .lex "@parts", $P101 
    .lex "self", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 234
    nqp_decontainerize $P5002, _lex_param_0
    $P5002."collect_sub_pir_into"($P101)
    join $S5001, "\n", $P101
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "collect_sub_pir_into" :subid("cuid_25_1361964166.213") :anon :lex :outer("cuid_152_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 238
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5015 = 'cuid_156_1361964166.213' 
    capture_lex $P5015 
    .lex "self", _lex_param_0 
    .lex "@result", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5001, $P5001, $P5002, "$!cached_pir"
    if $S5001 goto unless102_end202 
.annotate 'line', 240
.annotate 'line', 241
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = $P5003."close_sub"()
  unless102_end202:
.annotate 'line', 245
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_str $S5002, $P5005, $P5006, "$!cached_pir"
    _lex_param_1."push"($S5002)
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    repr_get_attr_obj $P5012, $P5010, $P5011, "@!nested_blocks"
    set $P5007, $P5012
    iter $P5009, $P5012
  for_next203:
    unless $P5009, for_done205
    shift $P5014, $P5009
  for_redo204:
    .const 'Sub' $P5013 = 'cuid_156_1361964166.213' 
    capture_lex $P5013
    $P5007 = $P5013($P5014)
    goto for_next203
  for_done205:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_156_1361964166.213") :anon :lex :outer("cuid_25_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 246
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 247
    find_lex $P5001, "@result"
    $P5002 = _lex_param_0."collect_sub_pir_into"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_157_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 252
    .const 'Sub' $P5007 = 'cuid_26_1361964166.213' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_27_1361964166.213' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_28_1361964166.213' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_29_1361964166.213' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_30_1361964166.213' 
    capture_lex $P5007 
    .const 'Sub' $P5007 = 'cuid_31_1361964166.213' 
    capture_lex $P5007 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_26_1361964166.213' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_27_1361964166.213' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_28_1361964166.213' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_29_1361964166.213' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_30_1361964166.213' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_31_1361964166.213' 
    capture_lex $P5006
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_26_1361964166.213") :anon :lex :outer("cuid_157_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 257
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("result") :optional 
    .param int haz_param_5 :opt_flag 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$result", _lex_param_1 
    if haz_param_5, default208
    box $P5010, ""
    set _lex_param_1, $P5010
  default208:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    new $P5005, 'ResizablePMCArray'
    setattribute $P101, $P5004, "@!children", $P5005
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 6
    type_check $I5001, _lex_param_1, $P5007
    unless $I5001 goto if103_else206 
.annotate 'line', 261
    $P5008 = _lex_param_1."result"()
    set $P5009, $P5008
    goto if103_end207
  if103_else206:
    set $P5009, _lex_param_1
  if103_end207:
    set $S5001, $P5009
    repr_bind_attr_str $P101, $P5006, "$!result", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "push" :subid("cuid_27_1361964166.213") :anon :lex :outer("cuid_157_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 265
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!children"
    push $P5003, _lex_param_1
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "push_pirop" :subid("cuid_28_1361964166.213") :anon :lex :outer("cuid_157_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .param pmc _lex_param_2 :named("result") :optional 
    .param int haz_param_6 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "@opbits", _lex_param_1 
    .lex "$result", _lex_param_2 
    if haz_param_6, default211
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5006
  default211:
    unless _lex_param_2 goto if104_end210 
.annotate 'line', 270
.annotate 'line', 271
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 3
    $P5002 = $P5001."new"(_lex_param_2)
    push _lex_param_1, $P5002
  if104_end210:
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_obj $P5005, $P5003, $P5004, "@!children"
    push $P5005, _lex_param_1
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_29_1361964166.213") :anon :lex :outer("cuid_157_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 276
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    unless _lex_param_1 goto if105_else212 
.annotate 'line', 277
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    set fb_tmp_19, _lex_param_1
    repr_defined $I5002, fb_tmp_19
    unless $I5002 goto if107_else216 
    set $P5003, fb_tmp_19[0]
    set $P5005, $P5003
    goto if107_end217
  if107_else216:
    null $P5004
    set $P5005, $P5004
  if107_end217:
    unless_null $P5005, vivi_108218
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_108218:
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 6
    type_check $I5001, $P5005, $P5007
    unless $I5001 goto if106_else214 
.annotate 'line', 278
    set fb_tmp_20, _lex_param_1
    repr_defined $I5003, fb_tmp_20
    unless $I5003 goto if109_else219 
    set $P5008, fb_tmp_20[0]
    set $P5010, $P5008
    goto if109_end220
  if109_else219:
    null $P5009
    set $P5010, $P5009
  if109_end220:
    unless_null $P5010, vivi_110221
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_110221:
    $P5012 = $P5010."result"()
    set $P5017, $P5012
    goto if106_end215
  if106_else214:
    set fb_tmp_21, _lex_param_1
    repr_defined $I5004, fb_tmp_21
    unless $I5004 goto if111_else222 
    set $P5013, fb_tmp_21[0]
    set $P5015, $P5013
    goto if111_end223
  if111_else222:
    null $P5014
    set $P5015, $P5014
  if111_end223:
    unless_null $P5015, vivi_112224
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_112224:
    set $P5017, $P5015
  if106_end215:
    set $S5001, $P5017
    repr_bind_attr_str $P5001, $P5002, "$!result", $S5001
    set $S5003, $S5001
    goto if105_end213
  if105_else212:
.annotate 'line', 280
    nqp_decontainerize $P5018, _lex_param_0
    nqp_get_sc_object $P5019, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_str $S5002, $P5018, $P5019, "$!result"
    set $S5003, $S5002
  if105_end213:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "node" :subid("cuid_30_1361964166.213") :anon :lex :outer("cuid_157_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 285
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_22 
    unless _lex_param_1 goto if113_else225 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    set fb_tmp_22, _lex_param_1
    repr_defined $I5001, fb_tmp_22
    unless $I5001 goto if114_else227 
    set $P5003, fb_tmp_22[0]
    set $P5005, $P5003
    goto if114_end228
  if114_else227:
    null $P5004
    set $P5005, $P5004
  if114_end228:
    unless_null $P5005, vivi_115229
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_115229:
    repr_bind_attr_obj $P5001, $P5002, "$!node", $P5005
    set $P5010, $P5005
    goto if113_end226
  if113_else225:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_obj $P5009, $P5007, $P5008, "$!node"
    set $P5010, $P5009
  if113_end226:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_31_1361964166.213") :anon :lex :outer("cuid_157_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 289
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_158_1361964166.213' 
    capture_lex $P5013 
    .lex "$ann", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_obj $P5005, $P5003, $P5004, "$!node"
    unless $P5005 goto if116_end231 
    .const 'Sub' $P5006 = 'cuid_158_1361964166.213' 
    capture_lex $P5006
    $P5007 = $P5006()
  if116_end231:
    set $S5002, $P101
.annotate 'line', 298
    nqp_decontainerize $P5008, _lex_param_0
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!children"
    $P5012 = $P5008."children_pir"($P5011)
    set $S5003, $P5012
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_158_1361964166.213") :anon :lex :outer("cuid_31_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 291
    .lex "$line", $P101 
    .local pmc fb_tmp_23 
    .local pmc pkg_lookup_tmp_3 
    .local pmc fb_tmp_24 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 292
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    set pkg_lookup_tmp_3, $P5003
    get_who $P5004, pkg_lookup_tmp_3
    exists $I5002, $P5004["HLL"]
    unless $I5002 goto if118_else234 
    get_who $P5006, pkg_lookup_tmp_3
    set $P5005, $P5006["HLL"]
    set $P5008, $P5005
    goto if118_end235
  if118_else234:
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5007
  if118_end235:
    get_who $P5002, $P5008
    set fb_tmp_23, $P5002
    repr_defined $I5001, fb_tmp_23
    unless $I5001 goto if117_else232 
    set $P5009, fb_tmp_23["Compiler"]
    set $P5011, $P5009
    goto if117_end233
  if117_else232:
    null $P5010
    set $P5011, $P5010
  if117_end233:
    unless_null $P5011, vivi_119236
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_119236:
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    nqp_get_sc_object $P5015, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_obj $P5016, $P5013, $P5015, "$!node"
    $P5017 = $P5016."orig"()
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    repr_get_attr_obj $P5021, $P5018, $P5020, "$!node"
    $P5022 = $P5021."from"()
    $P5023 = $P5011."lineof"($P5017, $P5022, 1 :named("cache"))
    set $P101, $P5023
    set $N5001, $P101
    find_dynamic_lex $P5024, "$*SUB_LINE"
    unless_null $P5024, fallback239
    nqp_get_sc_object $P5026, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5025, $P5026
    set fb_tmp_24, $P5025
    repr_defined $I5004, fb_tmp_24
    unless $I5004 goto if121_else240 
    set $P5027, fb_tmp_24["$SUB_LINE"]
    set $P5029, $P5027
    goto if121_end241
  if121_else240:
    null $P5028
    set $P5029, $P5028
  if121_end241:
    unless_null $P5029, vivi_122242
    nqp_get_sc_object $P5030, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5029, $P5030
  vivi_122242:
    unless_null $P5029, vivi_123243
    die "Contextual $*SUB_LINE not found"
    box $P5031, "Contextual $*SUB_LINE not found"
    set $P5029, $P5031
  vivi_123243:
    set $P5024, $P5029
  fallback239:
    set $N5002, $P5024
    isne $I5003, $N5001, $N5002
    box $P5034, $I5003
    set $P5033, $P5034
    unless $I5003 goto if120_end238 
.annotate 'line', 293
    set $S5003, $P101
    concat $S5002, ".annotate 'line', ", $S5003
    concat $S5001, $S5002, "\n"
    box $P5032, $S5001
    store_lex "$ann", $P5032
    store_dynamic_lex "$*SUB_LINE", $P101
    set $P5033, $P101
  if120_end238:
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_160_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 302
    .const 'Sub' $P5008 = 'cuid_159_1361964166.213' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_32_1361964166.213' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_33_1361964166.213' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_34_1361964166.213' 
    capture_lex $P5008 
    .const 'Sub' $P5008 = 'cuid_35_1361964166.213' 
    capture_lex $P5008 
    .lex "$serno", $P101 
    .lex "&unique", $P102 
    .lex "$?PACKAGE", $P103 
    .lex "$?CLASS", $P104 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_159_1361964166.213' 
    capture_lex $P5002
    set $P102, $P5002
    box $P5003, 10
    set $P101, $P5003
    .const 'Sub' $P5004 = 'cuid_32_1361964166.213' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_33_1361964166.213' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_34_1361964166.213' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_35_1361964166.213' 
    capture_lex $P5007
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "unique" :subid("cuid_159_1361964166.213") :anon :lex :outer("cuid_160_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 306
    .param pmc _lex_param_0 
    .lex "$prefix", _lex_param_0 
    .local pmc tmp_1 
    set $S5002, _lex_param_0
    find_lex $P5001, "$serno"
    set tmp_1, $P5001
    set $N5002, tmp_1
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5002, $N5001
    store_lex "$serno", $P5002
    set $S5003, tmp_1
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_32_1361964166.213") :anon :lex :outer("cuid_160_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 308
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :named("name") 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
.annotate 'line', 310
    $P5005 = "&unique"(_lex_param_1)
    set $S5001, $P5005
    repr_bind_attr_str $P101, $P5004, "$!name", $S5001
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "name" :subid("cuid_33_1361964166.213") :anon :lex :outer("cuid_160_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 314
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :slurpy 
    .lex "self", _lex_param_0 
    .lex "@value", _lex_param_1 
    .local pmc fb_tmp_25 
    unless _lex_param_1 goto if124_else244 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
.annotate 'line', 315
    set fb_tmp_25, _lex_param_1
    repr_defined $I5001, fb_tmp_25
    unless $I5001 goto if125_else246 
    set $P5003, fb_tmp_25[0]
    set $P5005, $P5003
    goto if125_end247
  if125_else246:
    null $P5004
    set $P5005, $P5004
  if125_end247:
    unless_null $P5005, vivi_126248
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_126248:
    $P5007 = "&unique"($P5005)
    set $S5001, $P5007
    repr_bind_attr_str $P5001, $P5002, "$!name", $S5001
    set $S5003, $S5001
    goto if124_end245
  if124_else244:
    nqp_decontainerize $P5008, _lex_param_0
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    repr_get_attr_str $S5002, $P5008, $P5009, "$!name"
    set $S5003, $S5002
  if124_end245:
    .return ($S5003) 
.end
.HLL "nqp"
.namespace []
.sub "result" :subid("cuid_34_1361964166.213") :anon :lex :outer("cuid_160_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 318
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    repr_get_attr_str $S5001, $P5001, $P5002, "$!name"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "pir" :subid("cuid_35_1361964166.213") :anon :lex :outer("cuid_160_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 322
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    repr_get_attr_str $S5003, $P5001, $P5002, "$!name"
    concat $S5002, "  ", $S5003
    concat $S5001, $S5002, ":"
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_169_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 330
    .const 'Sub' $P5027 = 'cuid_168_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_36_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_37_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_38_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_39_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_40_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_41_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_42_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_43_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_44_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_45_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_46_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_47_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_48_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_49_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_50_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_51_1361964166.213' 
    capture_lex $P5027 
    .lex "%core_ops", $P101 
    .lex "%hll_ops", $P102 
    .lex "%cached_pirops", $P103 
    .lex "%hll_box", $P104 
    .lex "%hll_unbox", $P105 
    .lex "%core_inlinability", $P106 
    .lex "%hll_inlinability", $P107 
    .lex "%core_result_type", $P108 
    .lex "%hll_result_type", $P109 
    .lex "&pirop_mapper", $P110 
    .lex "$?PACKAGE", $P111 
    .lex "$?CLASS", $P112 
    new $P5001, 'Hash'
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
    new $P5003, 'Hash'
    set $P103, $P5003
    new $P5004, 'Hash'
    set $P104, $P5004
    new $P5005, 'Hash'
    set $P105, $P5005
    new $P5006, 'Hash'
    set $P106, $P5006
    new $P5007, 'Hash'
    set $P107, $P5007
    new $P5008, 'Hash'
    set $P108, $P5008
    new $P5009, 'Hash'
    set $P109, $P5009
    .const 'Sub' $P5010 = 'cuid_168_1361964166.213' 
    capture_lex $P5010
    set $P110, $P5010
    .const 'Sub' $P5011 = 'cuid_36_1361964166.213' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_37_1361964166.213' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_38_1361964166.213' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_39_1361964166.213' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_40_1361964166.213' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_41_1361964166.213' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_42_1361964166.213' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_43_1361964166.213' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_44_1361964166.213' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_45_1361964166.213' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_46_1361964166.213' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_47_1361964166.213' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_48_1361964166.213' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_49_1361964166.213' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_50_1361964166.213' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_51_1361964166.213' 
    capture_lex $P5026
    .return ($P110) 
.end
.HLL "nqp"
.namespace []
.sub "pirop_mapper" :subid("cuid_168_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 506
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5016 = 'cuid_162_1361964166.213' 
    capture_lex $P5016 
    .lex "@arg_types", $P101 
    .lex "$ret_type", $P102 
    .lex "$ret_meth", $P103 
    .lex "$pirop", _lex_param_0 
    .lex "$sig", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    set $S5001, _lex_param_1
    split $P5004, "", $S5001
    set $P101, $P5004
.annotate 'line', 509
    $P5005 = $P101."shift"()
    set $P102, $P5005
    set $S5002, $P102
    iseq $I5001, $S5002, "P"
    unless $I5001 goto if127_else249 
.annotate 'line', 513
    box $P5006, "fresh_p"
    set $P103, $P5006
    goto if127_end250
  if127_else249:
    set $S5003, $P102
    iseq $I5002, $S5003, "S"
    unless $I5002 goto if128_else251 
.annotate 'line', 514
    box $P5007, "fresh_s"
    set $P103, $P5007
    set $P5013, $P103
    goto if128_end252
  if128_else251:
    set $S5004, $P102
    iseq $I5003, $S5004, "I"
    unless $I5003 goto if129_else253 
.annotate 'line', 515
    box $P5008, "fresh_i"
    set $P103, $P5008
    set $P5012, $P103
    goto if129_end254
  if129_else253:
    set $S5005, $P102
    iseq $I5004, $S5005, "N"
    box $P5011, $I5004
    set $P5010, $P5011
    unless $I5004 goto if130_end256 
.annotate 'line', 516
    box $P5009, "fresh_n"
    set $P103, $P5009
    set $P5010, $P103
  if130_end256:
    set $P5012, $P5010
  if129_end254:
    set $P5013, $P5012
  if128_end252:
  if127_end250:
    .const 'Sub' $P5015 = 'cuid_162_1361964166.213' 
    capture_lex $P5015
    newclosure $P5014, $P5015
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_162_1361964166.213") :anon :lex :outer("cuid_168_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 518
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5030 = 'cuid_161_1361964166.213' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_164_1361964166.213' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_167_1361964166.213' 
    capture_lex $P5030 
    .lex "$ops", $P101 
    .lex "@args", $P102 
    .lex "$num_args", $P103 
    .lex "$i", $P104 
    .lex "$last_argtype_was_Q", $P105 
    .lex "$aggregate", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op_name", _lex_param_1 
    .lex "@op_args", _lex_param_2 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
.annotate 'line', 519
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5008 = $P5007."new"()
    set $P101, $P5008
    find_lex $P5009, "$ret_meth"
    unless $P5009 goto if131_end258 
    .const 'Sub' $P5010 = 'cuid_161_1361964166.213' 
    capture_lex $P5010
    $P5011 = $P5010()
  if131_end258:
    set $N5001, _lex_param_2
    box $P5012, $N5001
    set $P103, $P5012
    find_lex $P5013, "@arg_types"
    set $N5002, $P5013
    set $N5003, $P103
    isne $I5001, $N5002, $N5003
    unless $I5001 goto if135_end265 
.annotate 'line', 532
    set $S5005, _lex_param_1
    concat $S5004, "Operation '", $S5005
    concat $S5003, $S5004, "' requires "
    find_lex $P5014, "@arg_types"
    set $N5004, $P5014
    set $S5006, $N5004
    concat $S5002, $S5003, $S5006
    set $S5008, $P103
    concat $S5007, " operands, but got ", $S5008
    concat $S5001, $S5002, $S5007
    box $P5015, $S5001
    die $P5015
  if135_end265:
    box $P5016, 0
    set $P104, $P5016
    box $P5017, 0
    set $P105, $P5017
    box $P5018, ""
    set $P106, $P5018
  while136_test266:
    set $N5005, $P104
    set $N5006, $P103
    islt $I5002, $N5005, $N5006
    box $P5022, $I5002
    set $P5021, $P5022
    unless $I5002 goto while136_done270 
  while136_redo268:
    .const 'Sub' $P5019 = 'cuid_164_1361964166.213' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5021, $P5020
    goto while136_test266 
  while136_done270:
    find_lex $P5023, "$ret_meth"
    isfalse $I5003, $P5023
    set $I5005, $I5003
    unless $I5003 goto if147_end290 
    find_lex $P5024, "$ret_type"
    set $S5009, $P5024
    isne $I5004, $S5009, "v"
    set $I5005, $I5004
  if147_end290:
    set $I5007, $I5005
    unless $I5005 goto if146_end288 
    find_lex $P5025, "$ret_type"
    set $N5007, $P5025
    set $S5010, $N5007
    find_lex $P5026, "$ret_type"
    set $S5011, $P5026
    iseq $I5006, $S5010, $S5011
    set $I5007, $I5006
  if146_end288:
    unless $I5007 goto if145_end286 
    .const 'Sub' $P5027 = 'cuid_167_1361964166.213' 
    capture_lex $P5027
    $P5028 = $P5027()
  if145_end286:
.annotate 'line', 580
    find_lex $P5029, "$pirop"
    $P101."push_pirop"($P5029, $P102 :flat)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_161_1361964166.213") :anon :lex :outer("cuid_162_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 524
    .lex "$reg", $P101 
    .local pmc fb_tmp_26 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 525
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback259
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_26, $P5004
    repr_defined $I5001, fb_tmp_26
    unless $I5001 goto if132_else260 
    set $P5006, fb_tmp_26["$REGALLOC"]
    set $P5008, $P5006
    goto if132_end261
  if132_else260:
    null $P5007
    set $P5008, $P5007
  if132_end261:
    unless_null $P5008, vivi_133262
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_133262:
    unless_null $P5008, vivi_134263
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_134263:
    set $P5003, $P5008
  fallback259:
    find_lex $P5002, "$ret_meth"
    set $S5001, $P5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 526
    find_lex $P5012, "@args"
    $P5012."push"($P101)
.annotate 'line', 527
    find_lex $P5013, "$ops"
    $P5014 = $P5013."result"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_164_1361964166.213") :anon :lex :outer("cuid_162_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 539
    .const 'Sub' $P5025 = 'cuid_163_1361964166.213' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_165_1361964166.213' 
    capture_lex $P5025 
    .const 'Sub' $P5025 = 'cuid_166_1361964166.213' 
    capture_lex $P5025 
    .lex "$arg_type", $P101 
    .lex "$operand", $P102 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    find_lex $P5003, "@arg_types"
    set fb_tmp_27, $P5003
    repr_defined $I5001, fb_tmp_27
    unless $I5001 goto if137_else271 
    find_lex $P5005, "$i"
    set $I5002, $P5005
    set $P5004, fb_tmp_27[$I5002]
    set $P5007, $P5004
    goto if137_end272
  if137_else271:
    null $P5006
    set $P5007, $P5006
  if137_end272:
    unless_null $P5007, vivi_138273
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_138273:
    set $P101, $P5007
    find_lex $P5009, "@op_args"
    set fb_tmp_28, $P5009
    repr_defined $I5003, fb_tmp_28
    unless $I5003 goto if139_else274 
    find_lex $P5011, "$i"
    set $I5004, $P5011
    set $P5010, fb_tmp_28[$I5004]
    set $P5013, $P5010
    goto if139_end275
  if139_else274:
    null $P5012
    set $P5013, $P5012
  if139_end275:
    unless_null $P5013, vivi_140276
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_140276:
    set $P102, $P5013
    set $S5001, $P101
    iseq $I5005, $S5001, "Q"
    unless $I5005 goto if141_else277 
    .const 'Sub' $P5015 = 'cuid_163_1361964166.213' 
    capture_lex $P5015
    $P5016 = $P5015()
    goto if141_end278
  if141_else277:
    find_lex $P5017, "$last_argtype_was_Q"
    unless $P5017 goto if142_else279 
    .const 'Sub' $P5018 = 'cuid_165_1361964166.213' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5022, $P5019
    goto if142_end280
  if142_else279:
    .const 'Sub' $P5020 = 'cuid_166_1361964166.213' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5022, $P5021
  if142_end280:
  if141_end278:
    find_lex $P5023, "$i"
    set $N5002, $P5023
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5024, $N5001
    store_lex "$i", $P5024
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_163_1361964166.213") :anon :lex :outer("cuid_164_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 542
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 543
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    $P5005 = $P5003."as_post"($P5004)
    $P5006 = $P5002."coerce"($P5005, "P")
    set $P101, $P5006
.annotate 'line', 544
    find_lex $P5007, "$ops"
    $P5007."push"($P101)
.annotate 'line', 545
    $P5008 = $P101."result"()
    store_lex "$aggregate", $P5008
    box $P5009, 1
    store_lex "$last_argtype_was_Q", $P5009
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_165_1361964166.213") :anon :lex :outer("cuid_164_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 548
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_lex $P5002, "$arg_type"
    set $S5001, $P5002
    isne $I5001, $S5001, "P"
    unless $I5001 goto if143_end282 
.annotate 'line', 549
.annotate 'line', 550
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    find_lex $P5005, "$arg_type"
    $P5006 = $P5003."apply_context"($P5004, $P5005)
    store_lex "$operand", $P5006
  if143_end282:
.annotate 'line', 552
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$qastcomp"
    find_lex $P5009, "$operand"
    $P5010 = $P5008."as_post"($P5009)
    find_lex $P5011, "$arg_type"
    $P5012 = $P5007."coerce"($P5010, $P5011)
    set $P101, $P5012
.annotate 'line', 553
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 554
    find_lex $P5014, "@args"
    find_lex $P5015, "$aggregate"
    set $S5005, $P5015
    concat $S5004, $S5005, "["
    $P5016 = $P101."result"()
    set $S5006, $P5016
    concat $S5003, $S5004, $S5006
    concat $S5002, $S5003, "]"
    $P5014."push"($S5002)
    box $P5017, 0
    store_lex "$last_argtype_was_Q", $P5017
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_166_1361964166.213") :anon :lex :outer("cuid_164_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 557
    .lex "$post", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_lex $P5002, "$arg_type"
    set $S5001, $P5002
    isne $I5001, $S5001, "P"
    unless $I5001 goto if144_end284 
.annotate 'line', 558
.annotate 'line', 559
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$operand"
    find_lex $P5005, "$arg_type"
    $P5006 = $P5003."apply_context"($P5004, $P5005)
    store_lex "$operand", $P5006
  if144_end284:
.annotate 'line', 561
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$qastcomp"
    find_lex $P5009, "$operand"
    $P5010 = $P5008."as_post"($P5009)
    find_lex $P5011, "$arg_type"
    $P5012 = $P5007."coerce"($P5010, $P5011)
    set $P101, $P5012
.annotate 'line', 562
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 563
    find_lex $P5014, "@args"
    $P5015 = $P101."result"()
    $P5016 = $P5014."push"($P5015)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_167_1361964166.213") :anon :lex :outer("cuid_162_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 570
    .lex "$rreg", $P101 
    .lex "$brak", $P102 
    .local pmc fb_tmp_29 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    find_lex $P5003, "@args"
    set fb_tmp_29, $P5003
    repr_defined $I5001, fb_tmp_29
    unless $I5001 goto if148_else291 
    find_lex $P5005, "$ret_type"
    set $N5001, $P5005
    set $I5002, $N5001
    set $P5004, fb_tmp_29[$I5002]
    set $P5007, $P5004
    goto if148_end292
  if148_else291:
    null $P5006
    set $P5007, $P5006
  if148_end292:
    unless_null $P5007, vivi_149293
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_149293:
    set $P101, $P5007
    set $S5001, $P101
    index $I5003, $S5001, "[", 0
    box $P5009, $I5003
    set $P102, $P5009
    set $N5002, $P102
    set $N5003, 0
    isgt $I5004, $N5002, $N5003
    unless $I5004 goto if150_end295 
.annotate 'line', 573
    set $S5003, $P101
    set $N5005, $P102
    set $N5006, 1
    add $N5004, $N5005, $N5006
    set $I5005, $N5004
    set $S5004, $P101
    length $I5006, $S5004
    set $N5008, $I5006
    set $N5010, $P102
    set $N5011, 2
    add $N5009, $N5010, $N5011
    sub $N5007, $N5008, $N5009
    set $I5007, $N5007
    substr $S5002, $S5003, $I5005, $I5007
    box $P5010, $S5002
    set $P101, $P5010
  if150_end295:
.annotate 'line', 576
    find_lex $P5011, "$ops"
    $P5012 = $P5011."result"($P101)
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "compile_op" :subid("cuid_36_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 354
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5029 = 'cuid_170_1361964166.213' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_171_1361964166.213' 
    capture_lex $P5029 
    .lex "$name", $P101 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$op", _lex_param_3 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc fb_tmp_32 
    .local pmc fb_tmp_33 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_296
    .lex "RETURN", $P102
.annotate 'line', 355
    $P5002 = _lex_param_3."op"()
    set $P101, $P5002
    unless _lex_param_2 goto if151_end299 
.annotate 'line', 356
    find_lex $P5003, "%hll_ops"
    set fb_tmp_30, $P5003
    repr_defined $I5001, fb_tmp_30
    unless $I5001 goto if154_else304 
    set $S5001, _lex_param_2
    set $P5004, fb_tmp_30[$S5001]
    set $P5006, $P5004
    goto if154_end305
  if154_else304:
    null $P5005
    set $P5006, $P5005
  if154_end305:
    unless_null $P5006, vivi_155306
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_155306:
    set $P5017, $P5006
    unless $P5006 goto if153_end303 
    find_lex $P5008, "%hll_ops"
    set fb_tmp_32, $P5008
    repr_defined $I5003, fb_tmp_32
    unless $I5003 goto if157_else309 
    set $S5002, _lex_param_2
    set $P5009, fb_tmp_32[$S5002]
    set $P5011, $P5009
    goto if157_end310
  if157_else309:
    null $P5010
    set $P5011, $P5010
  if157_end310:
    unless_null $P5011, vivi_158311
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_158311:
    set fb_tmp_31, $P5011
    repr_defined $I5002, fb_tmp_31
    unless $I5002 goto if156_else307 
    set $S5003, $P101
    set $P5013, fb_tmp_31[$S5003]
    set $P5015, $P5013
    goto if156_end308
  if156_else307:
    null $P5014
    set $P5015, $P5014
  if156_end308:
    unless_null $P5015, vivi_159312
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_159312:
    set $P5017, $P5015
  if153_end303:
    set $P5020, $P5017
    unless $P5017 goto if152_end301 
    .const 'Sub' $P5018 = 'cuid_170_1361964166.213' 
    capture_lex $P5018
    $P5019 = $P5018($P5017)
    set $P5020, $P5019
  if152_end301:
  if151_end299:
    find_lex $P5021, "%core_ops"
    set fb_tmp_33, $P5021
    repr_defined $I5004, fb_tmp_33
    unless $I5004 goto if161_else315 
    set $S5004, $P101
    set $P5022, fb_tmp_33[$S5004]
    set $P5024, $P5022
    goto if161_end316
  if161_else315:
    null $P5023
    set $P5024, $P5023
  if161_end316:
    unless_null $P5024, vivi_162317
    nqp_get_sc_object $P5025, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5024, $P5025
  vivi_162317:
    unless $P5024 goto if160_end314 
    .const 'Sub' $P5026 = 'cuid_171_1361964166.213' 
    capture_lex $P5026
    $P5027 = $P5026($P5024)
  if160_end314:
    set $S5007, $P101
    concat $S5006, "No registered operation handler for '", $S5007
    concat $S5005, $S5006, "'"
    box $P5028, $S5005
    die $P5028
    goto lexotic_297
  lexotic_296:
    .get_results ($P5028)
  lexotic_297:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_170_1361964166.213") :anon :lex :outer("cuid_36_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 357
    .param pmc _lex_param_0 
    .lex "$mapper", _lex_param_0 
.annotate 'line', 358
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$op"
    $P5004 = _lex_param_0($P5002, $P5003)
    find_lex $P5001, "RETURN"
    $P5005 = $P5001($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_171_1361964166.213") :anon :lex :outer("cuid_36_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 361
    .param pmc _lex_param_0 
    .lex "$mapper", _lex_param_0 
.annotate 'line', 362
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$op"
    $P5004 = _lex_param_0($P5002, $P5003)
    find_lex $P5001, "RETURN"
    $P5005 = $P5001($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "compile_pirop" :subid("cuid_37_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 368
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .const 'Sub' $P5012 = 'cuid_172_1361964166.213' 
    capture_lex $P5012 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$op_name", _lex_param_2 
    .lex "@op_args", _lex_param_3 
    .local pmc fb_tmp_36 
    set $S5001, _lex_param_2
    index $I5001, $S5001, " ", 0
    unless $I5001 goto if163_end319 
.annotate 'line', 369
    set $S5003, _lex_param_2
    split $P5001, " ", $S5003
    join $S5002, "__", $P5001
    box $P5002, $S5002
    set _lex_param_2, $P5002
  if163_end319:
    find_lex $P5003, "%cached_pirops"
    set $S5004, _lex_param_2
    exists $I5002, $P5003[$S5004]
    if $I5002 goto unless164_end321 
    .const 'Sub' $P5004 = 'cuid_172_1361964166.213' 
    capture_lex $P5004
    $P5005 = $P5004()
  unless164_end321:
.annotate 'line', 376
    find_lex $P5006, "%cached_pirops"
    set fb_tmp_36, $P5006
    repr_defined $I5003, fb_tmp_36
    unless $I5003 goto if169_else328 
    set $S5005, _lex_param_2
    set $P5007, fb_tmp_36[$S5005]
    set $P5009, $P5007
    goto if169_end329
  if169_else328:
    null $P5008
    set $P5009, $P5008
  if169_end329:
    unless_null $P5009, vivi_170330
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_170330:
    $P5011 = $P5009(_lex_param_1, _lex_param_2, _lex_param_3)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_172_1361964166.213") :anon :lex :outer("cuid_37_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 372
    .lex "@pieces", $P101 
    .local pmc fb_tmp_34 
    .local pmc fb_tmp_35 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5003, "$op_name"
    set $S5001, $P5003
    split $P5002, "__", $S5001
    set $P101, $P5002
    find_lex $P5004, "%cached_pirops"
    find_lex $P5005, "$op_name"
    set $S5002, $P5005
.annotate 'line', 374
    set fb_tmp_34, $P101
    repr_defined $I5001, fb_tmp_34
    unless $I5001 goto if165_else322 
    set $P5006, fb_tmp_34[0]
    set $P5008, $P5006
    goto if165_end323
  if165_else322:
    null $P5007
    set $P5008, $P5007
  if165_end323:
    unless_null $P5008, vivi_166324
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_166324:
    set fb_tmp_35, $P101
    repr_defined $I5002, fb_tmp_35
    unless $I5002 goto if167_else325 
    set $P5010, fb_tmp_35[1]
    set $P5012, $P5010
    goto if167_end326
  if167_else325:
    null $P5011
    set $P5012, $P5011
  if167_end326:
    unless_null $P5012, vivi_168327
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_168327:
    $P5014 = "&pirop_mapper"($P5008, $P5012)
    set $P5004[$S5002], $P5014
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "add_core_op" :subid("cuid_38_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 380
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 :named("inlinable") :optional 
    .param int haz_param_7 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$handler", _lex_param_2 
    .lex "$inlinable", _lex_param_3 
    if haz_param_7, default331
    box $P5004, 0
    set _lex_param_3, $P5004
  default331:
    find_lex $P5001, "%core_ops"
    set $S5001, _lex_param_1
    set $P5001[$S5001], _lex_param_2
.annotate 'line', 382
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."set_core_op_inlinability"(_lex_param_1, _lex_param_3)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_op" :subid("cuid_39_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 386
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("inlinable") :optional 
    .param int haz_param_8 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .lex "$inlinable", _lex_param_4 
    .local pmc fb_tmp_37 
    if haz_param_8, default337
    box $P5011, 0
    set _lex_param_4, $P5011
  default337:
    find_lex $P5001, "%hll_ops"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless171_end333 
    find_lex $P5002, "%hll_ops"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless171_end333:
    find_lex $P5004, "%hll_ops"
    set fb_tmp_37, $P5004
    repr_defined $I5002, fb_tmp_37
    unless $I5002 goto if172_else334 
    set $S5003, _lex_param_1
    set $P5005, fb_tmp_37[$S5003]
    set $P5007, $P5005
    goto if172_end335
  if172_else334:
    null $P5006
    set $P5007, $P5006
  if172_end335:
    unless_null $P5007, vivi_173336
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_173336:
    set $S5004, _lex_param_2
    set $P5007[$S5004], _lex_param_3
.annotate 'line', 389
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."set_hll_op_inlinability"(_lex_param_1, _lex_param_2, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "add_core_pirop_mapping" :subid("cuid_40_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 393
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 :named("inlinable") :optional 
    .param int haz_param_9 :opt_flag 
    .const 'Sub' $P5010 = 'cuid_173_1361964166.213' 
    capture_lex $P5010 
    .lex "$pirop_mapper", $P101 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$pirop", _lex_param_2 
    .lex "$sig", _lex_param_3 
    .lex "$inlinable", _lex_param_4 
    if haz_param_9, default338
    box $P5009, 0
    set _lex_param_4, $P5009
  default338:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 394
    $P5002 = "&pirop_mapper"(_lex_param_2, _lex_param_3)
    set $P101, $P5002
    find_lex $P5003, "%core_ops"
    set $S5001, _lex_param_1
    .const 'Sub' $P5005 = 'cuid_173_1361964166.213' 
    capture_lex $P5005
    newclosure $P5004, $P5005
    set $P5003[$S5001], $P5004
.annotate 'line', 398
    nqp_decontainerize $P5006, _lex_param_0
    $P5006."set_core_op_inlinability"(_lex_param_1, _lex_param_4)
.annotate 'line', 399
    nqp_decontainerize $P5007, _lex_param_0
    set $S5003, _lex_param_3
    substr $S5002, $S5003, 0, 1
    $P5008 = $P5007."set_core_op_result_type"(_lex_param_1, $S5002)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_173_1361964166.213") :anon :lex :outer("cuid_40_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 395
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 396
    $P5002 = _lex_param_1."op"()
    $P5003 = _lex_param_1."list"()
    find_lex $P5001, "$pirop_mapper"
    $P5004 = $P5001(_lex_param_0, $P5002, $P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_pirop_mapping" :subid("cuid_41_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 403
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .param pmc _lex_param_5 :named("inlinable") :optional 
    .param int haz_param_10 :opt_flag 
    .const 'Sub' $P5017 = 'cuid_174_1361964166.213' 
    capture_lex $P5017 
    .lex "$pirop_mapper", $P101 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$pirop", _lex_param_3 
    .lex "$sig", _lex_param_4 
    .lex "$inlinable", _lex_param_5 
    .local pmc fb_tmp_38 
    if haz_param_10, default344
    box $P5016, 0
    set _lex_param_5, $P5016
  default344:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 404
    $P5002 = "&pirop_mapper"(_lex_param_3, _lex_param_4)
    set $P101, $P5002
    find_lex $P5003, "%hll_ops"
    set $S5001, _lex_param_1
    exists $I5001, $P5003[$S5001]
    if $I5001 goto unless174_end340 
    find_lex $P5004, "%hll_ops"
    set $S5002, _lex_param_1
    new $P5005, 'Hash'
    set $P5004[$S5002], $P5005
  unless174_end340:
    find_lex $P5006, "%hll_ops"
    set fb_tmp_38, $P5006
    repr_defined $I5002, fb_tmp_38
    unless $I5002 goto if175_else341 
    set $S5003, _lex_param_1
    set $P5007, fb_tmp_38[$S5003]
    set $P5009, $P5007
    goto if175_end342
  if175_else341:
    null $P5008
    set $P5009, $P5008
  if175_end342:
    unless_null $P5009, vivi_176343
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_176343:
    set $S5004, _lex_param_2
    .const 'Sub' $P5012 = 'cuid_174_1361964166.213' 
    capture_lex $P5012
    newclosure $P5011, $P5012
    set $P5009[$S5004], $P5011
.annotate 'line', 409
    nqp_decontainerize $P5013, _lex_param_0
    $P5013."set_hll_op_inlinability"(_lex_param_1, _lex_param_2, _lex_param_5)
.annotate 'line', 410
    nqp_decontainerize $P5014, _lex_param_0
    set $S5006, _lex_param_4
    substr $S5005, $S5006, 0, 1
    $P5015 = $P5014."set_hll_op_result_type"(_lex_param_1, _lex_param_2, $S5005)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_174_1361964166.213") :anon :lex :outer("cuid_41_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 406
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 407
    $P5002 = _lex_param_1."op"()
    $P5003 = _lex_param_1."list"()
    find_lex $P5001, "$pirop_mapper"
    $P5004 = $P5001(_lex_param_0, $P5002, $P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "set_core_op_inlinability" :subid("cuid_42_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 414
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$inlinable", _lex_param_2 
    find_lex $P5001, "%core_inlinability"
    set $S5001, _lex_param_1
    set $P5001[$S5001], _lex_param_2
    .return (_lex_param_2) 
.end
.HLL "nqp"
.namespace []
.sub "set_hll_op_inlinability" :subid("cuid_43_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 420
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$inlinable", _lex_param_3 
    .local pmc fb_tmp_39 
    find_lex $P5001, "%hll_inlinability"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless177_end346 
    find_lex $P5002, "%hll_inlinability"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless177_end346:
    find_lex $P5004, "%hll_inlinability"
    set fb_tmp_39, $P5004
    repr_defined $I5002, fb_tmp_39
    unless $I5002 goto if178_else347 
    set $S5003, _lex_param_1
    set $P5005, fb_tmp_39[$S5003]
    set $P5007, $P5005
    goto if178_end348
  if178_else347:
    null $P5006
    set $P5007, $P5006
  if178_end348:
    unless_null $P5007, vivi_179349
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_179349:
    set $S5004, _lex_param_2
    set $P5007[$S5004], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "is_inlinable" :subid("cuid_44_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 426
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    .local pmc fb_tmp_42 
    .local pmc fb_tmp_43 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_350
    .lex "RETURN", $P101
    find_lex $P5001, "%hll_inlinability"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if180_end353 
.annotate 'line', 427
    find_lex $P5002, "%hll_inlinability"
    set fb_tmp_40, $P5002
    repr_defined $I5003, fb_tmp_40
    unless $I5003 goto if182_else356 
    set $S5002, _lex_param_1
    set $P5003, fb_tmp_40[$S5002]
    set $P5005, $P5003
    goto if182_end357
  if182_else356:
    null $P5004
    set $P5005, $P5004
  if182_end357:
    unless_null $P5005, vivi_183358
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_183358:
    set $S5003, _lex_param_2
    exists $I5002, $P5005[$S5003]
    box $P5019, $I5002
    set $P5018, $P5019
    unless $I5002 goto if181_end355 
.annotate 'line', 428
    find_lex $P5008, "%hll_inlinability"
    set fb_tmp_42, $P5008
    repr_defined $I5005, fb_tmp_42
    unless $I5005 goto if185_else361 
    set $S5004, _lex_param_1
    set $P5009, fb_tmp_42[$S5004]
    set $P5011, $P5009
    goto if185_end362
  if185_else361:
    null $P5010
    set $P5011, $P5010
  if185_end362:
    unless_null $P5011, vivi_186363
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_186363:
    set fb_tmp_41, $P5011
    repr_defined $I5004, fb_tmp_41
    unless $I5004 goto if184_else359 
    set $S5005, _lex_param_2
    set $P5013, fb_tmp_41[$S5005]
    set $P5015, $P5013
    goto if184_end360
  if184_else359:
    null $P5014
    set $P5015, $P5014
  if184_end360:
    unless_null $P5015, vivi_187364
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_187364:
    find_lex $P5007, "RETURN"
    $P5017 = $P5007($P5015)
    set $P5018, $P5017
  if181_end355:
  if180_end353:
    find_lex $P5022, "%core_inlinability"
    set fb_tmp_43, $P5022
    repr_defined $I5007, fb_tmp_43
    unless $I5007 goto if188_else366 
    set $S5006, _lex_param_2
    set $P5023, fb_tmp_43[$S5006]
    set $P5025, $P5023
    goto if188_end367
  if188_else366:
    null $P5024
    set $P5025, $P5024
  if188_end367:
    unless_null $P5025, vivi_189368
    nqp_get_sc_object $P5026, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5025, $P5026
  vivi_189368:
    set $P5021, $P5025
    defined $I5006, $P5021
    if $I5006, defor365
    box $P5027, 0
    set $P5021, $P5027
  defor365:
    find_lex $P5020, "RETURN"
    $P5028 = $P5020($P5021)
    goto lexotic_351
  lexotic_350:
    .get_results ($P5028)
  lexotic_351:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "set_core_op_result_type" :subid("cuid_45_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 436
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$op", _lex_param_1 
    .lex "$type_char", _lex_param_2 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "I"
    unless $I5001 goto if190_else369 
.annotate 'line', 437
    find_lex $P5001, "%core_result_type"
    set $S5002, _lex_param_1
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 2
    set $P5001[$S5002], $P5002
    set $P5010, $P5002
    goto if190_end370
  if190_else369:
    set $S5003, _lex_param_2
    iseq $I5002, $S5003, "N"
    unless $I5002 goto if191_else371 
.annotate 'line', 440
    find_lex $P5003, "%core_result_type"
    set $S5004, _lex_param_1
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 3
    set $P5003[$S5004], $P5004
    set $P5009, $P5004
    goto if191_end372
  if191_else371:
    set $S5005, _lex_param_2
    iseq $I5003, $S5005, "S"
    box $P5008, $I5003
    set $P5007, $P5008
    unless $I5003 goto if192_end374 
.annotate 'line', 443
    find_lex $P5005, "%core_result_type"
    set $S5006, _lex_param_1
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 4
    set $P5005[$S5006], $P5006
    set $P5007, $P5006
  if192_end374:
    set $P5009, $P5007
  if191_end372:
    set $P5010, $P5009
  if190_end370:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "set_hll_op_result_type" :subid("cuid_46_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 450
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$op", _lex_param_2 
    .lex "$type_char", _lex_param_3 
    .local pmc fb_tmp_44 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    find_lex $P5001, "%hll_result_type"
    set $S5001, _lex_param_1
    exists $I5001, $P5001[$S5001]
    if $I5001 goto unless193_end376 
    find_lex $P5002, "%hll_result_type"
    set $S5002, _lex_param_1
    new $P5003, 'Hash'
    set $P5002[$S5002], $P5003
  unless193_end376:
    set $S5003, _lex_param_3
    iseq $I5002, $S5003, "I"
    unless $I5002 goto if194_else377 
.annotate 'line', 452
    find_lex $P5004, "%hll_result_type"
    set fb_tmp_44, $P5004
    repr_defined $I5003, fb_tmp_44
    unless $I5003 goto if195_else379 
    set $S5004, _lex_param_1
    set $P5005, fb_tmp_44[$S5004]
    set $P5007, $P5005
    goto if195_end380
  if195_else379:
    null $P5006
    set $P5007, $P5006
  if195_end380:
    unless_null $P5007, vivi_196381
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_196381:
    set $S5005, _lex_param_2
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 2
    set $P5007[$S5005], $P5009
    set $P5025, $P5009
    goto if194_end378
  if194_else377:
    set $S5006, _lex_param_3
    iseq $I5004, $S5006, "N"
    unless $I5004 goto if197_else382 
.annotate 'line', 455
    find_lex $P5010, "%hll_result_type"
    set fb_tmp_45, $P5010
    repr_defined $I5005, fb_tmp_45
    unless $I5005 goto if198_else384 
    set $S5007, _lex_param_1
    set $P5011, fb_tmp_45[$S5007]
    set $P5013, $P5011
    goto if198_end385
  if198_else384:
    null $P5012
    set $P5013, $P5012
  if198_end385:
    unless_null $P5013, vivi_199386
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_199386:
    set $S5008, _lex_param_2
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 3
    set $P5013[$S5008], $P5015
    set $P5024, $P5015
    goto if197_end383
  if197_else382:
    set $S5009, _lex_param_3
    iseq $I5006, $S5009, "S"
    box $P5023, $I5006
    set $P5022, $P5023
    unless $I5006 goto if200_end388 
.annotate 'line', 458
    find_lex $P5016, "%hll_result_type"
    set fb_tmp_46, $P5016
    repr_defined $I5007, fb_tmp_46
    unless $I5007 goto if201_else389 
    set $S5010, _lex_param_1
    set $P5017, fb_tmp_46[$S5010]
    set $P5019, $P5017
    goto if201_end390
  if201_else389:
    null $P5018
    set $P5019, $P5018
  if201_end390:
    unless_null $P5019, vivi_202391
    nqp_get_sc_object $P5020, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5019, $P5020
  vivi_202391:
    set $S5011, _lex_param_2
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 4
    set $P5019[$S5011], $P5021
    set $P5022, $P5021
  if200_end388:
    set $P5024, $P5022
  if197_end383:
    set $P5025, $P5024
  if194_end378:
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "attach_result_type" :subid("cuid_47_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 464
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$op", $P101 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$node", _lex_param_2 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc fb_tmp_49 
    .local pmc fb_tmp_50 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_392
    .lex "RETURN", $P102
.annotate 'line', 465
    $P5002 = _lex_param_2."op"()
    set $P101, $P5002
    find_lex $P5003, "%hll_result_type"
    set $S5001, _lex_param_1
    exists $I5001, $P5003[$S5001]
    unless $I5001 goto if203_end395 
.annotate 'line', 466
    find_lex $P5004, "%hll_result_type"
    set fb_tmp_47, $P5004
    repr_defined $I5003, fb_tmp_47
    unless $I5003 goto if205_else398 
    set $S5002, _lex_param_1
    set $P5005, fb_tmp_47[$S5002]
    set $P5007, $P5005
    goto if205_end399
  if205_else398:
    null $P5006
    set $P5007, $P5006
  if205_end399:
    unless_null $P5007, vivi_206400
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_206400:
    set $S5003, $P101
    exists $I5002, $P5007[$S5003]
    box $P5021, $I5002
    set $P5020, $P5021
    unless $I5002 goto if204_end397 
.annotate 'line', 467
.annotate 'line', 468
    find_lex $P5009, "%hll_result_type"
    set fb_tmp_49, $P5009
    repr_defined $I5005, fb_tmp_49
    unless $I5005 goto if208_else403 
    set $S5004, _lex_param_1
    set $P5010, fb_tmp_49[$S5004]
    set $P5012, $P5010
    goto if208_end404
  if208_else403:
    null $P5011
    set $P5012, $P5011
  if208_end404:
    unless_null $P5012, vivi_209405
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_209405:
    set fb_tmp_48, $P5012
    repr_defined $I5004, fb_tmp_48
    unless $I5004 goto if207_else401 
    set $S5005, $P101
    set $P5014, fb_tmp_48[$S5005]
    set $P5016, $P5014
    goto if207_end402
  if207_else401:
    null $P5015
    set $P5016, $P5015
  if207_end402:
    unless_null $P5016, vivi_210406
    nqp_get_sc_object $P5017, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5016, $P5017
  vivi_210406:
    _lex_param_2."returns"($P5016)
    find_lex $P5018, "RETURN"
    $P5019 = $P5018(1)
    set $P5020, $P5019
  if204_end397:
  if203_end395:
    find_lex $P5022, "%core_result_type"
    set $S5006, $P101
    exists $I5006, $P5022[$S5006]
    box $P5030, $I5006
    set $P5029, $P5030
    unless $I5006 goto if211_end408 
.annotate 'line', 472
.annotate 'line', 473
    find_lex $P5023, "%core_result_type"
    set fb_tmp_50, $P5023
    repr_defined $I5007, fb_tmp_50
    unless $I5007 goto if212_else409 
    set $S5007, $P101
    set $P5024, fb_tmp_50[$S5007]
    set $P5026, $P5024
    goto if212_end410
  if212_else409:
    null $P5025
    set $P5026, $P5025
  if212_end410:
    unless_null $P5026, vivi_213411
    nqp_get_sc_object $P5027, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5026, $P5027
  vivi_213411:
    $P5028 = _lex_param_2."returns"($P5026)
    set $P5029, $P5028
  if211_end408:
    goto lexotic_393
  lexotic_392:
    .get_results ($P5029)
  lexotic_393:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_box" :subid("cuid_48_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 478
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$type", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .local pmc fb_tmp_51 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "i"
    set $I5003, $I5001
    if $I5001 goto unless216_end417 
    set $S5002, _lex_param_2
    iseq $I5002, $S5002, "n"
    set $I5003, $I5002
  unless216_end417:
    set $I5005, $I5003
    if $I5003 goto unless215_end415 
    set $S5003, _lex_param_2
    iseq $I5004, $S5003, "s"
    set $I5005, $I5004
  unless215_end415:
    if $I5005 goto unless214_end413 
.annotate 'line', 479
    set $S5006, _lex_param_2
    concat $S5005, "Unknown box type '", $S5006
    concat $S5004, $S5005, "'"
    box $P5001, $S5004
    die $P5001
  unless214_end413:
    find_lex $P5002, "%hll_box"
    set $S5007, _lex_param_1
    exists $I5006, $P5002[$S5007]
    if $I5006 goto unless217_end419 
    find_lex $P5003, "%hll_box"
    set $S5008, _lex_param_1
    new $P5004, 'Hash'
    set $P5003[$S5008], $P5004
  unless217_end419:
    find_lex $P5005, "%hll_box"
    set fb_tmp_51, $P5005
    repr_defined $I5007, fb_tmp_51
    unless $I5007 goto if218_else420 
    set $S5009, _lex_param_1
    set $P5006, fb_tmp_51[$S5009]
    set $P5008, $P5006
    goto if218_end421
  if218_else420:
    null $P5007
    set $P5008, $P5007
  if218_end421:
    unless_null $P5008, vivi_219422
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_219422:
    set $S5010, _lex_param_2
    set $P5008[$S5010], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "add_hll_unbox" :subid("cuid_49_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 487
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    .lex "$type", _lex_param_2 
    .lex "$handler", _lex_param_3 
    .local pmc fb_tmp_52 
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "i"
    set $I5003, $I5001
    if $I5001 goto unless222_end428 
    set $S5002, _lex_param_2
    iseq $I5002, $S5002, "n"
    set $I5003, $I5002
  unless222_end428:
    set $I5005, $I5003
    if $I5003 goto unless221_end426 
    set $S5003, _lex_param_2
    iseq $I5004, $S5003, "s"
    set $I5005, $I5004
  unless221_end426:
    if $I5005 goto unless220_end424 
.annotate 'line', 488
    set $S5006, _lex_param_2
    concat $S5005, "Unknown unbox type '", $S5006
    concat $S5004, $S5005, "'"
    box $P5001, $S5004
    die $P5001
  unless220_end424:
    find_lex $P5002, "%hll_unbox"
    set $S5007, _lex_param_1
    exists $I5006, $P5002[$S5007]
    if $I5006 goto unless223_end430 
    find_lex $P5003, "%hll_unbox"
    set $S5008, _lex_param_1
    new $P5004, 'Hash'
    set $P5003[$S5008], $P5004
  unless223_end430:
    find_lex $P5005, "%hll_unbox"
    set fb_tmp_52, $P5005
    repr_defined $I5007, fb_tmp_52
    unless $I5007 goto if224_else431 
    set $S5009, _lex_param_1
    set $P5006, fb_tmp_52[$S5009]
    set $P5008, $P5006
    goto if224_end432
  if224_else431:
    null $P5007
    set $P5008, $P5007
  if224_end432:
    unless_null $P5008, vivi_225433
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_225433:
    set $S5010, _lex_param_2
    set $P5008[$S5010], _lex_param_3
    .return (_lex_param_3) 
.end
.HLL "nqp"
.namespace []
.sub "box" :subid("cuid_50_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 496
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$type", _lex_param_3 
    .lex "$post", _lex_param_4 
    .local pmc fb_tmp_53 
    .local pmc fb_tmp_54 
.annotate 'line', 497
    find_lex $P5001, "%hll_box"
    set fb_tmp_54, $P5001
    repr_defined $I5002, fb_tmp_54
    unless $I5002 goto if227_else436 
    set $S5001, _lex_param_2
    set $P5002, fb_tmp_54[$S5001]
    set $P5004, $P5002
    goto if227_end437
  if227_else436:
    null $P5003
    set $P5004, $P5003
  if227_end437:
    unless_null $P5004, vivi_228438
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_228438:
    set fb_tmp_53, $P5004
    repr_defined $I5001, fb_tmp_53
    unless $I5001 goto if226_else434 
    set $S5002, _lex_param_3
    set $P5006, fb_tmp_53[$S5002]
    set $P5008, $P5006
    goto if226_end435
  if226_else434:
    null $P5007
    set $P5008, $P5007
  if226_end435:
    unless_null $P5008, vivi_229439
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_229439:
    $P5010 = $P5008(_lex_param_1, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "unbox" :subid("cuid_51_1361964166.213") :anon :lex :outer("cuid_169_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 501
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$qastcomp", _lex_param_1 
    .lex "$hll", _lex_param_2 
    .lex "$type", _lex_param_3 
    .lex "$post", _lex_param_4 
    .local pmc fb_tmp_55 
    .local pmc fb_tmp_56 
.annotate 'line', 502
    find_lex $P5001, "%hll_unbox"
    set fb_tmp_56, $P5001
    repr_defined $I5002, fb_tmp_56
    unless $I5002 goto if231_else442 
    set $S5001, _lex_param_2
    set $P5002, fb_tmp_56[$S5001]
    set $P5004, $P5002
    goto if231_end443
  if231_else442:
    null $P5003
    set $P5004, $P5003
  if231_end443:
    unless_null $P5004, vivi_232444
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_232444:
    set fb_tmp_55, $P5004
    repr_defined $I5001, fb_tmp_55
    unless $I5001 goto if230_else440 
    set $S5002, _lex_param_3
    set $P5006, fb_tmp_55[$S5002]
    set $P5008, $P5006
    goto if230_end441
  if230_else440:
    null $P5007
    set $P5008, $P5007
  if230_end441:
    unless_null $P5008, vivi_233445
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_233445:
    $P5010 = $P5008(_lex_param_1, _lex_param_4)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_176_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 587
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_175_1361964166.213' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_57 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 589
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback446
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_57, $P5004
    repr_defined $I5001, fb_tmp_57
    unless $I5001 goto if234_else447 
    set $P5006, fb_tmp_57["$REGALLOC"]
    set $P5008, $P5006
    goto if234_end448
  if234_else447:
    null $P5007
    set $P5008, $P5007
  if234_end448:
    unless_null $P5008, vivi_235449
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_235449:
    unless_null $P5008, vivi_236450
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_236450:
    set $P5003, $P5008
  fallback446:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 590
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 591
    $P102."push_pirop"("new", $P101, "'ResizablePMCArray'")
.annotate 'line', 594
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next451:
    unless $P5016, for_done453
    shift $P5019, $P5016
  for_redo452:
    .const 'Sub' $P5018 = 'cuid_175_1361964166.213' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next451
  for_done453:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_175_1361964166.213") :anon :lex :outer("cuid_176_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 594
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 595
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 596
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 597
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_178_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 603
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_177_1361964166.213' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_58 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 605
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback454
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_58, $P5004
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if237_else455 
    set $P5006, fb_tmp_58["$REGALLOC"]
    set $P5008, $P5006
    goto if237_end456
  if237_else455:
    null $P5007
    set $P5008, $P5007
  if237_end456:
    unless_null $P5008, vivi_238457
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_238457:
    unless_null $P5008, vivi_239458
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_239458:
    set $P5003, $P5008
  fallback454:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 606
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 607
    $P102."push_pirop"("new", $P101, "'QRPA'")
.annotate 'line', 610
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next459:
    unless $P5016, for_done461
    shift $P5019, $P5016
  for_redo460:
    .const 'Sub' $P5018 = 'cuid_177_1361964166.213' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next459
  for_done461:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_177_1361964166.213") :anon :lex :outer("cuid_178_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 610
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 611
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 612
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 613
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_180_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 619
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_179_1361964166.213' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_59 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 621
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback462
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_59, $P5004
    repr_defined $I5001, fb_tmp_59
    unless $I5001 goto if240_else463 
    set $P5006, fb_tmp_59["$REGALLOC"]
    set $P5008, $P5006
    goto if240_end464
  if240_else463:
    null $P5007
    set $P5008, $P5007
  if240_end464:
    unless_null $P5008, vivi_241465
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_241465:
    unless_null $P5008, vivi_242466
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_242466:
    set $P5003, $P5008
  fallback462:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 622
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 623
    $P102."push_pirop"("new", $P101, "'ResizableIntegerArray'")
.annotate 'line', 626
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next467:
    unless $P5016, for_done469
    shift $P5019, $P5016
  for_redo468:
    .const 'Sub' $P5018 = 'cuid_179_1361964166.213' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next467
  for_done469:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_179_1361964166.213") :anon :lex :outer("cuid_180_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 626
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 627
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "i")
    set $P101, $P5005
.annotate 'line', 628
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 629
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_182_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 635
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5020 = 'cuid_181_1361964166.213' 
    capture_lex $P5020 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_60 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 637
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback470
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_60, $P5004
    repr_defined $I5001, fb_tmp_60
    unless $I5001 goto if243_else471 
    set $P5006, fb_tmp_60["$REGALLOC"]
    set $P5008, $P5006
    goto if243_end472
  if243_else471:
    null $P5007
    set $P5008, $P5007
  if243_end472:
    unless_null $P5008, vivi_244473
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_244473:
    unless_null $P5008, vivi_245474
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_245474:
    set $P5003, $P5008
  fallback470:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 638
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"($P101 :named("result"))
    set $P102, $P5013
.annotate 'line', 639
    $P102."push_pirop"("new", $P101, "'ResizableStringArray'")
.annotate 'line', 642
    $P5017 = _lex_param_1."list"()
    set $P5014, $P5017
    iter $P5016, $P5017
  for_next475:
    unless $P5016, for_done477
    shift $P5019, $P5016
  for_redo476:
    .const 'Sub' $P5018 = 'cuid_181_1361964166.213' 
    capture_lex $P5018
    $P5014 = $P5018($P5019)
    goto for_next475
  for_done477:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_181_1361964166.213") :anon :lex :outer("cuid_182_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 642
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 643
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_0)
    $P5005 = $P5002."coerce"($P5004, "s")
    set $P101, $P5005
.annotate 'line', 644
    find_lex $P5006, "$ops"
    $P5006."push"($P101)
.annotate 'line', 645
    find_lex $P5007, "$ops"
    find_lex $P5008, "$list_reg"
    $P5009 = $P101."result"()
    $P5010 = $P5007."push_pirop"("push", $P5008, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_184_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 651
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5030 = 'cuid_183_1361964166.213' 
    capture_lex $P5030 
    .lex "$list_reg", $P101 
    .lex "$ops", $P102 
    .lex "$block_reg", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_61 
    .local pmc fb_tmp_62 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 653
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback478
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_61, $P5005
    repr_defined $I5001, fb_tmp_61
    unless $I5001 goto if246_else479 
    set $P5007, fb_tmp_61["$REGALLOC"]
    set $P5009, $P5007
    goto if246_end480
  if246_else479:
    null $P5008
    set $P5009, $P5008
  if246_end480:
    unless_null $P5009, vivi_247481
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_247481:
    unless_null $P5009, vivi_248482
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_248482:
    set $P5004, $P5009
  fallback478:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 654
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5014 = $P5013."new"($P101 :named("result"))
    set $P102, $P5014
.annotate 'line', 655
    $P102."push_pirop"("new", $P101, "'ResizablePMCArray'")
.annotate 'line', 658
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback483
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5016, $P5017
    set fb_tmp_62, $P5016
    repr_defined $I5002, fb_tmp_62
    unless $I5002 goto if249_else484 
    set $P5018, fb_tmp_62["$REGALLOC"]
    set $P5020, $P5018
    goto if249_end485
  if249_else484:
    null $P5019
    set $P5020, $P5019
  if249_end485:
    unless_null $P5020, vivi_250486
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_250486:
    unless_null $P5020, vivi_251487
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_251487:
    set $P5015, $P5020
  fallback483:
    $P5023 = $P5015."fresh_p"()
    set $P103, $P5023
.annotate 'line', 659
    $P5027 = _lex_param_1."list"()
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next488:
    unless $P5026, for_done490
    shift $P5029, $P5026
  for_redo489:
    .const 'Sub' $P5028 = 'cuid_183_1361964166.213' 
    capture_lex $P5028
    $P5024 = $P5028($P5029)
    goto for_next488
  for_done490:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_183_1361964166.213") :anon :lex :outer("cuid_184_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 659
    .param pmc _lex_param_0 
    .lex "$cuid", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 660
    $P5002 = _lex_param_0."cuid"()
    set $P101, $P5002
.annotate 'line', 661
    find_lex $P5003, "$ops"
    find_lex $P5004, "$block_reg"
    set $S5005, $P5004
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = \""
    set $S5006, $P101
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "\""
    $P5003."push_pirop"($S5001)
.annotate 'line', 662
    find_lex $P5005, "$ops"
    find_lex $P5006, "$list_reg"
    find_lex $P5007, "$block_reg"
    $P5008 = $P5005."push_pirop"("push", $P5006, $P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_186_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 668
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_185_1361964166.213' 
    capture_lex $P5022 
    .lex "$hash_reg", $P101 
    .lex "$ops", $P102 
    .lex "$i", $P103 
    .lex "@op_list", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_63 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
.annotate 'line', 670
    find_dynamic_lex $P5005, "$*REGALLOC"
    unless_null $P5005, fallback491
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set fb_tmp_63, $P5006
    repr_defined $I5001, fb_tmp_63
    unless $I5001 goto if252_else492 
    set $P5008, fb_tmp_63["$REGALLOC"]
    set $P5010, $P5008
    goto if252_end493
  if252_else492:
    null $P5009
    set $P5010, $P5009
  if252_end493:
    unless_null $P5010, vivi_253494
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_253494:
    unless_null $P5010, vivi_254495
    die "Contextual $*REGALLOC not found"
    box $P5012, "Contextual $*REGALLOC not found"
    set $P5010, $P5012
  vivi_254495:
    set $P5005, $P5010
  fallback491:
    $P5013 = $P5005."fresh_p"()
    set $P101, $P5013
.annotate 'line', 671
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5015 = $P5014."new"($P101 :named("result"))
    set $P102, $P5015
.annotate 'line', 672
    $P102."push_pirop"("new", $P101, "'Hash'")
    box $P5016, 0
    set $P103, $P5016
.annotate 'line', 676
    $P5017 = _lex_param_1."list"()
    set $P104, $P5017
  while255_test496:
    set $N5001, $P103
    set $N5002, $P104
    islt $I5002, $N5001, $N5002
    box $P5021, $I5002
    set $P5020, $P5021
    unless $I5002 goto while255_done500 
  while255_redo498:
    .const 'Sub' $P5018 = 'cuid_185_1361964166.213' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5020, $P5019
    goto while255_test496 
  while255_done500:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_185_1361964166.213") :anon :lex :outer("cuid_186_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 677
    .lex "$kpost", $P101 
    .lex "$vpost", $P102 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 678
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "@op_list"
    set fb_tmp_64, $P5005
    repr_defined $I5001, fb_tmp_64
    unless $I5001 goto if256_else501 
    find_lex $P5007, "$i"
    set $I5002, $P5007
    set $P5006, fb_tmp_64[$I5002]
    set $P5009, $P5006
    goto if256_end502
  if256_else501:
    null $P5008
    set $P5009, $P5008
  if256_end502:
    unless_null $P5009, vivi_257503
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_257503:
    $P5011 = $P5004."as_post"($P5009)
    $P5012 = $P5003."coerce"($P5011, "s")
    set $P101, $P5012
.annotate 'line', 679
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
    find_lex $P5014, "$i"
    set $N5002, $P5014
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$i", $P5015
.annotate 'line', 682
    find_lex $P5016, "$qastcomp"
    find_lex $P5017, "$qastcomp"
    find_lex $P5018, "@op_list"
    set fb_tmp_65, $P5018
    repr_defined $I5003, fb_tmp_65
    unless $I5003 goto if258_else504 
    find_lex $P5020, "$i"
    set $I5004, $P5020
    set $P5019, fb_tmp_65[$I5004]
    set $P5022, $P5019
    goto if258_end505
  if258_else504:
    null $P5021
    set $P5022, $P5021
  if258_end505:
    unless_null $P5022, vivi_259506
    nqp_get_sc_object $P5023, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5022, $P5023
  vivi_259506:
    $P5024 = $P5017."as_post"($P5022)
    $P5025 = $P5016."coerce"($P5024, "P")
    set $P102, $P5025
.annotate 'line', 683
    find_lex $P5026, "$ops"
    $P5026."push"($P102)
    find_lex $P5027, "$i"
    set $N5005, $P5027
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5028, $N5004
    store_lex "$i", $P5028
.annotate 'line', 686
    find_lex $P5029, "$ops"
    find_lex $P5030, "$hash_reg"
    set $S5004, $P5030
    concat $S5003, $S5004, "["
    $P5031 = $P101."result"()
    set $S5005, $P5031
    concat $S5002, $S5003, $S5005
    concat $S5001, $S5002, "]"
    $P5032 = $P102."result"()
    $P5033 = $P5029."push_pirop"("set", $S5001, $P5032)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_188_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 693
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5043 = 'cuid_187_1361964166.213' 
    capture_lex $P5043 
    .lex "@clist", $P101 
    .lex "$cpast", $P102 
    .lex "$ops", $P103 
    .lex "$endlabel", $P104 
    .lex "$apast", $P105 
    .lex "$apost", $P106 
    .lex "$more", $P107 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_66 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    set $P102, _lex_param_1
  while260_test507:
.annotate 'line', 697
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5009 = $P5008."ACCEPTS"($P102)
    set $P5011, $P5009
    unless $P5009 goto if261_end513 
    $P5010 = $P102."op"()
    set $S5001, $P5010
    iseq $I5001, $S5001, "chain"
    box $P5012, $I5001
    set $P5011, $P5012
  if261_end513:
    set $P5017, $P5011
    unless $P5011 goto while260_done511 
  while260_redo509:
    push $P101, $P102
    set fb_tmp_66, $P102
    repr_defined $I5002, fb_tmp_66
    unless $I5002 goto if262_else514 
    set $P5013, fb_tmp_66[0]
    set $P5015, $P5013
    goto if262_end515
  if262_else514:
    null $P5014
    set $P5015, $P5014
  if262_end515:
    unless_null $P5015, vivi_263516
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_263516:
    set $P102, $P5015
    set $P5017, $P102
    goto while260_test507 
  while260_done511:
.annotate 'line', 702
    nqp_get_sc_object $P5018, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    find_dynamic_lex $P5019, "$*REGALLOC"
    unless_null $P5019, fallback517
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5020, $P5021
    set fb_tmp_67, $P5020
    repr_defined $I5003, fb_tmp_67
    unless $I5003 goto if264_else518 
    set $P5022, fb_tmp_67["$REGALLOC"]
    set $P5024, $P5022
    goto if264_end519
  if264_else518:
    null $P5023
    set $P5024, $P5023
  if264_end519:
    unless_null $P5024, vivi_265520
    nqp_get_sc_object $P5025, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5024, $P5025
  vivi_265520:
    unless_null $P5024, vivi_266521
    die "Contextual $*REGALLOC not found"
    box $P5026, "Contextual $*REGALLOC not found"
    set $P5024, $P5026
  vivi_266521:
    set $P5019, $P5024
  fallback517:
    $P5027 = $P5019."fresh_p"()
    $P5028 = $P5018."new"($P5027 :named("result"))
    set $P103, $P5028
.annotate 'line', 703
    nqp_get_sc_object $P5029, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5030 = _lex_param_0."unique"("chain_end_")
    $P5031 = $P5029."new"($P5030 :named("name"))
    set $P104, $P5031
    pop $P5032, $P101
    set $P102, $P5032
    set fb_tmp_68, $P102
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if267_else522 
    set $P5033, fb_tmp_68[0]
    set $P5035, $P5033
    goto if267_end523
  if267_else522:
    null $P5034
    set $P5035, $P5034
  if267_end523:
    unless_null $P5035, vivi_268524
    nqp_get_sc_object $P5036, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5035, $P5036
  vivi_268524:
    set $P105, $P5035
.annotate 'line', 707
    $P5037 = _lex_param_0."as_post"($P105)
    $P5038 = _lex_param_0."coerce"($P5037, "P")
    set $P106, $P5038
.annotate 'line', 708
    $P103."push"($P106)
    box $P5039, 1
    set $P107, $P5039
  while269_test525:
    set $P5042, $P107
    unless $P107 goto while269_done529 
  while269_redo527:
    .const 'Sub' $P5040 = 'cuid_187_1361964166.213' 
    capture_lex $P5040
    $P5041 = $P5040()
    set $P5042, $P5041
    goto while269_test525 
  while269_done529:
.annotate 'line', 729
    $P103."push"($P104)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_187_1361964166.213") :anon :lex :outer("cuid_188_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 711
    .lex "$bpast", $P101 
    .lex "$bpost", $P102 
    .lex "$name", $P103 
    .local pmc fb_tmp_69 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    find_lex $P5004, "$cpast"
    set fb_tmp_69, $P5004
    repr_defined $I5001, fb_tmp_69
    unless $I5001 goto if270_else530 
    set $P5005, fb_tmp_69[1]
    set $P5007, $P5005
    goto if270_end531
  if270_else530:
    null $P5006
    set $P5007, $P5006
  if270_end531:
    unless_null $P5007, vivi_271532
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_271532:
    set $P101, $P5007
.annotate 'line', 713
    find_lex $P5009, "$qastcomp"
    find_lex $P5010, "$qastcomp"
    $P5011 = $P5010."as_post"($P101)
    $P5012 = $P5009."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 714
    find_lex $P5013, "$ops"
    $P5013."push"($P102)
.annotate 'line', 716
    find_lex $P5014, "$qastcomp"
    find_lex $P5015, "$cpast"
    $P5016 = $P5015."name"()
    $P5017 = $P5014."escape"($P5016)
    set $P103, $P5017
.annotate 'line', 717
    find_lex $P5018, "$ops"
    find_lex $P5019, "$apost"
    find_lex $P5020, "$ops"
    $P5018."push_pirop"("call", $P103, $P5019, $P102, $P5020 :named("result"))
    find_lex $P5021, "@clist"
    unless $P5021 goto if272_else533 
.annotate 'line', 719
.annotate 'line', 720
    find_lex $P5022, "$ops"
    find_lex $P5023, "$ops"
    find_lex $P5024, "$endlabel"
    $P5022."push_pirop"("unless", $P5023, $P5024)
    find_lex $P5026, "@clist"
    pop $P5025, $P5026
    store_lex "$cpast", $P5025
    store_lex "$apost", $P102
    set $P5028, $P102
    goto if272_end534
  if272_else533:
.annotate 'line', 724
    box $P5027, 0
    store_lex "$more", $P5027
    set $P5028, $P5027
  if272_end534:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_189_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 735
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 736
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 93
    $P5002 = _lex_param_1."list"()
    $P5003 = $P5001."new"($P5002 :flat)
    $P5004 = _lex_param_0."as_post"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_196_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 740
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_191_1361964166.213' 
    capture_lex $P5005 
    .lex "$op_name", _lex_param_0 
.annotate 'line', 741
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5003 = 'cuid_191_1361964166.213' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    $P5004 = $P5001."add_core_op"(_lex_param_0, $P5002, 1 :named("inlinable"))
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_191_1361964166.213") :anon :lex :outer("cuid_196_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 741
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5116 = 'cuid_190_1361964166.213' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_192_1361964166.213' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_193_1361964166.213' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_194_1361964166.213' 
    capture_lex $P5116 
    .const 'Sub' $P5116 = 'cuid_195_1361964166.213' 
    capture_lex $P5116 
    .lex "$operands", $P101 
    .lex "$if_id", $P102 
    .lex "$else_lbl", $P103 
    .lex "$end_lbl", $P104 
    .lex "@comp_ops", $P105 
    .lex "@op_types", $P106 
    .lex "@im_args", $P107 
    .lex "$res_type", $P108 
    .lex "$res_reg", $P109 
    .lex "$ops", $P110 
    .lex "$cond_result", $P111 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
    .local pmc fb_tmp_77 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc fb_tmp_81 
    .local pmc fb_tmp_82 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_90 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    new $P5007, 'ResizablePMCArray'
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P111, $P5011
.annotate 'line', 743
    $P5012 = _lex_param_1."list"()
    set $N5001, $P5012
    box $P5013, $N5001
    set $P101, $P5013
    set $N5002, $P101
    set $N5003, 2
    islt $I5001, $N5002, $N5003
    set $I5003, $I5001
    if $I5001 goto unless274_end538 
    set $N5004, $P101
    set $N5005, 3
    isgt $I5002, $N5004, $N5005
    set $I5003, $I5002
  unless274_end538:
    unless $I5003 goto if273_end536 
    find_lex $P5014, "$op_name"
    set $S5003, $P5014
    concat $S5002, "Operation '", $S5003
    concat $S5001, $S5002, "' needs either 2 or 3 operands"
    box $P5015, $S5001
    die $P5015
  if273_end536:
.annotate 'line', 748
    find_lex $P5016, "$op_name"
    $P5017 = _lex_param_0."unique"($P5016)
    set $P102, $P5017
.annotate 'line', 749
    nqp_get_sc_object $P5018, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    set $S5005, $P102
    concat $S5004, $S5005, "_else"
    $P5019 = $P5018."new"($S5004 :named("name"))
    set $P103, $P5019
.annotate 'line', 750
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    set $S5007, $P102
    concat $S5006, $S5007, "_end"
    $P5021 = $P5020."new"($S5006 :named("name"))
    set $P104, $P5021
.annotate 'line', 757
    $P5025 = _lex_param_1."list"()
    set $P5022, $P5025
    iter $P5024, $P5025
  for_next568:
    unless $P5024, for_done570
    shift $P5027, $P5024
  for_redo569:
    .const 'Sub' $P5026 = 'cuid_190_1361964166.213' 
    capture_lex $P5026
    $P5022 = $P5026($P5027)
    goto for_next568
  for_done570:
    find_dynamic_lex $P5028, "$*WANT"
    unless_null $P5028, fallback573
    nqp_get_sc_object $P5030, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5029, $P5030
    set fb_tmp_75, $P5029
    repr_defined $I5005, fb_tmp_75
    unless $I5005 goto if293_else574 
    set $P5031, fb_tmp_75["$WANT"]
    set $P5033, $P5031
    goto if293_end575
  if293_else574:
    null $P5032
    set $P5033, $P5032
  if293_end575:
    unless_null $P5033, vivi_294576
    nqp_get_sc_object $P5034, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5033, $P5034
  vivi_294576:
    unless_null $P5033, vivi_295577
    die "Contextual $*WANT not found"
    box $P5035, "Contextual $*WANT not found"
    set $P5033, $P5035
  vivi_295577:
    set $P5028, $P5033
  fallback573:
    set $S5008, $P5028
    isne $I5004, $S5008, "v"
    unless $I5004 goto if292_end572 
.annotate 'line', 774
    set $N5006, $P101
    set $N5007, 3
    iseq $I5006, $N5006, $N5007
    unless $I5006 goto if296_else578 
    set fb_tmp_76, $P106
    repr_defined $I5008, fb_tmp_76
    unless $I5008 goto if298_else582 
    set $P5036, fb_tmp_76[1]
    set $P5038, $P5036
    goto if298_end583
  if298_else582:
    null $P5037
    set $P5038, $P5037
  if298_end583:
    unless_null $P5038, vivi_299584
    nqp_get_sc_object $P5039, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5038, $P5039
  vivi_299584:
    set $S5009, $P5038
    set fb_tmp_77, $P106
    repr_defined $I5009, fb_tmp_77
    unless $I5009 goto if300_else585 
    set $P5040, fb_tmp_77[2]
    set $P5042, $P5040
    goto if300_end586
  if300_else585:
    null $P5041
    set $P5042, $P5041
  if300_end586:
    unless_null $P5042, vivi_301587
    nqp_get_sc_object $P5043, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5042, $P5043
  vivi_301587:
    set $S5010, $P5042
    iseq $I5007, $S5009, $S5010
    unless $I5007 goto if297_else580 
    set fb_tmp_78, $P106
    repr_defined $I5010, fb_tmp_78
    unless $I5010 goto if302_else588 
    set $P5044, fb_tmp_78[1]
    set $P5046, $P5044
    goto if302_end589
  if302_else588:
    null $P5045
    set $P5046, $P5045
  if302_end589:
    unless_null $P5046, vivi_303590
    nqp_get_sc_object $P5047, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5046, $P5047
  vivi_303590:
    set $S5012, $P5046
    downcase $S5011, $S5012
    set $S5013, $S5011
    goto if297_end581
  if297_else580:
    set $S5013, "p"
  if297_end581:
    set $S5019, $S5013
    goto if296_end579
  if296_else578:
    set fb_tmp_79, $P106
    repr_defined $I5012, fb_tmp_79
    unless $I5012 goto if305_else593 
    set $P5048, fb_tmp_79[0]
    set $P5050, $P5048
    goto if305_end594
  if305_else593:
    null $P5049
    set $P5050, $P5049
  if305_end594:
    unless_null $P5050, vivi_306595
    nqp_get_sc_object $P5051, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5050, $P5051
  vivi_306595:
    set $S5014, $P5050
    set fb_tmp_80, $P106
    repr_defined $I5013, fb_tmp_80
    unless $I5013 goto if307_else596 
    set $P5052, fb_tmp_80[1]
    set $P5054, $P5052
    goto if307_end597
  if307_else596:
    null $P5053
    set $P5054, $P5053
  if307_end597:
    unless_null $P5054, vivi_308598
    nqp_get_sc_object $P5055, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5054, $P5055
  vivi_308598:
    set $S5015, $P5054
    iseq $I5011, $S5014, $S5015
    unless $I5011 goto if304_else591 
    set fb_tmp_81, $P106
    repr_defined $I5014, fb_tmp_81
    unless $I5014 goto if309_else599 
    set $P5056, fb_tmp_81[0]
    set $P5058, $P5056
    goto if309_end600
  if309_else599:
    null $P5057
    set $P5058, $P5057
  if309_end600:
    unless_null $P5058, vivi_310601
    nqp_get_sc_object $P5059, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5058, $P5059
  vivi_310601:
    set $S5017, $P5058
    downcase $S5016, $S5017
    set $S5018, $S5016
    goto if304_end592
  if304_else591:
    set $S5018, "p"
  if304_end592:
    set $S5019, $S5018
  if296_end579:
    box $P5060, $S5019
    set $P108, $P5060
.annotate 'line', 778
    find_dynamic_lex $P5061, "$*REGALLOC"
    unless_null $P5061, fallback602
    nqp_get_sc_object $P5063, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5062, $P5063
    set fb_tmp_82, $P5062
    repr_defined $I5015, fb_tmp_82
    unless $I5015 goto if311_else603 
    set $P5064, fb_tmp_82["$REGALLOC"]
    set $P5066, $P5064
    goto if311_end604
  if311_else603:
    null $P5065
    set $P5066, $P5065
  if311_end604:
    unless_null $P5066, vivi_312605
    nqp_get_sc_object $P5067, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5066, $P5067
  vivi_312605:
    unless_null $P5066, vivi_313606
    die "Contextual $*REGALLOC not found"
    box $P5068, "Contextual $*REGALLOC not found"
    set $P5066, $P5068
  vivi_313606:
    set $P5061, $P5066
  fallback602:
    set $S5021, $P108
    concat $S5020, "fresh_", $S5021
    $P5069 = $P5061.$S5020()
    set $P109, $P5069
  if292_end572:
.annotate 'line', 782
    nqp_get_sc_object $P5070, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5071 = $P5070."new"()
    set $P110, $P5071
    set $P5072, $P109
    unless $P109 goto if315_end610 
    set $N5008, $P101
    set $N5009, 2
    iseq $I5016, $N5008, $N5009
    box $P5073, $I5016
    set $P5072, $P5073
  if315_end610:
    unless $P5072 goto if314_else607 
    .const 'Sub' $P5074 = 'cuid_192_1361964166.213' 
    capture_lex $P5074
    $P5075 = $P5074()
    goto if314_end608
  if314_else607:
.annotate 'line', 790
.annotate 'line', 791
    set fb_tmp_84, $P105
    repr_defined $I5017, fb_tmp_84
    unless $I5017 goto if318_else614 
    set $P5076, fb_tmp_84[0]
    set $P5078, $P5076
    goto if318_end615
  if318_else614:
    null $P5077
    set $P5078, $P5077
  if318_end615:
    unless_null $P5078, vivi_319616
    nqp_get_sc_object $P5079, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5078, $P5079
  vivi_319616:
    $P110."push"($P5078)
    set fb_tmp_85, $P105
    repr_defined $I5018, fb_tmp_85
    unless $I5018 goto if320_else617 
    set $P5080, fb_tmp_85[0]
    set $P5082, $P5080
    goto if320_end618
  if320_else617:
    null $P5081
    set $P5082, $P5081
  if320_end618:
    unless_null $P5082, vivi_321619
    nqp_get_sc_object $P5083, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5082, $P5083
  vivi_321619:
    set $P111, $P5082
  if314_end608:
    set $P5084, $P107
    iter $P5086, $P107
  for_next620:
    unless $P5086, for_done622
    shift $P5088, $P5086
  for_redo621:
    .const 'Sub' $P5087 = 'cuid_193_1361964166.213' 
    capture_lex $P5087
    $P5084 = $P5087($P5088)
    goto for_next620
  for_done622:
.annotate 'line', 801
    find_lex $P5089, "$op_name"
    set $S5025, $P5089
    iseq $I5019, $S5025, "if"
    unless $I5019 goto if322_else623 
    set $S5026, "unless "
    goto if322_end624
  if322_else623:
    set $S5026, "if "
  if322_end624:
.annotate 'line', 802
    set fb_tmp_86, $P105
    repr_defined $I5020, fb_tmp_86
    unless $I5020 goto if323_else625 
    set $P5090, fb_tmp_86[0]
    set $P5092, $P5090
    goto if323_end626
  if323_else625:
    null $P5091
    set $P5092, $P5091
  if323_end626:
    unless_null $P5092, vivi_324627
    nqp_get_sc_object $P5093, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5092, $P5093
  vivi_324627:
    $P5094 = $P5092."result"()
    set $S5027, $P5094
    concat $S5024, $S5026, $S5027
    concat $S5023, $S5024, " goto "
    set $N5010, $P101
    set $N5011, 2
    iseq $I5021, $N5010, $N5011
    unless $I5021 goto if325_else628 
.annotate 'line', 803
    $P5095 = $P104."result"()
    set $P5097, $P5095
    goto if325_end629
  if325_else628:
    $P5096 = $P103."result"()
    set $P5097, $P5096
  if325_end629:
    set $S5028, $P5097
    concat $S5022, $S5023, $S5028
    $P110."push_pirop"($S5022)
    unless $P109 goto if326_else630 
    .const 'Sub' $P5098 = 'cuid_194_1361964166.213' 
    capture_lex $P5098
    $P5099 = $P5098()
    goto if326_end631
  if326_else630:
.annotate 'line', 811
.annotate 'line', 812
    set fb_tmp_88, $P105
    repr_defined $I5022, fb_tmp_88
    unless $I5022 goto if329_else635 
    set $P5100, fb_tmp_88[1]
    set $P5102, $P5100
    goto if329_end636
  if329_else635:
    null $P5101
    set $P5102, $P5101
  if329_end636:
    unless_null $P5102, vivi_330637
    nqp_get_sc_object $P5103, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5102, $P5103
  vivi_330637:
    $P5104 = $P110."push"($P5102)
  if326_end631:
    set $N5012, $P101
    set $N5013, 3
    iseq $I5023, $N5012, $N5013
    unless $I5023 goto if331_end639 
.annotate 'line', 816
.annotate 'line', 817
    $P5105 = $P104."result"()
    $P110."push_pirop"("goto", $P5105)
.annotate 'line', 818
    $P110."push"($P103)
    unless $P109 goto if332_else640 
    .const 'Sub' $P5106 = 'cuid_195_1361964166.213' 
    capture_lex $P5106
    $P5107 = $P5106()
    set $P5113, $P5107
    goto if332_end641
  if332_else640:
.annotate 'line', 824
.annotate 'line', 825
    set fb_tmp_90, $P105
    repr_defined $I5024, fb_tmp_90
    unless $I5024 goto if335_else645 
    set $P5108, fb_tmp_90[2]
    set $P5110, $P5108
    goto if335_end646
  if335_else645:
    null $P5109
    set $P5110, $P5109
  if335_end646:
    unless_null $P5110, vivi_336647
    nqp_get_sc_object $P5111, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5110, $P5111
  vivi_336647:
    $P5112 = $P110."push"($P5110)
    set $P5113, $P5112
  if332_end641:
  if331_end639:
.annotate 'line', 830
    $P110."push"($P104)
.annotate 'line', 831
    set $P5114, $P109
    if $P109 goto unless337_end649 
    box $P5115, "null"
    set $P5114, $P5115
  unless337_end649:
    $P110."result"($P5114)
    .return ($P110) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_190_1361964166.213") :anon :lex :outer("cuid_191_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 757
    .param pmc _lex_param_0 
    .lex "$*HAVE_IMM_ARG", $P101 
    .lex "$*IMM_ARG", $P102 
    .lex "$comp", $P103 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc fb_tmp_73 
    .local pmc fb_tmp_74 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 758
    $P5004 = _lex_param_0."arity"()
    set $N5001, $P5004
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    set $I5007, $I5001
    unless $I5001 goto if275_end540 
    get_id $I5004, _lex_param_0
    find_lex $P5005, "$op"
    set fb_tmp_70, $P5005
    repr_defined $I5006, fb_tmp_70
    unless $I5006 goto if276_else541 
    set $P5006, fb_tmp_70[0]
    set $P5008, $P5006
    goto if276_end542
  if276_else541:
    null $P5007
    set $P5008, $P5007
  if276_end542:
    unless_null $P5008, vivi_277543
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_277543:
    get_id $I5005, $P5008
    iseq $I5003, $I5004, $I5005
    not $I5002, $I5003
    set $I5007, $I5002
  if275_end540:
    box $P5010, $I5007
    set $P101, $P5010
.annotate 'line', 760
    find_lex $P5018, "$qastcomp"
    $P5019 = $P5018."as_post"(_lex_param_0)
    set $P103, $P5019
.annotate 'line', 761
    find_lex $P5020, "@comp_ops"
    $P5020."push"($P103)
.annotate 'line', 762
    find_lex $P5021, "@op_types"
    find_lex $P5022, "$qastcomp"
    $P5023 = $P103."result"()
    $P5024 = $P5022."infer_type"($P5023)
    set $S5002, $P5024
    upcase $S5001, $S5002
    $P5021."push"($S5001)
    unless_null $P101, fallback551
    nqp_get_sc_object $P5026, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5025, $P5026
    set fb_tmp_72, $P5025
    repr_defined $I5009, fb_tmp_72
    unless $I5009 goto if282_else552 
    set $P5027, fb_tmp_72["$HAVE_IMM_ARG"]
    set $P5029, $P5027
    goto if282_end553
  if282_else552:
    null $P5028
    set $P5029, $P5028
  if282_end553:
    unless_null $P5029, vivi_283554
    nqp_get_sc_object $P5030, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5029, $P5030
  vivi_283554:
    unless_null $P5029, vivi_284555
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5031, "Contextual $*HAVE_IMM_ARG not found"
    set $P5029, $P5031
  vivi_284555:
    set $P101, $P5029
  fallback551:
    set $P5051, $P101
    unless $P101 goto if281_end550 
.annotate 'line', 763
    unless_null $P102, fallback558
    nqp_get_sc_object $P5033, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5032, $P5033
    set fb_tmp_73, $P5032
    repr_defined $I5010, fb_tmp_73
    unless $I5010 goto if286_else559 
    set $P5034, fb_tmp_73["$IMM_ARG"]
    set $P5036, $P5034
    goto if286_end560
  if286_else559:
    null $P5035
    set $P5036, $P5035
  if286_end560:
    unless_null $P5036, vivi_287561
    nqp_get_sc_object $P5037, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5036, $P5037
  vivi_287561:
    unless_null $P5036, vivi_288562
    die "Contextual $*IMM_ARG not found"
    box $P5038, "Contextual $*IMM_ARG not found"
    set $P5036, $P5038
  vivi_288562:
    set $P102, $P5036
  fallback558:
    unless $P102 goto if285_else556 
.annotate 'line', 764
.annotate 'line', 765
    find_lex $P5039, "@im_args"
    unless_null $P102, fallback563
    nqp_get_sc_object $P5041, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5040, $P5041
    set fb_tmp_74, $P5040
    repr_defined $I5011, fb_tmp_74
    unless $I5011 goto if289_else564 
    set $P5042, fb_tmp_74["$IMM_ARG"]
    set $P5044, $P5042
    goto if289_end565
  if289_else564:
    null $P5043
    set $P5044, $P5043
  if289_end565:
    unless_null $P5044, vivi_290566
    nqp_get_sc_object $P5045, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5044, $P5045
  vivi_290566:
    unless_null $P5044, vivi_291567
    die "Contextual $*IMM_ARG not found"
    box $P5046, "Contextual $*IMM_ARG not found"
    set $P5044, $P5046
  vivi_291567:
    set $P102, $P5044
  fallback563:
    $P5047 = $P5039."push"($P102)
    set $P5050, $P5047
    goto if285_end557
  if285_else556:
.annotate 'line', 767
    find_lex $P5048, "$op_name"
    set $S5004, $P5048
    concat $S5003, $S5004, " block expects an argument, but there's no immediate block to take it"
    box $P5049, $S5003
    die $P5049
    set $P5050, $P5049
  if285_end557:
    set $P5051, $P5050
  if281_end550:
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_192_1361964166.213") :anon :lex :outer("cuid_191_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 784
    .lex "$coerced", $P101 
    .local pmc fb_tmp_83 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 785
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_83, $P5003
    repr_defined $I5001, fb_tmp_83
    unless $I5001 goto if316_else611 
    set $P5004, fb_tmp_83[0]
    set $P5006, $P5004
    goto if316_end612
  if316_else611:
    null $P5005
    set $P5006, $P5005
  if316_end612:
    unless_null $P5006, vivi_317613
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_317613:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 786
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 787
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5011."push_pirop"("set", $P5012, $P5013)
    store_lex "$cond_result", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_193_1361964166.213") :anon :lex :outer("cuid_191_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 796
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 797
    find_lex $P5001, "$cond_result"
    $P5002 = $P5001."result"()
    $P5003 = _lex_param_0($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_194_1361964166.213") :anon :lex :outer("cuid_191_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 806
    .lex "$then", $P101 
    .local pmc fb_tmp_87 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 807
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_87, $P5003
    repr_defined $I5001, fb_tmp_87
    unless $I5001 goto if327_else632 
    set $P5004, fb_tmp_87[1]
    set $P5006, $P5004
    goto if327_end633
  if327_else632:
    null $P5005
    set $P5006, $P5005
  if327_end633:
    unless_null $P5006, vivi_328634
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_328634:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 808
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 809
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5014 = $P5011."push_pirop"("set", $P5012, $P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_195_1361964166.213") :anon :lex :outer("cuid_191_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 819
    .lex "$else", $P101 
    .local pmc fb_tmp_89 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 820
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "@comp_ops"
    set fb_tmp_89, $P5003
    repr_defined $I5001, fb_tmp_89
    unless $I5001 goto if333_else642 
    set $P5004, fb_tmp_89[2]
    set $P5006, $P5004
    goto if333_end643
  if333_else642:
    null $P5005
    set $P5006, $P5005
  if333_end643:
    unless_null $P5006, vivi_334644
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_334644:
    find_lex $P5008, "$res_type"
    $P5009 = $P5002."coerce"($P5006, $P5008)
    set $P101, $P5009
.annotate 'line', 821
    find_lex $P5010, "$ops"
    $P5010."push"($P101)
.annotate 'line', 822
    find_lex $P5011, "$ops"
    find_lex $P5012, "$res_reg"
    $P5013 = $P101."result"()
    $P5014 = $P5011."push_pirop"("set", $P5012, $P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_197_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 837
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exprpost", $P101 
    .lex "$vivipost", $P102 
    .lex "$vivlabel", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
.annotate 'line', 838
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if338_end654 
    box $P5006, "The 'ifnull' op expects two children"
    die $P5006
  if338_end654:
.annotate 'line', 842
    set fb_tmp_91, _lex_param_1
    repr_defined $I5002, fb_tmp_91
    unless $I5002 goto if339_else655 
    set $P5007, fb_tmp_91[0]
    set $P5009, $P5007
    goto if339_end656
  if339_else655:
    null $P5008
    set $P5009, $P5008
  if339_end656:
    unless_null $P5009, vivi_340657
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_340657:
    $P5011 = _lex_param_0."as_post"($P5009)
    set $P101, $P5011
.annotate 'line', 843
    set fb_tmp_92, _lex_param_1
    repr_defined $I5003, fb_tmp_92
    unless $I5003 goto if341_else658 
    set $P5012, fb_tmp_92[1]
    set $P5014, $P5012
    goto if341_end659
  if341_else658:
    null $P5013
    set $P5014, $P5013
  if341_end659:
    unless_null $P5014, vivi_342660
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5014, $P5015
  vivi_342660:
    $P5016 = _lex_param_0."as_post"($P5014)
.annotate 'line', 844
    $P5017 = $P101."result"()
    $P5018 = _lex_param_0."infer_type"($P5017)
    $P5019 = _lex_param_0."coerce"($P5016, $P5018)
    set $P102, $P5019
.annotate 'line', 845
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5021 = _lex_param_0."unique"("vivi_")
    $P5022 = $P5020."new"($P5021 :named("name"))
    set $P103, $P5022
.annotate 'line', 847
    nqp_get_sc_object $P5023, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5024 = $P5023."new"()
    set $P104, $P5024
.annotate 'line', 848
    $P104."push"($P101)
.annotate 'line', 849
    $P104."push_pirop"("unless_null", $P101, $P103)
.annotate 'line', 850
    $P104."push"($P102)
.annotate 'line', 851
    $P104."push_pirop"("set", $P101, $P102)
.annotate 'line', 852
    $P104."push"($P103)
.annotate 'line', 853
    $P5025 = $P101."result"()
    $P104."result"($P5025)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_202_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 858
    .param pmc _lex_param_0 
    .const 'Sub' $P5009 = 'cuid_201_1361964166.213' 
    capture_lex $P5009 
    .lex "$repness", _lex_param_0 
    new $P5004, 'ResizablePMCArray'
    box $P5005, "while"
    push $P5004, $P5005
    box $P5006, "until"
    push $P5004, $P5006
    set $P5001, $P5004
    iter $P5003, $P5004
  for_next751:
    unless $P5003, for_done753
    shift $P5008, $P5003
  for_redo752:
    .const 'Sub' $P5007 = 'cuid_201_1361964166.213' 
    capture_lex $P5007
    $P5001 = $P5007($P5008)
    goto for_next751
  for_done753:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_201_1361964166.213") :anon :lex :outer("cuid_202_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 859
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_200_1361964166.213' 
    capture_lex $P5006 
    .lex "$op_name", _lex_param_0 
.annotate 'line', 860
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    find_lex $P5002, "$repness"
    set $S5002, $P5002
    set $S5003, _lex_param_0
    concat $S5001, $S5002, $S5003
    .const 'Sub' $P5004 = 'cuid_200_1361964166.213' 
    capture_lex $P5004
    newclosure $P5003, $P5004
    $P5005 = $P5001."add_core_op"($S5001, $P5003, 1 :named("inlinable"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_200_1361964166.213") :anon :lex :outer("cuid_201_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 860
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5128 = 'cuid_199_1361964166.213' 
    capture_lex $P5128 
    .lex "$while_id", $P101 
    .lex "$test_lbl", $P102 
    .lex "$next_lbl", $P103 
    .lex "$redo_lbl", $P104 
    .lex "$hand_lbl", $P105 
    .lex "$done_lbl", $P106 
    .lex "@comp_ops", $P107 
    .lex "@comp_types", $P108 
    .lex "$handler", $P109 
    .lex "$*IMM_ARG", $P110 
    .lex "$res_type", $P111 
    .lex "$res_reg", $P112 
    .lex "$operands", $P113 
    .lex "$ops", $P114 
    .lex "$exc_reg", $P115 
    .lex "$coerced", $P116 
    .lex "$body", $P117 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_97 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc fb_tmp_103 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    .local pmc fb_tmp_106 
    .local pmc fb_tmp_107 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    new $P5007, 'ResizablePMCArray'
    set $P107, $P5007
    new $P5008, 'ResizablePMCArray'
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P112, $P5012
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P113, $P5013
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P114, $P5014
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P115, $P5015
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P116, $P5016
    nqp_get_sc_object $P5017, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P117, $P5017
.annotate 'line', 862
    find_lex $P5018, "$op_name"
    $P5019 = _lex_param_0."unique"($P5018)
    set $P101, $P5019
.annotate 'line', 863
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    set $S5002, $P101
    concat $S5001, $S5002, "_test"
    $P5021 = $P5020."new"($S5001 :named("name"))
    set $P102, $P5021
.annotate 'line', 864
    nqp_get_sc_object $P5022, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    set $S5004, $P101
    concat $S5003, $S5004, "_next"
    $P5023 = $P5022."new"($S5003 :named("name"))
    set $P103, $P5023
.annotate 'line', 865
    nqp_get_sc_object $P5024, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    set $S5006, $P101
    concat $S5005, $S5006, "_redo"
    $P5025 = $P5024."new"($S5005 :named("name"))
    set $P104, $P5025
.annotate 'line', 866
    nqp_get_sc_object $P5026, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    set $S5008, $P101
    concat $S5007, $S5008, "_handlers"
    $P5027 = $P5026."new"($S5007 :named("name"))
    set $P105, $P5027
.annotate 'line', 867
    nqp_get_sc_object $P5028, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    set $S5010, $P101
    concat $S5009, $S5010, "_done"
    $P5029 = $P5028."new"($S5009 :named("name"))
    set $P106, $P5029
    box $P5030, 1
    set $P109, $P5030
.annotate 'line', 875
    $P5041 = _lex_param_1."list"()
    set $P5038, $P5041
    iter $P5040, $P5041
  for_next687:
    unless $P5040, for_done689
    shift $P5043, $P5040
  for_redo688:
    .const 'Sub' $P5042 = 'cuid_199_1361964166.213' 
    capture_lex $P5042
    $P5038 = $P5042($P5043)
    goto for_next687
  for_done689:
    set fb_tmp_97, $P108
    repr_defined $I5003, fb_tmp_97
    unless $I5003 goto if359_else692 
    set $P5044, fb_tmp_97[0]
    set $P5046, $P5044
    goto if359_end693
  if359_else692:
    null $P5045
    set $P5046, $P5045
  if359_end693:
    unless_null $P5046, vivi_360694
    nqp_get_sc_object $P5047, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5046, $P5047
  vivi_360694:
    set $S5011, $P5046
    set fb_tmp_98, $P108
    repr_defined $I5004, fb_tmp_98
    unless $I5004 goto if361_else695 
    set $P5048, fb_tmp_98[1]
    set $P5050, $P5048
    goto if361_end696
  if361_else695:
    null $P5049
    set $P5050, $P5049
  if361_end696:
    unless_null $P5050, vivi_362697
    nqp_get_sc_object $P5051, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5050, $P5051
  vivi_362697:
    set $S5012, $P5050
    iseq $I5002, $S5011, $S5012
    unless $I5002 goto if358_else690 
    set fb_tmp_99, $P108
    repr_defined $I5005, fb_tmp_99
    unless $I5005 goto if363_else698 
    set $P5052, fb_tmp_99[0]
    set $P5054, $P5052
    goto if363_end699
  if363_else698:
    null $P5053
    set $P5054, $P5053
  if363_end699:
    unless_null $P5054, vivi_364700
    nqp_get_sc_object $P5055, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5054, $P5055
  vivi_364700:
    set $S5014, $P5054
    downcase $S5013, $S5014
    set $S5015, $S5013
    goto if358_end691
  if358_else690:
    set $S5015, "p"
  if358_end691:
    box $P5056, $S5015
    set $P111, $P5056
.annotate 'line', 888
    find_dynamic_lex $P5057, "$*REGALLOC"
    unless_null $P5057, fallback701
    nqp_get_sc_object $P5059, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5058, $P5059
    set fb_tmp_100, $P5058
    repr_defined $I5006, fb_tmp_100
    unless $I5006 goto if365_else702 
    set $P5060, fb_tmp_100["$REGALLOC"]
    set $P5062, $P5060
    goto if365_end703
  if365_else702:
    null $P5061
    set $P5062, $P5061
  if365_end703:
    unless_null $P5062, vivi_366704
    nqp_get_sc_object $P5063, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5062, $P5063
  vivi_366704:
    unless_null $P5062, vivi_367705
    die "Contextual $*REGALLOC not found"
    box $P5064, "Contextual $*REGALLOC not found"
    set $P5062, $P5064
  vivi_367705:
    set $P5057, $P5062
  fallback701:
    set $S5017, $P111
    concat $S5016, "fresh_", $S5017
    $P5065 = $P5057.$S5016()
    set $P112, $P5065
    set $N5001, $P107
    box $P5066, $N5001
    set $P113, $P5066
    set $N5002, $P113
    set $N5003, 2
    isne $I5007, $N5002, $N5003
    set $I5009, $I5007
    unless $I5007 goto if369_end709 
    set $N5004, $P113
    set $N5005, 3
    isne $I5008, $N5004, $N5005
    set $I5009, $I5008
  if369_end709:
    unless $I5009 goto if368_end707 
    find_lex $P5067, "$repness"
    set $S5021, $P5067
    concat $S5020, "Operation '", $S5021
    find_lex $P5068, "$op_name"
    set $S5022, $P5068
    concat $S5019, $S5020, $S5022
    concat $S5018, $S5019, "' needs 2 or 3 operands"
    box $P5069, $S5018
    die $P5069
  if368_end707:
.annotate 'line', 896
    nqp_get_sc_object $P5070, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5071 = $P5070."new"()
    set $P114, $P5071
.annotate 'line', 897
    $P114."result"($P112)
    unless $P109 goto if370_end711 
.annotate 'line', 900
.annotate 'line', 901
    find_dynamic_lex $P5072, "$*REGALLOC"
    unless_null $P5072, fallback712
    nqp_get_sc_object $P5074, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5073, $P5074
    set fb_tmp_101, $P5073
    repr_defined $I5010, fb_tmp_101
    unless $I5010 goto if371_else713 
    set $P5075, fb_tmp_101["$REGALLOC"]
    set $P5077, $P5075
    goto if371_end714
  if371_else713:
    null $P5076
    set $P5077, $P5076
  if371_end714:
    unless_null $P5077, vivi_372715
    nqp_get_sc_object $P5078, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5077, $P5078
  vivi_372715:
    unless_null $P5077, vivi_373716
    die "Contextual $*REGALLOC not found"
    box $P5079, "Contextual $*REGALLOC not found"
    set $P5077, $P5079
  vivi_373716:
    set $P5072, $P5077
  fallback712:
    $P5080 = $P5072."fresh_p"()
    set $P115, $P5080
.annotate 'line', 902
    $P114."push_pirop"("new", $P115, "'ExceptionHandler'", "[.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]")
.annotate 'line', 904
    $P114."push_pirop"("set_label", $P115, $P105)
.annotate 'line', 905
    $P5081 = $P114."push_pirop"("push_eh", $P115)
  if370_end711:
.annotate 'line', 910
    set fb_tmp_102, $P107
    repr_defined $I5011, fb_tmp_102
    unless $I5011 goto if374_else717 
    set $P5082, fb_tmp_102[0]
    set $P5084, $P5082
    goto if374_end718
  if374_else717:
    null $P5083
    set $P5084, $P5083
  if374_end718:
    unless_null $P5084, vivi_375719
    nqp_get_sc_object $P5085, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5084, $P5085
  vivi_375719:
    $P5086 = _lex_param_0."coerce"($P5084, $P111)
    set $P116, $P5086
    find_lex $P5087, "$repness"
    unless $P5087 goto if376_end721 
.annotate 'line', 911
.annotate 'line', 914
    $P5088 = $P114."push_pirop"("goto", $P104)
  if376_end721:
.annotate 'line', 916
    $P114."push"($P102)
.annotate 'line', 917
    $P114."push"($P116)
.annotate 'line', 918
    $P5089 = $P116."result"()
    $P114."push_pirop"("set", $P112, $P5089)
.annotate 'line', 919
    find_lex $P5090, "$op_name"
    set $S5026, $P5090
    iseq $I5012, $S5026, "while"
    unless $I5012 goto if377_else722 
    set $S5027, "unless "
    goto if377_end723
  if377_else722:
    set $S5027, "if "
  if377_end723:
.annotate 'line', 920
    set fb_tmp_103, $P107
    repr_defined $I5013, fb_tmp_103
    unless $I5013 goto if378_else724 
    set $P5091, fb_tmp_103[0]
    set $P5093, $P5091
    goto if378_end725
  if378_else724:
    null $P5092
    set $P5093, $P5092
  if378_end725:
    unless_null $P5093, vivi_379726
    nqp_get_sc_object $P5094, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5093, $P5094
  vivi_379726:
    $P5095 = $P5093."result"()
    set $S5028, $P5095
    concat $S5025, $S5027, $S5028
    concat $S5024, $S5025, " goto "
    $P5096 = $P106."result"()
    set $S5029, $P5096
    concat $S5023, $S5024, $S5029
    $P114."push_pirop"($S5023)
    unless_null $P110, fallback729
    nqp_get_sc_object $P5098, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5097, $P5098
    set fb_tmp_104, $P5097
    repr_defined $I5014, fb_tmp_104
    unless $I5014 goto if381_else730 
    set $P5099, fb_tmp_104["$IMM_ARG"]
    set $P5101, $P5099
    goto if381_end731
  if381_else730:
    null $P5100
    set $P5101, $P5100
  if381_end731:
    unless_null $P5101, vivi_382732
    nqp_get_sc_object $P5102, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5101, $P5102
  vivi_382732:
    unless_null $P5101, vivi_383733
    die "Contextual $*IMM_ARG not found"
    box $P5103, "Contextual $*IMM_ARG not found"
    set $P5101, $P5103
  vivi_383733:
    set $P110, $P5101
  fallback729:
    unless $P110 goto if380_end728 
.annotate 'line', 923
.annotate 'line', 924
    $P5111 = $P116."result"()
    unless_null $P110, fallback734
    nqp_get_sc_object $P5105, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5104, $P5105
    set fb_tmp_105, $P5104
    repr_defined $I5015, fb_tmp_105
    unless $I5015 goto if384_else735 
    set $P5106, fb_tmp_105["$IMM_ARG"]
    set $P5108, $P5106
    goto if384_end736
  if384_else735:
    null $P5107
    set $P5108, $P5107
  if384_end736:
    unless_null $P5108, vivi_385737
    nqp_get_sc_object $P5109, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5108, $P5109
  vivi_385737:
    unless_null $P5108, vivi_386738
    die "Contextual $*IMM_ARG not found"
    box $P5110, "Contextual $*IMM_ARG not found"
    set $P5108, $P5110
  vivi_386738:
    set $P110, $P5108
  fallback734:
    $P5112 = $P110($P5111)
  if380_end728:
.annotate 'line', 928
    set fb_tmp_106, $P107
    repr_defined $I5016, fb_tmp_106
    unless $I5016 goto if387_else739 
    set $P5113, fb_tmp_106[1]
    set $P5115, $P5113
    goto if387_end740
  if387_else739:
    null $P5114
    set $P5115, $P5114
  if387_end740:
    unless_null $P5115, vivi_388741
    nqp_get_sc_object $P5116, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5115, $P5116
  vivi_388741:
    $P5117 = _lex_param_0."coerce"($P5115, $P111)
    set $P117, $P5117
.annotate 'line', 929
    $P114."push"($P104)
.annotate 'line', 930
    $P114."push"($P117)
.annotate 'line', 931
    $P5118 = $P117."result"()
    $P114."push_pirop"("set", $P112, $P5118)
    set $N5006, $P113
    set $N5007, 3
    iseq $I5017, $N5006, $N5007
    unless $I5017 goto if389_end743 
.annotate 'line', 935
.annotate 'line', 936
    $P114."push"($P103)
.annotate 'line', 937
    set fb_tmp_107, $P107
    repr_defined $I5018, fb_tmp_107
    unless $I5018 goto if390_else744 
    set $P5119, fb_tmp_107[2]
    set $P5121, $P5119
    goto if390_end745
  if390_else744:
    null $P5120
    set $P5121, $P5120
  if390_end745:
    unless_null $P5121, vivi_391746
    nqp_get_sc_object $P5122, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5121, $P5122
  vivi_391746:
    $P5123 = $P114."push"($P5121)
  if389_end743:
.annotate 'line', 941
    $P5124 = $P102."result"()
    set $S5031, $P5124
    concat $S5030, "goto ", $S5031
    $P114."push_pirop"($S5030)
    unless $P109 goto if392_else747 
.annotate 'line', 944
.annotate 'line', 945
    $P114."push"($P105)
.annotate 'line', 946
    set $S5034, $P115
    concat $S5033, "(", $S5034
    concat $S5032, $S5033, ")"
    $P114."push_pirop"(".get_results", $S5032)
.annotate 'line', 947
    $P114."push_pirop"("pop_upto_eh", $P115)
.annotate 'line', 948
    $P114."push_pirop"("getattribute", $P115, $P115, "'type'")
.annotate 'line', 949
    set $N5008, $P113
    set $N5009, 3
    iseq $I5019, $N5008, $N5009
    unless $I5019 goto if393_else749 
    set $P5125, $P103
    goto if393_end750
  if393_else749:
    set $P5125, $P102
  if393_end750:
    $P114."push_pirop"("eq", $P115, ".CONTROL_LOOP_NEXT", $P5125)
.annotate 'line', 951
    $P114."push_pirop"("eq", $P115, ".CONTROL_LOOP_REDO", $P104)
.annotate 'line', 952
    $P114."push"($P106)
.annotate 'line', 953
    $P5126 = $P114."push_pirop"("pop_eh")
    goto if392_end748
  if392_else747:
.annotate 'line', 955
.annotate 'line', 956
    $P5127 = $P114."push"($P106)
  if392_end748:
    .return ($P114) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_199_1361964166.213") :anon :lex :outer("cuid_200_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 875
    .param pmc _lex_param_0 
    .const 'Sub' $P5006 = 'cuid_198_1361964166.213' 
    capture_lex $P5006 
    .lex "$_", _lex_param_0 
.annotate 'line', 876
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "nohandler"
    unless $I5001 goto if346_else666 
    box $P5002, 0
    store_lex "$handler", $P5002
    set $P5005, $P5002
    goto if346_end667
  if346_else666:
    .const 'Sub' $P5003 = 'cuid_198_1361964166.213' 
    capture_lex $P5003
    $P5004 = $P5003()
    set $P5005, $P5004
  if346_end667:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_198_1361964166.213") :anon :lex :outer("cuid_199_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 877
    .lex "$*HAVE_IMM_ARG", $P101 
    .lex "$comp", $P102 
    .local pmc fb_tmp_94 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 878
    find_lex $P5003, "$_"
    $P5004 = $P5003."arity"()
    set $N5001, $P5004
    set $N5002, 0
    isgt $I5001, $N5001, $N5002
    set $I5006, $I5001
    unless $I5001 goto if347_end669 
    find_lex $P5005, "$_"
    get_id $I5003, $P5005
    find_lex $P5006, "$op"
    $P5007 = $P5006."list"()
    set fb_tmp_94, $P5007
    repr_defined $I5005, fb_tmp_94
    unless $I5005 goto if348_else670 
    set $P5008, fb_tmp_94[1]
    set $P5010, $P5008
    goto if348_end671
  if348_else670:
    null $P5009
    set $P5010, $P5009
  if348_end671:
    unless_null $P5010, vivi_349672
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_349672:
    get_id $I5004, $P5010
    iseq $I5002, $I5003, $I5004
    set $I5006, $I5002
  if347_end669:
    box $P5012, $I5006
    set $P101, $P5012
.annotate 'line', 879
    find_lex $P5013, "$qastcomp"
    find_lex $P5014, "$_"
    $P5015 = $P5013."as_post"($P5014)
    set $P102, $P5015
.annotate 'line', 880
    find_lex $P5016, "@comp_ops"
    $P5016."push"($P102)
.annotate 'line', 881
    find_lex $P5017, "@comp_types"
    find_lex $P5018, "$qastcomp"
    $P5019 = $P102."result"()
    $P5020 = $P5018."infer_type"($P5019)
    $P5017."push"($P5020)
    unless_null $P101, fallback677
    nqp_get_sc_object $P5022, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5021, $P5022
    set fb_tmp_95, $P5021
    repr_defined $I5007, fb_tmp_95
    unless $I5007 goto if352_else678 
    set $P5023, fb_tmp_95["$HAVE_IMM_ARG"]
    set $P5025, $P5023
    goto if352_end679
  if352_else678:
    null $P5024
    set $P5025, $P5024
  if352_end679:
    unless_null $P5025, vivi_353680
    nqp_get_sc_object $P5026, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5025, $P5026
  vivi_353680:
    unless_null $P5025, vivi_354681
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5027, "Contextual $*HAVE_IMM_ARG not found"
    set $P5025, $P5027
  vivi_354681:
    set $P101, $P5025
  fallback677:
    set $P5036, $P101
    unless $P101 goto if351_end676 
    find_dynamic_lex $P5028, "$*IMM_ARG"
    unless_null $P5028, fallback682
    nqp_get_sc_object $P5030, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5029, $P5030
    set fb_tmp_96, $P5029
    repr_defined $I5009, fb_tmp_96
    unless $I5009 goto if355_else683 
    set $P5031, fb_tmp_96["$IMM_ARG"]
    set $P5033, $P5031
    goto if355_end684
  if355_else683:
    null $P5032
    set $P5033, $P5032
  if355_end684:
    unless_null $P5033, vivi_356685
    nqp_get_sc_object $P5034, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5033, $P5034
  vivi_356685:
    unless_null $P5033, vivi_357686
    die "Contextual $*IMM_ARG not found"
    box $P5035, "Contextual $*IMM_ARG not found"
    set $P5033, $P5035
  vivi_357686:
    set $P5028, $P5033
  fallback682:
    isfalse $I5008, $P5028
    box $P5037, $I5008
    set $P5036, $P5037
  if351_end676:
    set $P5040, $P5036
    unless $P5036 goto if350_end674 
.annotate 'line', 882
    find_lex $P5038, "$op_name"
    set $S5002, $P5038
    concat $S5001, $S5002, " block expects an argument, but there's no immediate block to take it"
    box $P5039, $S5001
    die $P5039
    set $P5040, $P5039
  if350_end674:
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_204_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 964
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5112 = 'cuid_203_1361964166.213' 
    capture_lex $P5112 
    .const 'Sub' $P5112 = 'cuid_205_1361964166.213' 
    capture_lex $P5112 
    .lex "$handler", $P101 
    .lex "@operands", $P102 
    .lex "$res", $P103 
    .lex "$curval", $P104 
    .lex "$iter", $P105 
    .lex "$ops", $P106 
    .lex "$listpost", $P107 
    .lex "$blockpost", $P108 
    .lex "$exc_reg", $P109 
    .lex "$hand_lbl", $P110 
    .lex "$lbl_next", $P111 
    .lex "$lbl_redo", $P112 
    .lex "$lbl_done", $P113 
    .lex "@valreg", $P114 
    .lex "$arity", $P115 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_108 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc fb_tmp_117 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P112, $P5012
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P113, $P5013
    new $P5014, 'ResizablePMCArray'
    set $P114, $P5014
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P115, $P5015
    box $P5016, 1
    set $P101, $P5016
.annotate 'line', 967
    $P5020 = _lex_param_1."list"()
    set $P5017, $P5020
    iter $P5019, $P5020
  for_next759:
    unless $P5019, for_done761
    shift $P5022, $P5019
  for_redo760:
    .const 'Sub' $P5021 = 'cuid_203_1361964166.213' 
    capture_lex $P5021
    $P5017 = $P5021($P5022)
    goto for_next759
  for_done761:
    set $N5001, $P102
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if395_end763 
.annotate 'line', 972
    box $P5023, "Operation 'for' needs 2 operands"
    die $P5023
  if395_end763:
    set fb_tmp_108, $P102
    repr_defined $I5003, fb_tmp_108
    unless $I5003 goto if397_else766 
    set $P5024, fb_tmp_108[1]
    set $P5026, $P5024
    goto if397_end767
  if397_else766:
    null $P5025
    set $P5026, $P5025
  if397_end767:
    unless_null $P5026, vivi_398768
    nqp_get_sc_object $P5027, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5026, $P5027
  vivi_398768:
    nqp_get_sc_object $P5028, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    type_check $I5002, $P5026, $P5028
    if $I5002 goto unless396_end765 
.annotate 'line', 975
    box $P5029, "Operation 'for' expects a block as its second operand"
    die $P5029
  unless396_end765:
.annotate 'line', 978
    set fb_tmp_109, $P102
    repr_defined $I5005, fb_tmp_109
    unless $I5005 goto if400_else771 
    set $P5030, fb_tmp_109[1]
    set $P5032, $P5030
    goto if400_end772
  if400_else771:
    null $P5031
    set $P5032, $P5031
  if400_end772:
    unless_null $P5032, vivi_401773
    nqp_get_sc_object $P5033, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5032, $P5033
  vivi_401773:
    $P5034 = $P5032."blocktype"()
    set $S5001, $P5034
    iseq $I5004, $S5001, "immediate"
    unless $I5004 goto if399_end770 
.annotate 'line', 979
    set fb_tmp_110, $P102
    repr_defined $I5006, fb_tmp_110
    unless $I5006 goto if402_else774 
    set $P5035, fb_tmp_110[1]
    set $P5037, $P5035
    goto if402_end775
  if402_else774:
    null $P5036
    set $P5037, $P5036
  if402_end775:
    unless_null $P5037, vivi_403776
    nqp_get_sc_object $P5038, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5037, $P5038
  vivi_403776:
    $P5039 = $P5037."blocktype"("declaration")
  if399_end770:
.annotate 'line', 983
    find_dynamic_lex $P5040, "$*REGALLOC"
    unless_null $P5040, fallback777
    nqp_get_sc_object $P5042, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5041, $P5042
    set fb_tmp_111, $P5041
    repr_defined $I5007, fb_tmp_111
    unless $I5007 goto if404_else778 
    set $P5043, fb_tmp_111["$REGALLOC"]
    set $P5045, $P5043
    goto if404_end779
  if404_else778:
    null $P5044
    set $P5045, $P5044
  if404_end779:
    unless_null $P5045, vivi_405780
    nqp_get_sc_object $P5046, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5045, $P5046
  vivi_405780:
    unless_null $P5045, vivi_406781
    die "Contextual $*REGALLOC not found"
    box $P5047, "Contextual $*REGALLOC not found"
    set $P5045, $P5047
  vivi_406781:
    set $P5040, $P5045
  fallback777:
    $P5048 = $P5040."fresh_p"()
    set $P103, $P5048
.annotate 'line', 984
    find_dynamic_lex $P5049, "$*REGALLOC"
    unless_null $P5049, fallback782
    nqp_get_sc_object $P5051, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5050, $P5051
    set fb_tmp_112, $P5050
    repr_defined $I5008, fb_tmp_112
    unless $I5008 goto if407_else783 
    set $P5052, fb_tmp_112["$REGALLOC"]
    set $P5054, $P5052
    goto if407_end784
  if407_else783:
    null $P5053
    set $P5054, $P5053
  if407_end784:
    unless_null $P5054, vivi_408785
    nqp_get_sc_object $P5055, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5054, $P5055
  vivi_408785:
    unless_null $P5054, vivi_409786
    die "Contextual $*REGALLOC not found"
    box $P5056, "Contextual $*REGALLOC not found"
    set $P5054, $P5056
  vivi_409786:
    set $P5049, $P5054
  fallback782:
    $P5057 = $P5049."fresh_p"()
    set $P104, $P5057
.annotate 'line', 985
    find_dynamic_lex $P5058, "$*REGALLOC"
    unless_null $P5058, fallback787
    nqp_get_sc_object $P5060, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5059, $P5060
    set fb_tmp_113, $P5059
    repr_defined $I5009, fb_tmp_113
    unless $I5009 goto if410_else788 
    set $P5061, fb_tmp_113["$REGALLOC"]
    set $P5063, $P5061
    goto if410_end789
  if410_else788:
    null $P5062
    set $P5063, $P5062
  if410_end789:
    unless_null $P5063, vivi_411790
    nqp_get_sc_object $P5064, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5063, $P5064
  vivi_411790:
    unless_null $P5063, vivi_412791
    die "Contextual $*REGALLOC not found"
    box $P5065, "Contextual $*REGALLOC not found"
    set $P5063, $P5065
  vivi_412791:
    set $P5058, $P5063
  fallback787:
    $P5066 = $P5058."fresh_p"()
    set $P105, $P5066
.annotate 'line', 986
    nqp_get_sc_object $P5067, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5068 = $P5067."new"()
    set $P106, $P5068
.annotate 'line', 987
    set fb_tmp_114, $P102
    repr_defined $I5010, fb_tmp_114
    unless $I5010 goto if413_else792 
    set $P5069, fb_tmp_114[0]
    set $P5071, $P5069
    goto if413_end793
  if413_else792:
    null $P5070
    set $P5071, $P5070
  if413_end793:
    unless_null $P5071, vivi_414794
    nqp_get_sc_object $P5072, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5071, $P5072
  vivi_414794:
    $P5073 = _lex_param_0."as_post"($P5071)
    $P5074 = _lex_param_0."coerce"($P5073, "P")
    set $P107, $P5074
.annotate 'line', 988
    set fb_tmp_115, $P102
    repr_defined $I5011, fb_tmp_115
    unless $I5011 goto if415_else795 
    set $P5075, fb_tmp_115[1]
    set $P5077, $P5075
    goto if415_end796
  if415_else795:
    null $P5076
    set $P5077, $P5076
  if415_end796:
    unless_null $P5077, vivi_416797
    nqp_get_sc_object $P5078, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5077, $P5078
  vivi_416797:
    $P5079 = _lex_param_0."as_post"($P5077)
    $P5080 = _lex_param_0."coerce"($P5079, "P")
    set $P108, $P5080
.annotate 'line', 989
    $P106."push"($P107)
.annotate 'line', 992
    $P106."push_pirop"("set", $P103, $P107)
.annotate 'line', 993
    $P106."push_pirop"("iter", $P105, $P107)
    unless $P101 goto if417_end799 
.annotate 'line', 998
.annotate 'line', 999
    find_dynamic_lex $P5081, "$*REGALLOC"
    unless_null $P5081, fallback800
    nqp_get_sc_object $P5083, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5082, $P5083
    set fb_tmp_116, $P5082
    repr_defined $I5012, fb_tmp_116
    unless $I5012 goto if418_else801 
    set $P5084, fb_tmp_116["$REGALLOC"]
    set $P5086, $P5084
    goto if418_end802
  if418_else801:
    null $P5085
    set $P5086, $P5085
  if418_end802:
    unless_null $P5086, vivi_419803
    nqp_get_sc_object $P5087, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5086, $P5087
  vivi_419803:
    unless_null $P5086, vivi_420804
    die "Contextual $*REGALLOC not found"
    box $P5088, "Contextual $*REGALLOC not found"
    set $P5086, $P5088
  vivi_420804:
    set $P5081, $P5086
  fallback800:
    $P5089 = $P5081."fresh_p"()
    set $P109, $P5089
.annotate 'line', 1000
    nqp_get_sc_object $P5090, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5091 = $P5090."new"("for_handlers" :named("name"))
    set $P110, $P5091
.annotate 'line', 1001
    $P106."push_pirop"("new", $P109, "'ExceptionHandler'", "[.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]")
.annotate 'line', 1003
    $P106."push_pirop"("set_label", $P109, $P110)
.annotate 'line', 1004
    $P5092 = $P106."push_pirop"("push_eh", $P109)
  if417_end799:
.annotate 'line', 1008
    nqp_get_sc_object $P5093, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5094 = $P5093."new"("for_next" :named("name"))
    set $P111, $P5094
.annotate 'line', 1009
    nqp_get_sc_object $P5095, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5096 = $P5095."new"("for_redo" :named("name"))
    set $P112, $P5096
.annotate 'line', 1010
    nqp_get_sc_object $P5097, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5098 = $P5097."new"("for_done" :named("name"))
    set $P113, $P5098
.annotate 'line', 1011
    $P106."push"($P111)
.annotate 'line', 1012
    $P106."push_pirop"("unless", $P105, $P113)
.annotate 'line', 1016
    set fb_tmp_117, $P102
    repr_defined $I5013, fb_tmp_117
    unless $I5013 goto if422_else807 
    set $P5099, fb_tmp_117[1]
    set $P5101, $P5099
    goto if422_end808
  if422_else807:
    null $P5100
    set $P5101, $P5100
  if422_end808:
    unless_null $P5101, vivi_423809
    nqp_get_sc_object $P5102, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5101, $P5102
  vivi_423809:
    $P5103 = $P5101."arity"()
    set $P5104, $P5103
    if $P5103 goto unless421_end806 
    box $P5105, 1
    set $P5104, $P5105
  unless421_end806:
    set $P115, $P5104
  while424_test810:
    set $N5003, $P115
    set $N5004, 0
    isgt $I5014, $N5003, $N5004
    box $P5109, $I5014
    set $P5108, $P5109
    unless $I5014 goto while424_done814 
  while424_redo812:
    .const 'Sub' $P5106 = 'cuid_205_1361964166.213' 
    capture_lex $P5106
    $P5107 = $P5106()
    set $P5108, $P5107
    goto while424_test810 
  while424_done814:
.annotate 'line', 1025
    $P106."push"($P112)
.annotate 'line', 1026
    $P106."push"($P108)
.annotate 'line', 1027
    $P106."push_pirop"("call", $P108, $P114 :flat, $P103 :named("result"))
.annotate 'line', 1030
    $P106."push_pirop"("goto", $P111)
    unless $P101 goto if428_else820 
.annotate 'line', 1033
.annotate 'line', 1034
    $P106."push"($P110)
.annotate 'line', 1035
    set $S5004, $P109
    concat $S5003, "(", $S5004
    concat $S5002, $S5003, ")"
    $P106."push_pirop"(".get_results", $S5002)
.annotate 'line', 1036
    $P106."push_pirop"("pop_upto_eh", $P109)
.annotate 'line', 1037
    $P106."push_pirop"("getattribute", $P109, $P109, "'type'")
.annotate 'line', 1038
    $P106."push_pirop"("eq", $P109, ".CONTROL_LOOP_NEXT", $P111)
.annotate 'line', 1039
    $P106."push_pirop"("eq", $P109, ".CONTROL_LOOP_REDO", $P112)
.annotate 'line', 1040
    $P106."push"($P113)
.annotate 'line', 1041
    $P5110 = $P106."push_pirop"("pop_eh")
    goto if428_end821
  if428_else820:
.annotate 'line', 1043
.annotate 'line', 1044
    $P5111 = $P106."push"($P113)
  if428_end821:
.annotate 'line', 1048
    $P106."result"($P103)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_203_1361964166.213") :anon :lex :outer("cuid_204_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 967
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 968
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "nohandler"
    unless $I5001 goto if394_else757 
    box $P5002, 0
    store_lex "$handler", $P5002
    set $P5005, $P5002
    goto if394_end758
  if394_else757:
.annotate 'line', 969
    find_lex $P5003, "@operands"
    $P5004 = $P5003."push"(_lex_param_0)
    set $P5005, $P5004
  if394_end758:
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_205_1361964166.213") :anon :lex :outer("cuid_204_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1017
    .lex "$reg", $P101 
    .local pmc fb_tmp_118 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1018
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback815
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_118, $P5003
    repr_defined $I5001, fb_tmp_118
    unless $I5001 goto if425_else816 
    set $P5005, fb_tmp_118["$REGALLOC"]
    set $P5007, $P5005
    goto if425_end817
  if425_else816:
    null $P5006
    set $P5007, $P5006
  if425_end817:
    unless_null $P5007, vivi_426818
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_426818:
    unless_null $P5007, vivi_427819
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_427819:
    set $P5002, $P5007
  fallback815:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 1019
    find_lex $P5011, "$ops"
    find_lex $P5012, "$iter"
    $P5011."push_pirop"("shift", $P101, $P5012)
    find_lex $P5013, "@valreg"
    push $P5013, $P101
    find_lex $P5014, "$arity"
    set $N5002, $P5014
    set $N5003, 1
    sub $N5001, $N5002, $N5003
    box $P5015, $N5001
    store_lex "$arity", $P5015
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_206_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1052
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$lbl", $P102 
    .lex "$dreg", $P103 
    .lex "$rreg", $P104 
    .lex "$test", $P105 
    .lex "$then", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_119 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc fb_tmp_122 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
.annotate 'line', 1053
    $P5007 = _lex_param_1."list"()
    set $N5001, $P5007
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if429_end823 
    box $P5008, "Operation 'defor' needs 2 operands"
    die $P5008
  if429_end823:
.annotate 'line', 1056
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5010 = $P5009."new"()
    set $P101, $P5010
.annotate 'line', 1057
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5012 = $P5011."new"("defor" :named("name"))
    set $P102, $P5012
.annotate 'line', 1058
    find_dynamic_lex $P5013, "$*REGALLOC"
    unless_null $P5013, fallback824
    nqp_get_sc_object $P5015, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5014, $P5015
    set fb_tmp_119, $P5014
    repr_defined $I5002, fb_tmp_119
    unless $I5002 goto if430_else825 
    set $P5016, fb_tmp_119["$REGALLOC"]
    set $P5018, $P5016
    goto if430_end826
  if430_else825:
    null $P5017
    set $P5018, $P5017
  if430_end826:
    unless_null $P5018, vivi_431827
    nqp_get_sc_object $P5019, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5018, $P5019
  vivi_431827:
    unless_null $P5018, vivi_432828
    die "Contextual $*REGALLOC not found"
    box $P5020, "Contextual $*REGALLOC not found"
    set $P5018, $P5020
  vivi_432828:
    set $P5013, $P5018
  fallback824:
    $P5021 = $P5013."fresh_i"()
    set $P103, $P5021
.annotate 'line', 1059
    find_dynamic_lex $P5022, "$*REGALLOC"
    unless_null $P5022, fallback829
    nqp_get_sc_object $P5024, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5023, $P5024
    set fb_tmp_120, $P5023
    repr_defined $I5003, fb_tmp_120
    unless $I5003 goto if433_else830 
    set $P5025, fb_tmp_120["$REGALLOC"]
    set $P5027, $P5025
    goto if433_end831
  if433_else830:
    null $P5026
    set $P5027, $P5026
  if433_end831:
    unless_null $P5027, vivi_434832
    nqp_get_sc_object $P5028, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5027, $P5028
  vivi_434832:
    unless_null $P5027, vivi_435833
    die "Contextual $*REGALLOC not found"
    box $P5029, "Contextual $*REGALLOC not found"
    set $P5027, $P5029
  vivi_435833:
    set $P5022, $P5027
  fallback829:
    $P5030 = $P5022."fresh_p"()
    set $P104, $P5030
.annotate 'line', 1060
    set fb_tmp_121, _lex_param_1
    repr_defined $I5004, fb_tmp_121
    unless $I5004 goto if436_else834 
    set $P5031, fb_tmp_121[0]
    set $P5033, $P5031
    goto if436_end835
  if436_else834:
    null $P5032
    set $P5033, $P5032
  if436_end835:
    unless_null $P5033, vivi_437836
    nqp_get_sc_object $P5034, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5033, $P5034
  vivi_437836:
    $P5035 = _lex_param_0."as_post"($P5033)
    $P5036 = _lex_param_0."coerce"($P5035, "P")
    set $P105, $P5036
.annotate 'line', 1061
    set fb_tmp_122, _lex_param_1
    repr_defined $I5005, fb_tmp_122
    unless $I5005 goto if438_else837 
    set $P5037, fb_tmp_122[1]
    set $P5039, $P5037
    goto if438_end838
  if438_else837:
    null $P5038
    set $P5039, $P5038
  if438_end838:
    unless_null $P5039, vivi_439839
    nqp_get_sc_object $P5040, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5039, $P5040
  vivi_439839:
    $P5041 = _lex_param_0."as_post"($P5039)
    $P5042 = _lex_param_0."coerce"($P5041, "P")
    set $P106, $P5042
.annotate 'line', 1062
    $P101."push"($P105)
.annotate 'line', 1063
    $P101."push_pirop"("set", $P104, $P105)
.annotate 'line', 1064
    $P101."push_pirop"("defined", $P103, $P104)
.annotate 'line', 1065
    $P101."push_pirop"("if", $P103, $P102)
.annotate 'line', 1066
    $P101."push"($P106)
.annotate 'line', 1067
    $P101."push_pirop"("set", $P104, $P106)
.annotate 'line', 1068
    $P101."push"($P102)
.annotate 'line', 1069
    $P101."result"($P104)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_208_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1073
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5071 = 'cuid_207_1361964166.213' 
    capture_lex $P5071 
    .const 'Sub' $P5071 = 'cuid_210_1361964166.213' 
    capture_lex $P5071 
    .const 'Sub' $P5071 = 'cuid_211_1361964166.213' 
    capture_lex $P5071 
    .lex "$ops", $P101 
    .lex "$falselabel", $P102 
    .lex "$endlabel", $P103 
    .lex "@childlist", $P104 
    .lex "$fpast", $P105 
    .lex "$i", $P106 
    .lex "$t", $P107 
    .lex "$u", $P108 
    .lex "$apast", $P109 
    .lex "$apost", $P110 
    .lex "$have_middle_child", $P111 
    .lex "$bpost", $P112 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P112, $P5012
.annotate 'line', 1074
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5014 = $P5013."new"()
    set $P101, $P5014
.annotate 'line', 1075
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback840
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5016, $P5017
    set fb_tmp_123, $P5016
    repr_defined $I5001, fb_tmp_123
    unless $I5001 goto if440_else841 
    set $P5018, fb_tmp_123["$REGALLOC"]
    set $P5020, $P5018
    goto if440_end842
  if440_else841:
    null $P5019
    set $P5020, $P5019
  if440_end842:
    unless_null $P5020, vivi_441843
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_441843:
    unless_null $P5020, vivi_442844
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_442844:
    set $P5015, $P5020
  fallback840:
    $P5023 = $P5015."fresh_p"()
    $P101."result"($P5023)
.annotate 'line', 1077
    nqp_get_sc_object $P5024, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5025 = $P5024."new"("xor_false" :named("name"))
    set $P102, $P5025
.annotate 'line', 1078
    nqp_get_sc_object $P5026, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5027 = $P5026."new"("xor_end" :named("name"))
    set $P103, $P5027
.annotate 'line', 1082
    $P5031 = _lex_param_1."list"()
    set $P5028, $P5031
    iter $P5030, $P5031
  for_next847:
    unless $P5030, for_done849
    shift $P5033, $P5030
  for_redo848:
    .const 'Sub' $P5032 = 'cuid_207_1361964166.213' 
    capture_lex $P5032
    $P5028 = $P5032($P5033)
    goto for_next847
  for_done849:
.annotate 'line', 1091
    find_dynamic_lex $P5034, "$*REGALLOC"
    unless_null $P5034, fallback850
    nqp_get_sc_object $P5036, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5035, $P5036
    set fb_tmp_124, $P5035
    repr_defined $I5002, fb_tmp_124
    unless $I5002 goto if444_else851 
    set $P5037, fb_tmp_124["$REGALLOC"]
    set $P5039, $P5037
    goto if444_end852
  if444_else851:
    null $P5038
    set $P5039, $P5038
  if444_end852:
    unless_null $P5039, vivi_445853
    nqp_get_sc_object $P5040, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5039, $P5040
  vivi_445853:
    unless_null $P5039, vivi_446854
    die "Contextual $*REGALLOC not found"
    box $P5041, "Contextual $*REGALLOC not found"
    set $P5039, $P5041
  vivi_446854:
    set $P5034, $P5039
  fallback850:
    $P5042 = $P5034."fresh_i"()
    set $P106, $P5042
.annotate 'line', 1092
    find_dynamic_lex $P5043, "$*REGALLOC"
    unless_null $P5043, fallback855
    nqp_get_sc_object $P5045, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5044, $P5045
    set fb_tmp_125, $P5044
    repr_defined $I5003, fb_tmp_125
    unless $I5003 goto if447_else856 
    set $P5046, fb_tmp_125["$REGALLOC"]
    set $P5048, $P5046
    goto if447_end857
  if447_else856:
    null $P5047
    set $P5048, $P5047
  if447_end857:
    unless_null $P5048, vivi_448858
    nqp_get_sc_object $P5049, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5048, $P5049
  vivi_448858:
    unless_null $P5048, vivi_449859
    die "Contextual $*REGALLOC not found"
    box $P5050, "Contextual $*REGALLOC not found"
    set $P5048, $P5050
  vivi_449859:
    set $P5043, $P5048
  fallback855:
    $P5051 = $P5043."fresh_i"()
    set $P107, $P5051
.annotate 'line', 1093
    find_dynamic_lex $P5052, "$*REGALLOC"
    unless_null $P5052, fallback860
    nqp_get_sc_object $P5054, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5053, $P5054
    set fb_tmp_126, $P5053
    repr_defined $I5004, fb_tmp_126
    unless $I5004 goto if450_else861 
    set $P5055, fb_tmp_126["$REGALLOC"]
    set $P5057, $P5055
    goto if450_end862
  if450_else861:
    null $P5056
    set $P5057, $P5056
  if450_end862:
    unless_null $P5057, vivi_451863
    nqp_get_sc_object $P5058, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5057, $P5058
  vivi_451863:
    unless_null $P5057, vivi_452864
    die "Contextual $*REGALLOC not found"
    box $P5059, "Contextual $*REGALLOC not found"
    set $P5057, $P5059
  vivi_452864:
    set $P5052, $P5057
  fallback860:
    $P5060 = $P5052."fresh_i"()
    set $P108, $P5060
    shift $P5061, $P104
    set $P109, $P5061
.annotate 'line', 1096
    $P5062 = _lex_param_0."as_post"($P109)
    $P5063 = _lex_param_0."coerce"($P5062, "P")
    set $P110, $P5063
.annotate 'line', 1097
    $P101."push"($P110)
.annotate 'line', 1098
    $P101."push_pirop"("set", $P101, $P110)
.annotate 'line', 1099
    $P101."push_pirop"("istrue", $P107, $P110)
    box $P5064, 1
    set $P111, $P5064
  while453_test865:
    set $P5067, $P111
    unless $P111 goto while453_done869 
  while453_redo867:
    .const 'Sub' $P5065 = 'cuid_210_1361964166.213' 
    capture_lex $P5065
    $P5066 = $P5065()
    set $P5067, $P5066
    goto while453_test865 
  while453_done869:
.annotate 'line', 1122
    $P101."push_pirop"("if", $P107, $P103)
.annotate 'line', 1123
    $P101."push_pirop"("set", $P101, $P112)
.annotate 'line', 1124
    $P101."push_pirop"("goto", $P103)
.annotate 'line', 1125
    $P101."push"($P102)
    unless $P105 goto if455_else872 
    .const 'Sub' $P5068 = 'cuid_211_1361964166.213' 
    capture_lex $P5068
    $P5069 = $P5068()
    goto if455_end873
  if455_else872:
.annotate 'line', 1132
.annotate 'line', 1133
    $P5070 = $P101."push_pirop"("new", $P101, "[\"Undef\"]")
  if455_end873:
.annotate 'line', 1136
    $P101."push"($P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_207_1361964166.213") :anon :lex :outer("cuid_208_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1082
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1083
    $P5001 = _lex_param_0."named"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "false"
    unless $I5001 goto if443_else845 
    store_lex "$fpast", _lex_param_0
    set $P5003, _lex_param_0
    goto if443_end846
  if443_else845:
.annotate 'line', 1086
    find_lex $P5002, "@childlist"
    push $P5002, _lex_param_0
    set $P5003, $P5002
  if443_end846:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_210_1361964166.213") :anon :lex :outer("cuid_208_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1103
    .const 'Sub' $P5025 = 'cuid_209_1361964166.213' 
    capture_lex $P5025 
    .lex "$bpast", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_lex $P5003, "@childlist"
    shift $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 1105
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "$qastcomp"
    $P5006 = $P5005."as_post"($P101)
    $P5007 = $P5004."coerce"($P5006, "P")
    store_lex "$bpost", $P5007
.annotate 'line', 1106
    find_lex $P5008, "$ops"
    find_lex $P5009, "$bpost"
    $P5008."push"($P5009)
.annotate 'line', 1107
    find_lex $P5010, "$ops"
    find_lex $P5011, "$u"
    find_lex $P5012, "$bpost"
    $P5010."push_pirop"("istrue", $P5011, $P5012)
.annotate 'line', 1108
    find_lex $P5013, "$ops"
    find_lex $P5014, "$i"
    find_lex $P5015, "$t"
    find_lex $P5016, "$u"
    $P5013."push_pirop"("and", $P5014, $P5015, $P5016)
.annotate 'line', 1109
    find_lex $P5017, "$ops"
    find_lex $P5018, "$i"
    find_lex $P5019, "$falselabel"
    $P5017."push_pirop"("if", $P5018, $P5019)
    find_lex $P5020, "@childlist"
    unless $P5020 goto if454_else870 
    .const 'Sub' $P5021 = 'cuid_209_1361964166.213' 
    capture_lex $P5021
    $P5022 = $P5021()
    set $P5024, $P5022
    goto if454_end871
  if454_else870:
.annotate 'line', 1117
    box $P5023, 0
    store_lex "$have_middle_child", $P5023
    set $P5024, $P5023
  if454_end871:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_209_1361964166.213") :anon :lex :outer("cuid_210_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1110
    .lex "$truelabel", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1111
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5003 = $P5002."new"("xor_true" :named("name"))
    set $P101, $P5003
.annotate 'line', 1112
    find_lex $P5004, "$ops"
    find_lex $P5005, "$t"
    $P5004."push_pirop"("if", $P5005, $P101)
.annotate 'line', 1113
    find_lex $P5006, "$ops"
    find_lex $P5007, "$ops"
    find_lex $P5008, "$bpost"
    $P5006."push_pirop"("set", $P5007, $P5008)
.annotate 'line', 1114
    find_lex $P5009, "$ops"
    find_lex $P5010, "$t"
    find_lex $P5011, "$u"
    $P5009."push_pirop"("set", $P5010, $P5011)
.annotate 'line', 1115
    find_lex $P5012, "$ops"
    $P5013 = $P5012."push"($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_211_1361964166.213") :anon :lex :outer("cuid_208_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1127
    .lex "$fpost", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1128
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$fpast"
    $P5005 = $P5003."as_post"($P5004)
    $P5006 = $P5002."coerce"($P5005, "P")
    set $P101, $P5006
.annotate 'line', 1129
    find_lex $P5007, "$ops"
    $P5007."push"($P101)
.annotate 'line', 1130
    find_lex $P5008, "$ops"
    find_lex $P5009, "$ops"
    $P5010 = $P5008."push_pirop"("set", $P5009, $P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_212_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1142
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@children", $P101 
    .lex "$*BINDVAL", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_127 
    .local pmc fb_tmp_128 
    .local pmc fb_tmp_129 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1144
    $P5003 = _lex_param_1."list"()
    set $P101, $P5003
    set $N5001, $P101
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if456_end875 
.annotate 'line', 1145
    box $P5004, "A 'bind' op must have exactly two children"
    die $P5004
  if456_end875:
    set fb_tmp_127, $P101
    repr_defined $I5003, fb_tmp_127
    unless $I5003 goto if458_else878 
    set $P5005, fb_tmp_127[0]
    set $P5007, $P5005
    goto if458_end879
  if458_else878:
    null $P5006
    set $P5007, $P5006
  if458_end879:
    unless_null $P5007, vivi_459880
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_459880:
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    type_check $I5002, $P5007, $P5009
    if $I5002 goto unless457_end877 
.annotate 'line', 1148
    box $P5010, "First child of a 'bind' op must be a QAST::Var"
    die $P5010
  unless457_end877:
    set fb_tmp_128, $P101
    repr_defined $I5004, fb_tmp_128
    unless $I5004 goto if460_else881 
    set $P5011, fb_tmp_128[1]
    set $P5013, $P5011
    goto if460_end882
  if460_else881:
    null $P5012
    set $P5013, $P5012
  if460_end882:
    unless_null $P5013, vivi_461883
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_461883:
    set $P102, $P5013
.annotate 'line', 1155
    set fb_tmp_129, $P101
    repr_defined $I5005, fb_tmp_129
    unless $I5005 goto if462_else884 
    set $P5015, fb_tmp_129[0]
    set $P5017, $P5015
    goto if462_end885
  if462_else884:
    null $P5016
    set $P5017, $P5016
  if462_end885:
    unless_null $P5017, vivi_463886
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_463886:
    $P5019 = _lex_param_0."as_post"($P5017)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_214_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1183
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5039 = 'cuid_213_1361964166.213' 
    capture_lex $P5039 
    .const 'Sub' $P5039 = 'cuid_215_1361964166.213' 
    capture_lex $P5039 
    .lex "$callee", $P101 
    .lex "@args", $P102 
    .lex "$ops", $P103 
    .lex "@pos_arg_results", $P104 
    .lex "@named_arg_results", $P105 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_130 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
.annotate 'line', 1186
    $P5007 = _lex_param_1."list"()
    repr_clone $P5006, $P5007
    set $P102, $P5006
.annotate 'line', 1187
    $P5008 = _lex_param_1."name"()
    unless $P5008 goto if464_else887 
.annotate 'line', 1188
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5010 = _lex_param_1."name"()
    $P5011 = _lex_param_0."escape"($P5010)
    $P5012 = $P5009."new"($P5011 :named("result"))
    set $P101, $P5012
    goto if464_end888
  if464_else887:
    set $N5001, $P102
    unless $N5001 goto if465_else889 
.annotate 'line', 1190
.annotate 'line', 1191
    $P5013 = $P102."shift"()
    $P5014 = _lex_param_0."as_post"($P5013)
    set $P101, $P5014
    set $P5016, $P101
    goto if465_end890
  if465_else889:
.annotate 'line', 1193
    box $P5015, "No name for call and empty children list"
    die $P5015
    set $P5016, $P5015
  if465_end890:
  if464_end888:
.annotate 'line', 1198
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5018 = $P5017."new"()
    set $P103, $P5018
.annotate 'line', 1199
    $P5019 = _lex_param_1."node"()
    unless $P5019 goto if466_end892 
    $P5020 = _lex_param_1."node"()
    $P5021 = $P103."node"($P5020)
  if466_end892:
    set $P5022, $P102
    iter $P5024, $P102
  for_next893:
    unless $P5024, for_done895
    shift $P5026, $P5024
  for_redo894:
    .const 'Sub' $P5025 = 'cuid_213_1361964166.213' 
    capture_lex $P5025
    $P5022 = $P5025($P5026)
    goto for_next893
  for_done895:
.annotate 'line', 1207
    $P103."push"($P101)
    find_dynamic_lex $P5027, "$*WANT"
    unless_null $P5027, fallback898
    nqp_get_sc_object $P5029, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5028, $P5029
    set fb_tmp_130, $P5028
    repr_defined $I5002, fb_tmp_130
    unless $I5002 goto if468_else899 
    set $P5030, fb_tmp_130["$WANT"]
    set $P5032, $P5030
    goto if468_end900
  if468_else899:
    null $P5031
    set $P5032, $P5031
  if468_end900:
    unless_null $P5032, vivi_469901
    nqp_get_sc_object $P5033, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5032, $P5033
  vivi_469901:
    unless_null $P5032, vivi_470902
    die "Contextual $*WANT not found"
    box $P5034, "Contextual $*WANT not found"
    set $P5032, $P5034
  vivi_470902:
    set $P5027, $P5032
  fallback898:
    set $S5001, $P5027
    iseq $I5001, $S5001, "v"
    unless $I5001 goto if467_else896 
.annotate 'line', 1208
.annotate 'line', 1209
    $P5035 = $P101."result"()
    $P5036 = $P103."push_pirop"("call", $P5035, $P104 :flat, $P105 :flat)
    goto if467_end897
  if467_else896:
    .const 'Sub' $P5037 = 'cuid_215_1361964166.213' 
    capture_lex $P5037
    $P5038 = $P5037()
  if467_end897:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_213_1361964166.213") :anon :lex :outer("cuid_214_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1202
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 1203
    find_lex $P5001, "$qastcomp"
    find_lex $P5002, "$ops"
    find_lex $P5003, "@pos_arg_results"
    find_lex $P5004, "@named_arg_results"
    $P5005 = "&handle_arg"(_lex_param_0, $P5001, $P5002, $P5003, $P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_215_1361964166.213") :anon :lex :outer("cuid_214_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1211
    .lex "$res_type", $P101 
    .lex "$res_reg", $P102 
    .local pmc fb_tmp_131 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1212
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$op"
    $P5005 = $P5004."returns"()
    $P5006 = $P5003."type_to_register_type"($P5005)
    set $P101, $P5006
.annotate 'line', 1213
    find_dynamic_lex $P5007, "$*REGALLOC"
    unless_null $P5007, fallback903
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set fb_tmp_131, $P5008
    repr_defined $I5001, fb_tmp_131
    unless $I5001 goto if471_else904 
    set $P5010, fb_tmp_131["$REGALLOC"]
    set $P5012, $P5010
    goto if471_end905
  if471_else904:
    null $P5011
    set $P5012, $P5011
  if471_end905:
    unless_null $P5012, vivi_472906
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_472906:
    unless_null $P5012, vivi_473907
    die "Contextual $*REGALLOC not found"
    box $P5014, "Contextual $*REGALLOC not found"
    set $P5012, $P5014
  vivi_473907:
    set $P5007, $P5012
  fallback903:
    set $S5003, $P101
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5015 = $P5007.$S5001()
    set $P102, $P5015
.annotate 'line', 1214
    find_lex $P5016, "$ops"
    find_lex $P5017, "$callee"
    $P5018 = $P5017."result"()
    find_lex $P5019, "@pos_arg_results"
    find_lex $P5020, "@named_arg_results"
    $P5016."push_pirop"("call", $P5018, $P5019 :flat, $P5020 :flat, $P102 :named("result"))
.annotate 'line', 1215
    find_lex $P5021, "$ops"
    $P5022 = $P5021."result"($P102)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_217_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1219
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5042 = 'cuid_216_1361964166.213' 
    capture_lex $P5042 
    .const 'Sub' $P5042 = 'cuid_218_1361964166.213' 
    capture_lex $P5042 
    .const 'Sub' $P5042 = 'cuid_219_1361964166.213' 
    capture_lex $P5042 
    .lex "@args", $P101 
    .lex "$name", $P102 
    .lex "$ops", $P103 
    .lex "@pos_arg_results", $P104 
    .lex "@named_arg_results", $P105 
    .lex "$inv", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_132 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    new $P5004, 'ResizablePMCArray'
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
.annotate 'line', 1221
    $P5008 = _lex_param_1."list"()
    repr_clone $P5007, $P5008
    set $P101, $P5007
    set $N5001, $P101
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if474_end909 
.annotate 'line', 1222
    box $P5009, "Method call node requires at least one child"
    die $P5009
  if474_end909:
.annotate 'line', 1228
    $P5010 = _lex_param_1."name"()
    unless $P5010 goto if475_else910 
.annotate 'line', 1229
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5012 = _lex_param_1."name"()
    $P5013 = _lex_param_0."escape"($P5012)
    $P5014 = $P5011."new"($P5013 :named("result"))
    set $P102, $P5014
    goto if475_end911
  if475_else910:
    set $N5003, $P101
    set $N5004, 2
    isge $I5002, $N5003, $N5004
    unless $I5002 goto if476_else912 
    .const 'Sub' $P5015 = 'cuid_216_1361964166.213' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5018, $P5016
    goto if476_end913
  if476_else912:
.annotate 'line', 1236
    box $P5017, "Method call must either supply a name or have a child node that evaluates to the name"
    die $P5017
    set $P5018, $P5017
  if476_end913:
  if475_end911:
.annotate 'line', 1241
    nqp_get_sc_object $P5019, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5020 = $P5019."new"()
    set $P103, $P5020
.annotate 'line', 1242
    $P5021 = _lex_param_1."node"()
    unless $P5021 goto if477_end915 
    $P5022 = _lex_param_1."node"()
    $P5023 = $P103."node"($P5022)
  if477_end915:
    box $P5024, 1
    set $P106, $P5024
    set $P5025, $P101
    iter $P5027, $P101
  for_next918:
    unless $P5027, for_done920
    shift $P5029, $P5027
  for_redo919:
    .const 'Sub' $P5028 = 'cuid_218_1361964166.213' 
    capture_lex $P5028
    $P5025 = $P5028($P5029)
    goto for_next918
  for_done920:
.annotate 'line', 1257
    $P103."push"($P102)
    find_dynamic_lex $P5030, "$*WANT"
    unless_null $P5030, fallback923
    nqp_get_sc_object $P5032, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5031, $P5032
    set fb_tmp_132, $P5031
    repr_defined $I5004, fb_tmp_132
    unless $I5004 goto if480_else924 
    set $P5033, fb_tmp_132["$WANT"]
    set $P5035, $P5033
    goto if480_end925
  if480_else924:
    null $P5034
    set $P5035, $P5034
  if480_end925:
    unless_null $P5035, vivi_481926
    nqp_get_sc_object $P5036, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5035, $P5036
  vivi_481926:
    unless_null $P5035, vivi_482927
    die "Contextual $*WANT not found"
    box $P5037, "Contextual $*WANT not found"
    set $P5035, $P5037
  vivi_482927:
    set $P5030, $P5035
  fallback923:
    set $S5001, $P5030
    iseq $I5003, $S5001, "v"
    unless $I5003 goto if479_else921 
.annotate 'line', 1258
.annotate 'line', 1259
    $P5038 = $P102."result"()
    $P5039 = $P103."push_pirop"("callmethod", $P5038, $P104 :flat, $P105 :flat)
    goto if479_end922
  if479_else921:
    .const 'Sub' $P5040 = 'cuid_219_1361964166.213' 
    capture_lex $P5040
    $P5041 = $P5040()
  if479_end922:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_216_1361964166.213") :anon :lex :outer("cuid_217_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1231
    .lex "$invocant", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1232
    find_lex $P5002, "@args"
    $P5003 = $P5002."shift"()
    set $P101, $P5003
.annotate 'line', 1233
    find_lex $P5004, "$qastcomp"
    find_lex $P5005, "$qastcomp"
    find_lex $P5006, "@args"
    $P5007 = $P5006."shift"()
    $P5008 = $P5005."as_post"($P5007)
    $P5009 = $P5004."coerce"($P5008, "s")
    store_lex "$name", $P5009
.annotate 'line', 1234
    find_lex $P5010, "@args"
    $P5011 = $P5010."unshift"($P101)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_218_1361964166.213") :anon :lex :outer("cuid_217_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1246
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$inv"
    unless $P5001 goto if478_else916 
.annotate 'line', 1247
.annotate 'line', 1248
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$ops"
    find_lex $P5004, "@pos_arg_results"
    find_lex $P5005, "@named_arg_results"
    "&handle_arg"(_lex_param_0, $P5002, $P5003, $P5004, $P5005, "P" :named("coerce"))
    box $P5006, 0
    store_lex "$inv", $P5006
    set $P5012, $P5006
    goto if478_end917
  if478_else916:
.annotate 'line', 1251
.annotate 'line', 1252
    find_lex $P5007, "$qastcomp"
    find_lex $P5008, "$ops"
    find_lex $P5009, "@pos_arg_results"
    find_lex $P5010, "@named_arg_results"
    $P5011 = "&handle_arg"(_lex_param_0, $P5007, $P5008, $P5009, $P5010)
    set $P5012, $P5011
  if478_end917:
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_219_1361964166.213") :anon :lex :outer("cuid_217_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1261
    .lex "$res_type", $P101 
    .lex "$res_reg", $P102 
    .local pmc fb_tmp_133 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1262
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "$op"
    $P5005 = $P5004."returns"()
    $P5006 = $P5003."type_to_register_type"($P5005)
    set $P101, $P5006
.annotate 'line', 1263
    find_dynamic_lex $P5007, "$*REGALLOC"
    unless_null $P5007, fallback928
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set fb_tmp_133, $P5008
    repr_defined $I5001, fb_tmp_133
    unless $I5001 goto if483_else929 
    set $P5010, fb_tmp_133["$REGALLOC"]
    set $P5012, $P5010
    goto if483_end930
  if483_else929:
    null $P5011
    set $P5012, $P5011
  if483_end930:
    unless_null $P5012, vivi_484931
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_484931:
    unless_null $P5012, vivi_485932
    die "Contextual $*REGALLOC not found"
    box $P5014, "Contextual $*REGALLOC not found"
    set $P5012, $P5014
  vivi_485932:
    set $P5007, $P5012
  fallback928:
    set $S5003, $P101
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5015 = $P5007.$S5001()
    set $P102, $P5015
.annotate 'line', 1264
    find_lex $P5016, "$ops"
    find_lex $P5017, "$name"
    $P5018 = $P5017."result"()
    find_lex $P5019, "@pos_arg_results"
    find_lex $P5020, "@named_arg_results"
    $P5016."push_pirop"("callmethod", $P5018, $P5019 :flat, $P5020 :flat, $P102 :named("result"))
.annotate 'line', 1265
    find_lex $P5021, "$ops"
    $P5022 = $P5021."result"($P102)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_220_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1271
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$label1", $P101 
    .lex "$label2", $P102 
    .lex "$lexname", $P103 
    .lex "$ops", $P104 
    .lex "$handler", $P105 
    .lex "$cpost", $P106 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_134 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
.annotate 'line', 1272
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5008 = $P5007."new"("lexotic_" :named("name"))
    set $P101, $P5008
.annotate 'line', 1273
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5010 = $P5009."new"("lexotic_" :named("name"))
    set $P102, $P5010
.annotate 'line', 1274
    $P5011 = _lex_param_1."name"()
    $P5012 = _lex_param_0."escape"($P5011)
    set $P103, $P5012
.annotate 'line', 1276
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5014 = $P5013."new"()
    set $P104, $P5014
.annotate 'line', 1277
    find_dynamic_lex $P5015, "$*BLOCK"
    unless_null $P5015, fallback933
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5016, $P5017
    set fb_tmp_134, $P5016
    repr_defined $I5001, fb_tmp_134
    unless $I5001 goto if486_else934 
    set $P5018, fb_tmp_134["$BLOCK"]
    set $P5020, $P5018
    goto if486_end935
  if486_else934:
    null $P5019
    set $P5020, $P5019
  if486_end935:
    unless_null $P5020, vivi_487936
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_487936:
    unless_null $P5020, vivi_488937
    die "Contextual $*BLOCK not found"
    box $P5022, "Contextual $*BLOCK not found"
    set $P5020, $P5022
  vivi_488937:
    set $P5015, $P5020
  fallback933:
    $P5023 = $P5015."fresh_lex_p"()
    set $P105, $P5023
.annotate 'line', 1278
    $P104."push_pirop"("root_new", $P105, "['parrot';'Continuation']")
.annotate 'line', 1279
    $P104."push_pirop"("set_label", $P105, $P101)
.annotate 'line', 1280
    $P104."push_pirop"(".lex", $P103, $P105)
.annotate 'line', 1282
    $P5024 = _lex_param_1."list"()
    $P5025 = _lex_param_0."compile_all_the_stmts"($P5024)
    $P5026 = _lex_param_0."coerce"($P5025, "P")
    set $P106, $P5026
.annotate 'line', 1283
    $P104."push"($P106)
.annotate 'line', 1284
    $P104."result"($P106)
.annotate 'line', 1286
    $P104."push_pirop"("goto", $P102)
.annotate 'line', 1287
    $P104."push"($P101)
.annotate 'line', 1288
    $P5027 = $P104."result"()
    set $S5003, $P5027
    concat $S5002, "(", $S5003
    concat $S5001, $S5002, ")"
    $P104."push_pirop"(".get_results", $S5001)
.annotate 'line', 1289
    $P104."push"($P102)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_221_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1295
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_135 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1296
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback938
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_135, $P5004
    repr_defined $I5001, fb_tmp_135
    unless $I5001 goto if489_else939 
    set $P5006, fb_tmp_135["$REGALLOC"]
    set $P5008, $P5006
    goto if489_end940
  if489_else939:
    null $P5007
    set $P5008, $P5007
  if489_end940:
    unless_null $P5008, vivi_490941
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_490941:
    unless_null $P5008, vivi_491942
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_491942:
    set $P5003, $P5008
  fallback938:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1297
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1298
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1299
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1300
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_222_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1303
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 1304
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback943
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_136, $P5005
    repr_defined $I5001, fb_tmp_136
    unless $I5001 goto if492_else944 
    set $P5007, fb_tmp_136["$REGALLOC"]
    set $P5009, $P5007
    goto if492_end945
  if492_else944:
    null $P5008
    set $P5009, $P5008
  if492_end945:
    unless_null $P5009, vivi_493946
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_493946:
    unless_null $P5009, vivi_494947
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_494947:
    set $P5004, $P5009
  fallback943:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1305
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1306
    set fb_tmp_137, _lex_param_1
    repr_defined $I5002, fb_tmp_137
    unless $I5002 goto if495_else948 
    set $P5015, fb_tmp_137[0]
    set $P5017, $P5015
    goto if495_end949
  if495_else948:
    null $P5016
    set $P5017, $P5016
  if495_end949:
    unless_null $P5017, vivi_496950
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_496950:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1307
    $P102."push"($P103)
.annotate 'line', 1308
    $P102."push_pirop"("getattribute", $P101, $P103, "'outer_ctx'")
.annotate 'line', 1309
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_223_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1312
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 1313
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback951
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_138, $P5005
    repr_defined $I5001, fb_tmp_138
    unless $I5001 goto if497_else952 
    set $P5007, fb_tmp_138["$REGALLOC"]
    set $P5009, $P5007
    goto if497_end953
  if497_else952:
    null $P5008
    set $P5009, $P5008
  if497_end953:
    unless_null $P5009, vivi_498954
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_498954:
    unless_null $P5009, vivi_499955
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_499955:
    set $P5004, $P5009
  fallback951:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1314
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1315
    set fb_tmp_139, _lex_param_1
    repr_defined $I5002, fb_tmp_139
    unless $I5002 goto if500_else956 
    set $P5015, fb_tmp_139[0]
    set $P5017, $P5015
    goto if500_end957
  if500_else956:
    null $P5016
    set $P5017, $P5016
  if500_end957:
    unless_null $P5017, vivi_501958
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_501958:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1316
    $P102."push"($P103)
.annotate 'line', 1317
    $P102."push_pirop"("getattribute", $P101, $P103, "'caller_ctx'")
.annotate 'line', 1318
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_224_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1321
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$ctxpost", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 1322
    find_dynamic_lex $P5004, "$*REGALLOC"
    unless_null $P5004, fallback959
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_140, $P5005
    repr_defined $I5001, fb_tmp_140
    unless $I5001 goto if502_else960 
    set $P5007, fb_tmp_140["$REGALLOC"]
    set $P5009, $P5007
    goto if502_end961
  if502_else960:
    null $P5008
    set $P5009, $P5008
  if502_end961:
    unless_null $P5009, vivi_503962
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_503962:
    unless_null $P5009, vivi_504963
    die "Contextual $*REGALLOC not found"
    box $P5011, "Contextual $*REGALLOC not found"
    set $P5009, $P5011
  vivi_504963:
    set $P5004, $P5009
  fallback959:
    $P5012 = $P5004."fresh_p"()
    set $P101, $P5012
.annotate 'line', 1323
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5014 = $P5013."new"()
    set $P102, $P5014
.annotate 'line', 1324
    set fb_tmp_141, _lex_param_1
    repr_defined $I5002, fb_tmp_141
    unless $I5002 goto if505_else964 
    set $P5015, fb_tmp_141[0]
    set $P5017, $P5015
    goto if505_end965
  if505_else964:
    null $P5016
    set $P5017, $P5016
  if505_end965:
    unless_null $P5017, vivi_506966
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_506966:
    $P5019 = _lex_param_0."as_post"($P5017)
    $P5020 = _lex_param_0."coerce"($P5019, "P")
    set $P103, $P5020
.annotate 'line', 1325
    $P102."push"($P103)
.annotate 'line', 1326
    $P102."push_pirop"("getattribute", $P101, $P103, "'lex_pad'")
.annotate 'line', 1327
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_225_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1330
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_142 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1331
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback967
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_142, $P5004
    repr_defined $I5001, fb_tmp_142
    unless $I5001 goto if507_else968 
    set $P5006, fb_tmp_142["$REGALLOC"]
    set $P5008, $P5006
    goto if507_end969
  if507_else968:
    null $P5007
    set $P5008, $P5007
  if507_end969:
    unless_null $P5008, vivi_508970
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_508970:
    unless_null $P5008, vivi_509971
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_509971:
    set $P5003, $P5008
  fallback967:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1332
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1333
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1334
    set $S5002, $P101
    concat $S5001, $S5002, "['lexpad']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1335
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_226_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1338
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_143 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1339
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback972
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_143, $P5004
    repr_defined $I5001, fb_tmp_143
    unless $I5001 goto if510_else973 
    set $P5006, fb_tmp_143["$REGALLOC"]
    set $P5008, $P5006
    goto if510_end974
  if510_else973:
    null $P5007
    set $P5008, $P5007
  if510_end974:
    unless_null $P5008, vivi_511975
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_511975:
    unless_null $P5008, vivi_512976
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_512976:
    set $P5003, $P5008
  fallback972:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1340
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1341
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1342
    set $S5002, $P101
    concat $S5001, $S5002, "['sub']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1343
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_227_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1346
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_144 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1347
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback977
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_144, $P5004
    repr_defined $I5001, fb_tmp_144
    unless $I5001 goto if513_else978 
    set $P5006, fb_tmp_144["$REGALLOC"]
    set $P5008, $P5006
    goto if513_end979
  if513_else978:
    null $P5007
    set $P5008, $P5007
  if513_end979:
    unless_null $P5008, vivi_514980
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_514980:
    unless_null $P5008, vivi_515981
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_515981:
    set $P5003, $P5008
  fallback977:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1348
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1349
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1350
    set $S5002, $P101
    concat $S5001, $S5002, "['sub';1]"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1351
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_228_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1354
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless516_end983 
.annotate 'line', 1355
    box $P5002, "Operation 'lexprimspec' expects two operands"
    die $P5002
  unless516_end983:
.annotate 'line', 1358
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 2
    set fb_tmp_145, _lex_param_1
    repr_defined $I5002, fb_tmp_145
    unless $I5002 goto if517_else984 
    set $P5005, fb_tmp_145[0]
    set $P5007, $P5005
    goto if517_end985
  if517_else984:
    null $P5006
    set $P5007, $P5006
  if517_end985:
    unless_null $P5007, vivi_518986
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_518986:
    set fb_tmp_146, _lex_param_1
    repr_defined $I5003, fb_tmp_146
    unless $I5003 goto if519_else987 
    set $P5009, fb_tmp_146[1]
    set $P5011, $P5009
    goto if519_end988
  if519_else987:
    null $P5010
    set $P5011, $P5010
  if519_end988:
    unless_null $P5011, vivi_520989
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_520989:
    $P5013 = $P5003."new"($P5007, $P5011, "callmethod" :named("op"), "get_lex_type" :named("name"), $P5004 :named("returns"))
    $P5014 = _lex_param_0."as_post"($P5013)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_229_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1366
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_147 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1368
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback990
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_147, $P5004
    repr_defined $I5001, fb_tmp_147
    unless $I5001 goto if521_else991 
    set $P5006, fb_tmp_147["$REGALLOC"]
    set $P5008, $P5006
    goto if521_end992
  if521_else991:
    null $P5007
    set $P5008, $P5007
  if521_end992:
    unless_null $P5008, vivi_522993
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_522993:
    unless_null $P5008, vivi_523994
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_523994:
    set $P5003, $P5008
  fallback990:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1369
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1370
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1371
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1372
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_230_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1375
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_148 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1379
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback995
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_148, $P5004
    repr_defined $I5001, fb_tmp_148
    unless $I5001 goto if524_else996 
    set $P5006, fb_tmp_148["$REGALLOC"]
    set $P5008, $P5006
    goto if524_end997
  if524_else996:
    null $P5007
    set $P5008, $P5007
  if524_end997:
    unless_null $P5008, vivi_525998
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_525998:
    unless_null $P5008, vivi_526999
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_526999:
    set $P5003, $P5008
  fallback995:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1380
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1381
    $P102."push_pirop"("getinterp", $P101)
.annotate 'line', 1382
    set $S5002, $P101
    concat $S5001, $S5002, "['context']"
    $P102."push_pirop"("set", $P101, $S5001)
.annotate 'line', 1383
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_231_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1416
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_149 
    find_lex $P5001, "%const_map"
.annotate 'line', 1417
    $P5002 = _lex_param_1."name"()
    set $S5001, $P5002
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if527_else1000 
.annotate 'line', 1418
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 42
    find_lex $P5004, "%const_map"
    set fb_tmp_149, $P5004
    repr_defined $I5002, fb_tmp_149
    unless $I5002 goto if528_else1002 
    $P5006 = _lex_param_1."name"()
    set $S5002, $P5006
    set $P5005, fb_tmp_149[$S5002]
    set $P5008, $P5005
    goto if528_end1003
  if528_else1002:
    null $P5007
    set $P5008, $P5007
  if528_end1003:
    unless_null $P5008, vivi_5291004
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_5291004:
    $P5010 = $P5003."new"($P5008 :named("value"))
    $P5011 = _lex_param_0."as_post"($P5010)
    set $P5014, $P5011
    goto if527_end1001
  if527_else1000:
.annotate 'line', 1420
.annotate 'line', 1421
    $P5012 = _lex_param_1."name"()
    set $S5005, $P5012
    concat $S5004, "Unknown constant '", $S5005
    concat $S5003, $S5004, "'"
    box $P5013, $S5003
    die $P5013
    set $P5014, $P5013
  if527_end1001:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_233_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1438
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5082 = 'cuid_232_1361964166.213' 
    capture_lex $P5082 
    .const 'Sub' $P5082 = 'cuid_235_1361964166.213' 
    capture_lex $P5082 
    .const 'Sub' $P5082 = 'cuid_237_1361964166.213' 
    capture_lex $P5082 
    .lex "@children", $P101 
    .lex "$protected", $P102 
    .lex "$procpost", $P103 
    .lex "%handlers", $P104 
    .lex "$catch", $P105 
    .lex "$control", $P106 
    .lex "@other", $P107 
    .lex "$catch_label", $P108 
    .lex "$control_label", $P109 
    .lex "$other_label", $P110 
    .lex "$num_pops", $P111 
    .lex "$skip_handler_label", $P112 
    .lex "$ops", $P113 
    .lex "$reg", $P114 
    .lex "$res_type", $P115 
    .lex "$res_reg", $P116 
    .lex "$orig_alloc", $P117 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_150 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    new $P5004, 'Hash'
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    new $P5007, 'ResizablePMCArray'
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P112, $P5012
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P113, $P5013
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P114, $P5014
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P115, $P5015
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P116, $P5016
    nqp_get_sc_object $P5017, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P117, $P5017
.annotate 'line', 1439
    $P5019 = _lex_param_1."list"()
    repr_clone $P5018, $P5019
    set $P101, $P5018
    set $N5001, $P101
    set $N5002, 0
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if530_end1006 
.annotate 'line', 1440
    box $P5020, "The 'handle' op requires at least one child"
    die $P5020
  if530_end1006:
.annotate 'line', 1446
    $P5021 = $P101."shift"()
    set $P102, $P5021
.annotate 'line', 1447
    $P5022 = _lex_param_0."as_post"($P102)
    $P5023 = _lex_param_0."coerce"($P5022, "P")
    set $P103, $P5023
    if $P101 goto unless531_end1008 
.annotate 'line', 1448
    find_lex $P5024, "RETURN"
    $P5025 = $P5024($P103)
  unless531_end1008:
    set $P5026, $P101
    iter $P5028, $P101
  for_next1017:
    unless $P5028, for_done1019
    shift $P5030, $P5028
    shift $P5031, $P5028
  for_redo1018:
    .const 'Sub' $P5029 = 'cuid_232_1361964166.213' 
    capture_lex $P5029
    $P5026 = $P5029($P5030, $P5031)
    goto for_next1017
  for_done1019:
    box $P5032, 0
    set $P111, $P5032
.annotate 'line', 1483
    nqp_get_sc_object $P5033, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5034 = _lex_param_0."unique"("skip_handler_")
    $P5035 = $P5033."new"($P5034 :named("name"))
    set $P112, $P5035
.annotate 'line', 1484
    nqp_get_sc_object $P5036, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5037 = $P5036."new"()
    set $P113, $P5037
.annotate 'line', 1485
    find_dynamic_lex $P5038, "$*REGALLOC"
    unless_null $P5038, fallback1020
    nqp_get_sc_object $P5040, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5039, $P5040
    set fb_tmp_150, $P5039
    repr_defined $I5002, fb_tmp_150
    unless $I5002 goto if536_else1021 
    set $P5041, fb_tmp_150["$REGALLOC"]
    set $P5043, $P5041
    goto if536_end1022
  if536_else1021:
    null $P5042
    set $P5043, $P5042
  if536_end1022:
    unless_null $P5043, vivi_5371023
    nqp_get_sc_object $P5044, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5043, $P5044
  vivi_5371023:
    unless_null $P5043, vivi_5381024
    die "Contextual $*REGALLOC not found"
    box $P5045, "Contextual $*REGALLOC not found"
    set $P5043, $P5045
  vivi_5381024:
    set $P5038, $P5043
  fallback1020:
    $P5046 = $P5038."fresh_p"()
    set $P114, $P5046
    unless $P105 goto if539_end1026 
.annotate 'line', 1486
.annotate 'line', 1487
    nqp_get_sc_object $P5047, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5048 = _lex_param_0."unique"("catch_handler_")
    $P5049 = $P5047."new"($P5048 :named("name"))
    set $P108, $P5049
.annotate 'line', 1488
    $P113."push_pirop"("new", $P114, "'ExceptionHandler'")
.annotate 'line', 1489
    $P113."push_pirop"("set_label", $P114, $P108)
.annotate 'line', 1490
    $P113."push_pirop"("callmethod", "'handle_types_except'", $P114, ".CONTROL_ALL")
.annotate 'line', 1491
    $P113."push_pirop"("push_eh", $P114)
    set $N5004, $P111
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5050, $N5003
    set $P111, $P5050
  if539_end1026:
    unless $P106 goto if540_end1028 
.annotate 'line', 1494
.annotate 'line', 1495
    nqp_get_sc_object $P5051, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5052 = _lex_param_0."unique"("catch_handler_")
    $P5053 = $P5051."new"($P5052 :named("name"))
    set $P109, $P5053
.annotate 'line', 1496
    $P113."push_pirop"("new", $P114, "'ExceptionHandler'", "[.CONTROL_ALL]")
.annotate 'line', 1497
    $P113."push_pirop"("set_label", $P114, $P109)
.annotate 'line', 1498
    $P113."push_pirop"("push_eh", $P114)
    set $N5007, $P111
    set $N5008, 1
    add $N5006, $N5007, $N5008
    box $P5054, $N5006
    set $P111, $P5054
  if540_end1028:
    unless $P107 goto if541_end1030 
    .const 'Sub' $P5055 = 'cuid_235_1361964166.213' 
    capture_lex $P5055
    $P5056 = $P5055()
  if541_end1030:
.annotate 'line', 1513
    $P5057 = $P103."result"()
    $P5058 = _lex_param_0."infer_type"($P5057)
    set $S5002, $P5058
    downcase $S5001, $S5002
    box $P5059, $S5001
    set $P115, $P5059
.annotate 'line', 1514
    find_dynamic_lex $P5060, "$*REGALLOC"
    unless_null $P5060, fallback1037
    nqp_get_sc_object $P5062, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5061, $P5062
    set fb_tmp_152, $P5061
    repr_defined $I5003, fb_tmp_152
    unless $I5003 goto if544_else1038 
    set $P5063, fb_tmp_152["$REGALLOC"]
    set $P5065, $P5063
    goto if544_end1039
  if544_else1038:
    null $P5064
    set $P5065, $P5064
  if544_end1039:
    unless_null $P5065, vivi_5451040
    nqp_get_sc_object $P5066, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5065, $P5066
  vivi_5451040:
    unless_null $P5065, vivi_5461041
    die "Contextual $*REGALLOC not found"
    box $P5067, "Contextual $*REGALLOC not found"
    set $P5065, $P5067
  vivi_5461041:
    set $P5060, $P5065
  fallback1037:
    set $S5004, $P115
    concat $S5003, "fresh_", $S5004
    $P5068 = $P5060.$S5003()
    set $P116, $P5068
.annotate 'line', 1515
    $P113."push"($P103)
.annotate 'line', 1516
    $P5069 = $P103."result"()
    $P113."push_pirop"("set", $P116, $P5069)
  while547_test1042:
    set $P5071, $P111
    unless $P111 goto while547_done1046 
  while547_redo1044:
.annotate 'line', 1517
.annotate 'line', 1518
    $P113."push_pirop"("pop_eh")
    set $N5010, $P111
    set $N5011, 1
    sub $N5009, $N5010, $N5011
    box $P5070, $N5009
    set $P111, $P5070
    set $P5071, $P111
    goto while547_test1042 
  while547_done1046:
.annotate 'line', 1521
    $P113."push_pirop"("goto", $P112)
    find_dynamic_lex $P5072, "$*REGALLOC"
    unless_null $P5072, fallback1047
    nqp_get_sc_object $P5074, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5073, $P5074
    set fb_tmp_153, $P5073
    repr_defined $I5004, fb_tmp_153
    unless $I5004 goto if548_else1048 
    set $P5075, fb_tmp_153["$REGALLOC"]
    set $P5077, $P5075
    goto if548_end1049
  if548_else1048:
    null $P5076
    set $P5077, $P5076
  if548_end1049:
    unless_null $P5077, vivi_5491050
    nqp_get_sc_object $P5078, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5077, $P5078
  vivi_5491050:
    unless_null $P5077, vivi_5501051
    die "Contextual $*REGALLOC not found"
    box $P5079, "Contextual $*REGALLOC not found"
    set $P5077, $P5079
  vivi_5501051:
    set $P5072, $P5077
  fallback1047:
    set $P117, $P5072
    .const 'Sub' $P5080 = 'cuid_237_1361964166.213' 
    capture_lex $P5080
    $P5081 = $P5080()
.annotate 'line', 1574
    $P113."push"($P112)
.annotate 'line', 1575
    $P113."result"($P116)
    .return ($P113) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_232_1361964166.213") :anon :lex :outer("cuid_233_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1457
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", _lex_param_0 
    .lex "$handler_code", _lex_param_1 
    find_lex $P5001, "%handler_names"
    set $S5001, _lex_param_0
    exists $I5001, $P5001[$S5001]
    unless $I5001 goto if532_else1009 
.annotate 'line', 1458
    find_lex $P5002, "%handlers"
    set $S5002, _lex_param_0
    exists $I5002, $P5002[$S5002]
    unless $I5002 goto if533_end1012 
.annotate 'line', 1459
    set $S5004, _lex_param_0
    concat $S5003, "Multiple handlers for ", $S5004
    box $P5003, $S5003
    die $P5003
  if533_end1012:
    find_lex $P5004, "%handlers"
    set $S5005, _lex_param_0
    set $P5004[$S5005], _lex_param_1
    set $S5006, _lex_param_0
    iseq $I5003, $S5006, "CATCH"
    unless $I5003 goto if534_else1013 
.annotate 'line', 1463
    box $P5005, 1
    store_lex "$catch", $P5005
    set $P5009, $P5005
    goto if534_end1014
  if534_else1013:
    set $S5007, _lex_param_0
    iseq $I5004, $S5007, "CONTROL"
    unless $I5004 goto if535_else1015 
.annotate 'line', 1466
    box $P5006, 1
    store_lex "$control", $P5006
    set $P5008, $P5006
    goto if535_end1016
  if535_else1015:
.annotate 'line', 1469
    find_lex $P5007, "@other"
    push $P5007, _lex_param_0
    set $P5008, $P5007
  if535_end1016:
    set $P5009, $P5008
  if534_end1014:
    set $P5011, $P5009
    goto if532_end1010
  if532_else1009:
.annotate 'line', 1473
    set $S5010, _lex_param_0
    concat $S5009, "Invalid handler type '", $S5010
    concat $S5008, $S5009, "'"
    box $P5010, $S5008
    die $P5010
    set $P5011, $P5010
  if532_end1010:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_235_1361964166.213") :anon :lex :outer("cuid_233_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1501
    .const 'Sub' $P5021 = 'cuid_234_1361964166.213' 
    capture_lex $P5021 
    .lex "@hnames", $P101 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    find_lex $P5005, "@other"
    set $P5002, $P5005
    iter $P5004, $P5005
  for_next1034:
    unless $P5004, for_done1036
    shift $P5007, $P5004
  for_redo1035:
    .const 'Sub' $P5006 = 'cuid_234_1361964166.213' 
    capture_lex $P5006
    $P5002 = $P5006($P5007)
    goto for_next1034
  for_done1036:
.annotate 'line', 1504
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    find_lex $P5009, "$qastcomp"
    $P5010 = $P5009."unique"("catch_handler_")
    $P5011 = $P5008."new"($P5010 :named("name"))
    store_lex "$other_label", $P5011
.annotate 'line', 1505
    find_lex $P5012, "$ops"
    find_lex $P5013, "$reg"
    join $S5003, ", ", $P101
    concat $S5002, "[", $S5003
    concat $S5001, $S5002, "]"
    $P5012."push_pirop"("new", $P5013, "'ExceptionHandler'", $S5001)
.annotate 'line', 1507
    find_lex $P5014, "$ops"
    find_lex $P5015, "$reg"
    find_lex $P5016, "$other_label"
    $P5014."push_pirop"("set_label", $P5015, $P5016)
.annotate 'line', 1508
    find_lex $P5017, "$ops"
    find_lex $P5018, "$reg"
    $P5017."push_pirop"("push_eh", $P5018)
    find_lex $P5019, "$num_pops"
    set $N5002, $P5019
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5020, $N5001
    store_lex "$num_pops", $P5020
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_234_1361964166.213") :anon :lex :outer("cuid_235_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1503
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_151 
    find_lex $P5001, "@hnames"
    find_lex $P5002, "%handler_names"
    set fb_tmp_151, $P5002
    repr_defined $I5001, fb_tmp_151
    unless $I5001 goto if542_else1031 
    set $S5001, _lex_param_0
    set $P5003, fb_tmp_151[$S5001]
    set $P5005, $P5003
    goto if542_end1032
  if542_else1031:
    null $P5004
    set $P5005, $P5004
  if542_end1032:
    unless_null $P5005, vivi_5431033
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_5431033:
    push $P5001, $P5005
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_237_1361964166.213") :anon :lex :outer("cuid_233_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1525
    .const 'Sub' $P5027 = 'cuid_236_1361964166.213' 
    capture_lex $P5027 
    .const 'Sub' $P5027 = 'cuid_239_1361964166.213' 
    capture_lex $P5027 
    .lex "$*CUR_EXCEPTION", $P101 
    .lex "$*REGALLOC", $P102 
    .lex "&simple_handler", $P103 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    .const 'Sub' $P5003 = 'cuid_236_1361964166.213' 
    capture_lex $P5003
    set $P103, $P5003
    find_lex $P5004, "$reg"
    set $P101, $P5004
.annotate 'line', 1527
    find_lex $P5005, "$orig_alloc"
    $P5006 = $P5005."handler_allocator"()
    set $P102, $P5006
    find_lex $P5007, "$catch"
    unless $P5007 goto if551_end1053 
.annotate 'line', 1539
.annotate 'line', 1540
    find_lex $P5008, "$catch_label"
    find_lex $P5009, "%handlers"
    set fb_tmp_154, $P5009
    repr_defined $I5001, fb_tmp_154
    unless $I5001 goto if552_else1054 
    set $P5010, fb_tmp_154["CATCH"]
    set $P5012, $P5010
    goto if552_end1055
  if552_else1054:
    null $P5011
    set $P5012, $P5011
  if552_end1055:
    unless_null $P5012, vivi_5531056
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_5531056:
    $P5014 = "&simple_handler"($P5008, $P5012)
  if551_end1053:
    find_lex $P5015, "$control"
    unless $P5015 goto if554_end1058 
.annotate 'line', 1542
.annotate 'line', 1543
    find_lex $P5016, "$control_label"
    find_lex $P5017, "%handlers"
    set fb_tmp_155, $P5017
    repr_defined $I5002, fb_tmp_155
    unless $I5002 goto if555_else1059 
    set $P5018, fb_tmp_155["CONTROL"]
    set $P5020, $P5018
    goto if555_end1060
  if555_else1059:
    null $P5019
    set $P5020, $P5019
  if555_end1060:
    unless_null $P5020, vivi_5561061
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_5561061:
    $P5022 = "&simple_handler"($P5016, $P5020)
  if554_end1058:
    find_lex $P5023, "@other"
    set $P5026, $P5023
    unless $P5023 goto if557_end1063 
    .const 'Sub' $P5024 = 'cuid_239_1361964166.213' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5026, $P5025
  if557_end1063:
    .return ($P5026) 
.end
.HLL "nqp"
.namespace []
.sub "simple_handler" :subid("cuid_236_1361964166.213") :anon :lex :outer("cuid_237_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1528
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$handler_post", $P101 
    .lex "$label", _lex_param_0 
    .lex "$handler_qast", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1529
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."as_post"(_lex_param_1)
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 1530
    find_lex $P5006, "$ops"
    $P5006."push"(_lex_param_0)
.annotate 'line', 1531
    find_lex $P5007, "$ops"
    find_lex $P5008, "$reg"
    set $S5003, $P5008
    concat $S5002, ".get_results (", $S5003
    concat $S5001, $S5002, ")"
    $P5007."push_pirop"($S5001)
.annotate 'line', 1532
    find_lex $P5009, "$ops"
    $P5009."push"($P101)
.annotate 'line', 1533
    find_lex $P5010, "$ops"
    find_lex $P5011, "$reg"
    $P5010."push_pirop"("finalize", $P5011)
.annotate 'line', 1534
    find_lex $P5012, "$ops"
    find_lex $P5013, "$reg"
    $P5012."push_pirop"("pop_upto_eh", $P5013)
.annotate 'line', 1535
    find_lex $P5014, "$ops"
    $P5014."push_pirop"("pop_eh")
.annotate 'line', 1536
    find_lex $P5015, "$ops"
    find_lex $P5016, "$res_reg"
    $P5017 = $P101."result"()
    $P5015."push_pirop"("set", $P5016, $P5017)
.annotate 'line', 1537
    find_lex $P5018, "$ops"
    find_lex $P5019, "$skip_handler_label"
    $P5020 = $P5018."push_pirop"("goto", $P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1361964166.213") :anon :lex :outer("cuid_237_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1545
    .const 'Sub' $P5030 = 'cuid_238_1361964166.213' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_240_1361964166.213' 
    capture_lex $P5030 
    .lex "$type_reg", $P101 
    .lex "%type_labels", $P102 
    .local pmc fb_tmp_156 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'Hash'
    set $P102, $P5002
.annotate 'line', 1546
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1064
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_156, $P5004
    repr_defined $I5001, fb_tmp_156
    unless $I5001 goto if558_else1065 
    set $P5006, fb_tmp_156["$REGALLOC"]
    set $P5008, $P5006
    goto if558_end1066
  if558_else1065:
    null $P5007
    set $P5008, $P5007
  if558_end1066:
    unless_null $P5008, vivi_5591067
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_5591067:
    unless_null $P5008, vivi_5601068
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_5601068:
    set $P5003, $P5008
  fallback1064:
    $P5011 = $P5003."fresh_i"()
    set $P101, $P5011
.annotate 'line', 1547
    find_lex $P5012, "$ops"
    find_lex $P5013, "$other_label"
    $P5012."push"($P5013)
.annotate 'line', 1548
    find_lex $P5014, "$ops"
    find_lex $P5015, "$reg"
    set $S5003, $P5015
    concat $S5002, ".get_results (", $S5003
    concat $S5001, $S5002, ")"
    $P5014."push_pirop"($S5001)
.annotate 'line', 1552
    find_lex $P5016, "$ops"
    find_lex $P5017, "$reg"
    set $S5005, $P5017
    concat $S5004, $S5005, "[\"type\"]"
    $P5016."push_pirop"("set", $P101, $S5004)
    find_lex $P5021, "@other"
    set $P5018, $P5021
    iter $P5020, $P5021
  for_next1072:
    unless $P5020, for_done1074
    shift $P5023, $P5020
  for_redo1073:
    .const 'Sub' $P5022 = 'cuid_238_1361964166.213' 
    capture_lex $P5022
    $P5018 = $P5022($P5023)
    goto for_next1072
  for_done1074:
    find_lex $P5027, "@other"
    set $P5024, $P5027
    iter $P5026, $P5027
  for_next1081:
    unless $P5026, for_done1083
    shift $P5029, $P5026
  for_redo1082:
    .const 'Sub' $P5028 = 'cuid_240_1361964166.213' 
    capture_lex $P5028
    $P5024 = $P5028($P5029)
    goto for_next1081
  for_done1083:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_238_1361964166.213") :anon :lex :outer("cuid_239_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1553
    .param pmc _lex_param_0 
    .lex "$lbl", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_157 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1554
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    find_lex $P5003, "$qastcomp"
    $P5004 = $P5003."unique"("handle_type_")
    $P5005 = $P5002."new"($P5004 :named("name"))
    set $P101, $P5005
.annotate 'line', 1555
    find_lex $P5006, "$ops"
    find_lex $P5007, "$type_reg"
    find_lex $P5008, "%handler_names"
    set fb_tmp_157, $P5008
    repr_defined $I5001, fb_tmp_157
    unless $I5001 goto if561_else1069 
    set $S5001, _lex_param_0
    set $P5009, fb_tmp_157[$S5001]
    set $P5011, $P5009
    goto if561_end1070
  if561_else1069:
    null $P5010
    set $P5011, $P5010
  if561_end1070:
    unless_null $P5011, vivi_5621071
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_5621071:
    $P5006."push_pirop"("eq", $P5007, $P5011, $P101)
    find_lex $P5013, "%type_labels"
    set $S5002, _lex_param_0
    set $P5013[$S5002], $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1361964166.213") :anon :lex :outer("cuid_239_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1560
    .param pmc _lex_param_0 
    .lex "$handler_post", $P101 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_158 
    .local pmc fb_tmp_159 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1561
    find_lex $P5002, "$qastcomp"
    find_lex $P5003, "$qastcomp"
    find_lex $P5004, "%handlers"
    set fb_tmp_158, $P5004
    repr_defined $I5001, fb_tmp_158
    unless $I5001 goto if563_else1075 
    set $S5001, _lex_param_0
    set $P5005, fb_tmp_158[$S5001]
    set $P5007, $P5005
    goto if563_end1076
  if563_else1075:
    null $P5006
    set $P5007, $P5006
  if563_end1076:
    unless_null $P5007, vivi_5641077
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_5641077:
    $P5009 = $P5003."as_post"($P5007)
    $P5010 = $P5002."coerce"($P5009, "P")
    set $P101, $P5010
.annotate 'line', 1562
    find_lex $P5011, "$ops"
    find_lex $P5012, "%type_labels"
    set fb_tmp_159, $P5012
    repr_defined $I5002, fb_tmp_159
    unless $I5002 goto if565_else1078 
    set $S5002, _lex_param_0
    set $P5013, fb_tmp_159[$S5002]
    set $P5015, $P5013
    goto if565_end1079
  if565_else1078:
    null $P5014
    set $P5015, $P5014
  if565_end1079:
    unless_null $P5015, vivi_5661080
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_5661080:
    $P5011."push"($P5015)
.annotate 'line', 1563
    find_lex $P5017, "$ops"
    $P5017."push"($P101)
.annotate 'line', 1564
    find_lex $P5018, "$ops"
    find_lex $P5019, "$reg"
    $P5018."push_pirop"("finalize", $P5019)
.annotate 'line', 1565
    find_lex $P5020, "$ops"
    find_lex $P5021, "$reg"
    $P5020."push_pirop"("pop_upto_eh", $P5021)
.annotate 'line', 1566
    find_lex $P5022, "$ops"
    $P5022."push_pirop"("pop_eh")
.annotate 'line', 1567
    find_lex $P5023, "$ops"
    find_lex $P5024, "$res_reg"
    $P5025 = $P101."result"()
    $P5023."push_pirop"("set", $P5024, $P5025)
.annotate 'line', 1568
    find_lex $P5026, "$ops"
    find_lex $P5027, "$skip_handler_label"
    $P5028 = $P5026."push_pirop"("goto", $P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_241_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1579
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc_reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_160 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_5711090
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*CUR_EXCEPTION"
    unless_null $P5003, fallback1084
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_160, $P5004
    repr_defined $I5001, fb_tmp_160
    unless $I5001 goto if567_else1085 
    set $P5006, fb_tmp_160["$CUR_EXCEPTION"]
    set $P5008, $P5006
    goto if567_end1086
  if567_else1085:
    null $P5007
    set $P5008, $P5007
  if567_end1086:
    unless_null $P5008, vivi_5681087
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_5681087:
    unless_null $P5008, vivi_5691088
    die "Contextual $*CUR_EXCEPTION not found"
    box $P5010, "Contextual $*CUR_EXCEPTION not found"
    set $P5008, $P5010
  vivi_5691088:
    set $P5003, $P5008
  fallback1084:
    set $P5012, $P5003
    pop_eh 
    goto skip_handler_5701089
  catch_handler_5711090:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_5701089
  skip_handler_5701089:
    set $P101, $P5012
    if $P101 goto unless572_end1092 
.annotate 'line', 1581
    box $P5013, "Can only use 'exception' op in the context of an exception handler"
    die $P5013
  unless572_end1092:
.annotate 'line', 1584
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5015 = $P5014."new"()
    set $P102, $P5015
.annotate 'line', 1585
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1588
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$reg", $P102 
    .lex "$ops", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_161 
    .local pmc fb_tmp_162 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 1589
    $P5004 = _lex_param_1."list"()
    set $N5001, $P5004
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if573_end1094 
    box $P5005, "The 'getpayload' op expects one child"
    die $P5005
  if573_end1094:
.annotate 'line', 1592
    set fb_tmp_161, _lex_param_1
    repr_defined $I5002, fb_tmp_161
    unless $I5002 goto if574_else1095 
    set $P5006, fb_tmp_161[0]
    set $P5008, $P5006
    goto if574_end1096
  if574_else1095:
    null $P5007
    set $P5008, $P5007
  if574_end1096:
    unless_null $P5008, vivi_5751097
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_5751097:
    $P5010 = _lex_param_0."as_post"($P5008)
    $P5011 = _lex_param_0."coerce"($P5010, "P")
    set $P101, $P5011
.annotate 'line', 1593
    find_dynamic_lex $P5012, "$*REGALLOC"
    unless_null $P5012, fallback1098
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5013, $P5014
    set fb_tmp_162, $P5013
    repr_defined $I5003, fb_tmp_162
    unless $I5003 goto if576_else1099 
    set $P5015, fb_tmp_162["$REGALLOC"]
    set $P5017, $P5015
    goto if576_end1100
  if576_else1099:
    null $P5016
    set $P5017, $P5016
  if576_end1100:
    unless_null $P5017, vivi_5771101
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_5771101:
    unless_null $P5017, vivi_5781102
    die "Contextual $*REGALLOC not found"
    box $P5019, "Contextual $*REGALLOC not found"
    set $P5017, $P5019
  vivi_5781102:
    set $P5012, $P5017
  fallback1098:
    $P5020 = $P5012."fresh_p"()
    set $P102, $P5020
.annotate 'line', 1594
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5022 = $P5021."new"()
    set $P103, $P5022
.annotate 'line', 1595
    $P103."push"($P101)
.annotate 'line', 1596
    $P5023 = $P101."result"()
    $P103."push_pirop"("getattribute", $P102, $P5023, "\"payload\"")
.annotate 'line', 1597
    $P103."result"($P102)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_243_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1600
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$payload", $P102 
    .lex "$ops", $P103 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 1601
    $P5004 = _lex_param_1."list"()
    set $N5001, $P5004
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if579_end1104 
    box $P5005, "The 'setpayload' op expects two children"
    die $P5005
  if579_end1104:
.annotate 'line', 1604
    set fb_tmp_163, _lex_param_1
    repr_defined $I5002, fb_tmp_163
    unless $I5002 goto if580_else1105 
    set $P5006, fb_tmp_163[0]
    set $P5008, $P5006
    goto if580_end1106
  if580_else1105:
    null $P5007
    set $P5008, $P5007
  if580_end1106:
    unless_null $P5008, vivi_5811107
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_5811107:
    $P5010 = _lex_param_0."as_post"($P5008)
    $P5011 = _lex_param_0."coerce"($P5010, "P")
    set $P101, $P5011
.annotate 'line', 1605
    set fb_tmp_164, _lex_param_1
    repr_defined $I5003, fb_tmp_164
    unless $I5003 goto if582_else1108 
    set $P5012, fb_tmp_164[1]
    set $P5014, $P5012
    goto if582_end1109
  if582_else1108:
    null $P5013
    set $P5014, $P5013
  if582_end1109:
    unless_null $P5014, vivi_5831110
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5014, $P5015
  vivi_5831110:
    $P5016 = _lex_param_0."as_post"($P5014)
    $P5017 = _lex_param_0."coerce"($P5016, "P")
    set $P102, $P5017
.annotate 'line', 1606
    nqp_get_sc_object $P5018, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5019 = $P5018."new"()
    set $P103, $P5019
.annotate 'line', 1607
    $P103."push_pirop"("setattribute", $P101, "\"payload\"", $P102)
.annotate 'line', 1608
    $P5020 = $P102."result"()
    $P103."result"($P5020)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_244_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1611
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$pmc", $P102 
    .lex "$reg", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_165 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
.annotate 'line', 1612
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if584_end1112 
    box $P5006, "The 'getmessage' op expects one child"
    die $P5006
  if584_end1112:
.annotate 'line', 1615
    set fb_tmp_165, _lex_param_1
    repr_defined $I5002, fb_tmp_165
    unless $I5002 goto if585_else1113 
    set $P5007, fb_tmp_165[0]
    set $P5009, $P5007
    goto if585_end1114
  if585_else1113:
    null $P5008
    set $P5009, $P5008
  if585_end1114:
    unless_null $P5009, vivi_5861115
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_5861115:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P101, $P5012
.annotate 'line', 1616
    find_dynamic_lex $P5013, "$*REGALLOC"
    unless_null $P5013, fallback1116
    nqp_get_sc_object $P5015, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5014, $P5015
    set fb_tmp_166, $P5014
    repr_defined $I5003, fb_tmp_166
    unless $I5003 goto if587_else1117 
    set $P5016, fb_tmp_166["$REGALLOC"]
    set $P5018, $P5016
    goto if587_end1118
  if587_else1117:
    null $P5017
    set $P5018, $P5017
  if587_end1118:
    unless_null $P5018, vivi_5881119
    nqp_get_sc_object $P5019, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5018, $P5019
  vivi_5881119:
    unless_null $P5018, vivi_5891120
    die "Contextual $*REGALLOC not found"
    box $P5020, "Contextual $*REGALLOC not found"
    set $P5018, $P5020
  vivi_5891120:
    set $P5013, $P5018
  fallback1116:
    $P5021 = $P5013."fresh_p"()
    set $P102, $P5021
.annotate 'line', 1617
    find_dynamic_lex $P5022, "$*REGALLOC"
    unless_null $P5022, fallback1121
    nqp_get_sc_object $P5024, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5023, $P5024
    set fb_tmp_167, $P5023
    repr_defined $I5004, fb_tmp_167
    unless $I5004 goto if590_else1122 
    set $P5025, fb_tmp_167["$REGALLOC"]
    set $P5027, $P5025
    goto if590_end1123
  if590_else1122:
    null $P5026
    set $P5027, $P5026
  if590_end1123:
    unless_null $P5027, vivi_5911124
    nqp_get_sc_object $P5028, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5027, $P5028
  vivi_5911124:
    unless_null $P5027, vivi_5921125
    die "Contextual $*REGALLOC not found"
    box $P5029, "Contextual $*REGALLOC not found"
    set $P5027, $P5029
  vivi_5921125:
    set $P5022, $P5027
  fallback1121:
    $P5030 = $P5022."fresh_s"()
    set $P103, $P5030
.annotate 'line', 1618
    nqp_get_sc_object $P5031, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5032 = $P5031."new"()
    set $P104, $P5032
.annotate 'line', 1619
    $P104."push"($P101)
.annotate 'line', 1620
    $P5033 = $P101."result"()
    $P104."push_pirop"("getattribute", $P102, $P5033, "\"message\"")
.annotate 'line', 1621
    $P104."push_pirop"("set", $P103, $P102)
.annotate 'line', 1622
    $P104."result"($P103)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_245_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1625
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$exc", $P101 
    .lex "$message", $P102 
    .lex "$pmc", $P103 
    .lex "$ops", $P104 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_168 
    .local pmc fb_tmp_169 
    .local pmc fb_tmp_170 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
.annotate 'line', 1626
    $P5005 = _lex_param_1."list"()
    set $N5001, $P5005
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if593_end1127 
    box $P5006, "The 'setmessage' op expects two children"
    die $P5006
  if593_end1127:
.annotate 'line', 1629
    set fb_tmp_168, _lex_param_1
    repr_defined $I5002, fb_tmp_168
    unless $I5002 goto if594_else1128 
    set $P5007, fb_tmp_168[0]
    set $P5009, $P5007
    goto if594_end1129
  if594_else1128:
    null $P5008
    set $P5009, $P5008
  if594_end1129:
    unless_null $P5009, vivi_5951130
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_5951130:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P101, $P5012
.annotate 'line', 1630
    set fb_tmp_169, _lex_param_1
    repr_defined $I5003, fb_tmp_169
    unless $I5003 goto if596_else1131 
    set $P5013, fb_tmp_169[1]
    set $P5015, $P5013
    goto if596_end1132
  if596_else1131:
    null $P5014
    set $P5015, $P5014
  if596_end1132:
    unless_null $P5015, vivi_5971133
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_5971133:
    $P5017 = _lex_param_0."as_post"($P5015)
    $P5018 = _lex_param_0."coerce"($P5017, "S")
    set $P102, $P5018
.annotate 'line', 1631
    find_dynamic_lex $P5019, "$*REGALLOC"
    unless_null $P5019, fallback1134
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5020, $P5021
    set fb_tmp_170, $P5020
    repr_defined $I5004, fb_tmp_170
    unless $I5004 goto if598_else1135 
    set $P5022, fb_tmp_170["$REGALLOC"]
    set $P5024, $P5022
    goto if598_end1136
  if598_else1135:
    null $P5023
    set $P5024, $P5023
  if598_end1136:
    unless_null $P5024, vivi_5991137
    nqp_get_sc_object $P5025, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5024, $P5025
  vivi_5991137:
    unless_null $P5024, vivi_6001138
    die "Contextual $*REGALLOC not found"
    box $P5026, "Contextual $*REGALLOC not found"
    set $P5024, $P5026
  vivi_6001138:
    set $P5019, $P5024
  fallback1134:
    $P5027 = $P5019."fresh_p"()
    set $P103, $P5027
.annotate 'line', 1632
    nqp_get_sc_object $P5028, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5029 = $P5028."new"()
    set $P104, $P5029
.annotate 'line', 1633
    $P104."push"($P101)
.annotate 'line', 1634
    $P104."push"($P102)
.annotate 'line', 1635
    $P104."push_pirop"("box", $P103, $P102)
.annotate 'line', 1636
    $P104."push_pirop"("setattribute", $P101, "\"message\"", $P103)
.annotate 'line', 1637
    $P5030 = $P102."result"()
    $P104."result"($P5030)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_246_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1640
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_171 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1641
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if601_end1140 
    box $P5004, "The 'newexception' op expects no children"
    die $P5004
  if601_end1140:
.annotate 'line', 1644
    find_dynamic_lex $P5005, "$*REGALLOC"
    unless_null $P5005, fallback1141
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set fb_tmp_171, $P5006
    repr_defined $I5002, fb_tmp_171
    unless $I5002 goto if602_else1142 
    set $P5008, fb_tmp_171["$REGALLOC"]
    set $P5010, $P5008
    goto if602_end1143
  if602_else1142:
    null $P5009
    set $P5010, $P5009
  if602_end1143:
    unless_null $P5010, vivi_6031144
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_6031144:
    unless_null $P5010, vivi_6041145
    die "Contextual $*REGALLOC not found"
    box $P5012, "Contextual $*REGALLOC not found"
    set $P5010, $P5012
  vivi_6041145:
    set $P5005, $P5010
  fallback1141:
    $P5013 = $P5005."fresh_p"()
    set $P101, $P5013
.annotate 'line', 1645
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5015 = $P5014."new"()
    set $P102, $P5015
.annotate 'line', 1646
    $P102."push_pirop"("new", $P101, "[\"Exception\"]")
.annotate 'line', 1647
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_248_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1661
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5008 = 'cuid_247_1361964166.213' 
    capture_lex $P5008 
    .lex "$name", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1662
    $P5002 = _lex_param_1."name"()
    set $P101, $P5002
    find_lex $P5003, "%control_map"
    set $S5001, $P101
    exists $I5001, $P5003[$S5001]
    unless $I5001 goto if605_else1146 
    .const 'Sub' $P5004 = 'cuid_247_1361964166.213' 
    capture_lex $P5004
    $P5005 = $P5004()
    set $P5007, $P5005
    goto if605_end1147
  if605_else1146:
.annotate 'line', 1668
    set $S5004, $P101
    concat $S5003, "Unknown control exception type '", $S5004
    concat $S5002, $S5003, "'"
    box $P5006, $S5002
    die $P5006
    set $P5007, $P5006
  if605_end1147:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_247_1361964166.213") :anon :lex :outer("cuid_248_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1663
    .lex "$ops", $P101 
    .local pmc fb_tmp_172 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 1664
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5003 = $P5002."new"("0" :named("result"))
    set $P101, $P5003
.annotate 'line', 1665
    find_lex $P5004, "%control_map"
    set fb_tmp_172, $P5004
    repr_defined $I5001, fb_tmp_172
    unless $I5001 goto if606_else1148 
    find_lex $P5006, "$name"
    set $S5001, $P5006
    set $P5005, fb_tmp_172[$S5001]
    set $P5008, $P5005
    goto if606_end1149
  if606_else1148:
    null $P5007
    set $P5008, $P5007
  if606_end1149:
    unless_null $P5008, vivi_6071150
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_6071150:
    $P101."push_pirop"("die", "0", $P5008)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_250_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1674
    .param pmc _lex_param_0 
    .const 'Sub' $P5005 = 'cuid_249_1361964166.213' 
    capture_lex $P5005 
    .lex "$_", _lex_param_0 
.annotate 'line', 1675
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .const 'Sub' $P5003 = 'cuid_249_1361964166.213' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    $P5004 = $P5001."add_hll_box"("nqp", _lex_param_0, $P5002)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_249_1361964166.213") :anon :lex :outer("cuid_250_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1675
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_173 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1676
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1151
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_173, $P5004
    repr_defined $I5001, fb_tmp_173
    unless $I5001 goto if608_else1152 
    set $P5006, fb_tmp_173["$REGALLOC"]
    set $P5008, $P5006
    goto if608_end1153
  if608_else1152:
    null $P5007
    set $P5008, $P5007
  if608_end1153:
    unless_null $P5008, vivi_6091154
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_6091154:
    unless_null $P5008, vivi_6101155
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6101155:
    set $P5003, $P5008
  fallback1151:
    $P5011 = $P5003."fresh_p"()
    set $P101, $P5011
.annotate 'line', 1677
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1678
    $P102."push"(_lex_param_1)
.annotate 'line', 1679
    $P102."push_pirop"("box", $P101, _lex_param_1)
.annotate 'line', 1680
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_251_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1684
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_174 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1685
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1159
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_174, $P5004
    repr_defined $I5001, fb_tmp_174
    unless $I5001 goto if611_else1160 
    set $P5006, fb_tmp_174["$REGALLOC"]
    set $P5008, $P5006
    goto if611_end1161
  if611_else1160:
    null $P5007
    set $P5008, $P5007
  if611_end1161:
    unless_null $P5008, vivi_6121162
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_6121162:
    unless_null $P5008, vivi_6131163
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6131163:
    set $P5003, $P5008
  fallback1159:
    $P5011 = $P5003."fresh_i"()
    set $P101, $P5011
.annotate 'line', 1686
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1687
    $P102."push"(_lex_param_1)
.annotate 'line', 1688
    $P102."push_pirop"("set", $P101, _lex_param_1)
.annotate 'line', 1689
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_252_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1692
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_175 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1693
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1164
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_175, $P5004
    repr_defined $I5001, fb_tmp_175
    unless $I5001 goto if614_else1165 
    set $P5006, fb_tmp_175["$REGALLOC"]
    set $P5008, $P5006
    goto if614_end1166
  if614_else1165:
    null $P5007
    set $P5008, $P5007
  if614_end1166:
    unless_null $P5008, vivi_6151167
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_6151167:
    unless_null $P5008, vivi_6161168
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6161168:
    set $P5003, $P5008
  fallback1164:
    $P5011 = $P5003."fresh_n"()
    set $P101, $P5011
.annotate 'line', 1694
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1695
    $P102."push"(_lex_param_1)
.annotate 'line', 1696
    $P102."push_pirop"("set", $P101, _lex_param_1)
.annotate 'line', 1697
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_253_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1700
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$reg", $P101 
    .lex "$ops", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$post", _lex_param_1 
    .local pmc fb_tmp_176 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 1701
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1169
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_176, $P5004
    repr_defined $I5001, fb_tmp_176
    unless $I5001 goto if617_else1170 
    set $P5006, fb_tmp_176["$REGALLOC"]
    set $P5008, $P5006
    goto if617_end1171
  if617_else1170:
    null $P5007
    set $P5008, $P5007
  if617_end1171:
    unless_null $P5008, vivi_6181172
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_6181172:
    unless_null $P5008, vivi_6191173
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_6191173:
    set $P5003, $P5008
  fallback1169:
    $P5011 = $P5003."fresh_s"()
    set $P101, $P5011
.annotate 'line', 1702
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5013 = $P5012."new"()
    set $P102, $P5013
.annotate 'line', 1703
    $P102."push"(_lex_param_1)
.annotate 'line', 1704
    $P102."push_pirop"("set", $P101, _lex_param_1)
.annotate 'line', 1705
    $P102."result"($P101)
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_254_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1720
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1721
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if620_end1175 
    box $P5002, "The 'getstdin' op expects no operands"
    die $P5002
  if620_end1175:
.annotate 'line', 1724
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 1726
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 89
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stdin_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_255_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1729
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1730
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if621_end1177 
    box $P5002, "The 'getstdout' op expects no operands"
    die $P5002
  if621_end1177:
.annotate 'line', 1733
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 1735
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 89
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stdout_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_256_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1738
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
.annotate 'line', 1739
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 0
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if622_end1179 
    box $P5002, "The 'getstderr' op expects no operands"
    die $P5002
  if622_end1179:
.annotate 'line', 1742
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 1744
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 89
    $P5005 = $P5004."new"("getinterp__P" :named("pirop"))
    $P5006 = $P5003."new"($P5005, "callmethod" :named("op"), "stderr_handle" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_257_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1747
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_177 
    .local pmc fb_tmp_178 
.annotate 'line', 1748
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if623_end1181 
    box $P5002, "The 'setencoding' op expects two operands"
    die $P5002
  if623_end1181:
.annotate 'line', 1751
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_177, _lex_param_1
    repr_defined $I5002, fb_tmp_177
    unless $I5002 goto if624_else1182 
    set $P5004, fb_tmp_177[0]
    set $P5006, $P5004
    goto if624_end1183
  if624_else1182:
    null $P5005
    set $P5006, $P5005
  if624_end1183:
    unless_null $P5006, vivi_6251184
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6251184:
    set fb_tmp_178, _lex_param_1
    repr_defined $I5003, fb_tmp_178
    unless $I5003 goto if626_else1185 
    set $P5008, fb_tmp_178[1]
    set $P5010, $P5008
    goto if626_end1186
  if626_else1185:
    null $P5009
    set $P5010, $P5009
  if626_end1186:
    unless_null $P5010, vivi_6271187
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_6271187:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "encoding" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_258_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1756
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_179 
.annotate 'line', 1757
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if628_end1189 
    box $P5002, "The 'tellfh' op expects one operand"
    die $P5002
  if628_end1189:
.annotate 'line', 1760
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_179, _lex_param_1
    repr_defined $I5002, fb_tmp_179
    unless $I5002 goto if629_else1190 
    set $P5004, fb_tmp_179[0]
    set $P5006, $P5004
    goto if629_end1191
  if629_else1190:
    null $P5005
    set $P5006, $P5005
  if629_end1191:
    unless_null $P5006, vivi_6301192
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6301192:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "tell" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_259_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1765
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
.annotate 'line', 1766
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if631_end1194 
    box $P5002, "The 'printfh' op expects two operands"
    die $P5002
  if631_end1194:
.annotate 'line', 1769
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_180, _lex_param_1
    repr_defined $I5002, fb_tmp_180
    unless $I5002 goto if632_else1195 
    set $P5004, fb_tmp_180[0]
    set $P5006, $P5004
    goto if632_end1196
  if632_else1195:
    null $P5005
    set $P5006, $P5005
  if632_end1196:
    unless_null $P5006, vivi_6331197
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6331197:
    set fb_tmp_181, _lex_param_1
    repr_defined $I5003, fb_tmp_181
    unless $I5003 goto if634_else1198 
    set $P5008, fb_tmp_181[1]
    set $P5010, $P5008
    goto if634_end1199
  if634_else1198:
    null $P5009
    set $P5010, $P5009
  if634_end1199:
    unless_null $P5010, vivi_6351200
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_6351200:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "print" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_260_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1774
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_182 
    .local pmc fb_tmp_183 
.annotate 'line', 1775
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if636_end1202 
    box $P5002, "The 'printfh' op expects two operands"
    die $P5002
  if636_end1202:
.annotate 'line', 1778
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_182, _lex_param_1
    repr_defined $I5002, fb_tmp_182
    unless $I5002 goto if637_else1203 
    set $P5004, fb_tmp_182[0]
    set $P5006, $P5004
    goto if637_end1204
  if637_else1203:
    null $P5005
    set $P5006, $P5005
  if637_end1204:
    unless_null $P5006, vivi_6381205
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6381205:
    set fb_tmp_183, _lex_param_1
    repr_defined $I5003, fb_tmp_183
    unless $I5003 goto if639_else1206 
    set $P5008, fb_tmp_183[1]
    set $P5010, $P5008
    goto if639_end1207
  if639_else1206:
    null $P5009
    set $P5010, $P5009
  if639_end1207:
    unless_null $P5010, vivi_6401208
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_6401208:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "print" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_261_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1783
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_184 
.annotate 'line', 1784
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if641_end1210 
    box $P5002, "The 'readlinefh' op expects one operand"
    die $P5002
  if641_end1210:
.annotate 'line', 1787
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_184, _lex_param_1
    repr_defined $I5002, fb_tmp_184
    unless $I5002 goto if642_else1211 
    set $P5004, fb_tmp_184[0]
    set $P5006, $P5004
    goto if642_end1212
  if642_else1211:
    null $P5005
    set $P5006, $P5005
  if642_end1212:
    unless_null $P5006, vivi_6431213
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6431213:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "readline" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_262_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1792
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_185 
    .local pmc fb_tmp_186 
.annotate 'line', 1793
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if644_end1215 
    box $P5002, "The 'readlineintfh' op expects two operands"
    die $P5002
  if644_end1215:
.annotate 'line', 1796
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_185, _lex_param_1
    repr_defined $I5002, fb_tmp_185
    unless $I5002 goto if645_else1216 
    set $P5004, fb_tmp_185[0]
    set $P5006, $P5004
    goto if645_end1217
  if645_else1216:
    null $P5005
    set $P5006, $P5005
  if645_end1217:
    unless_null $P5006, vivi_6461218
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6461218:
    set fb_tmp_186, _lex_param_1
    repr_defined $I5003, fb_tmp_186
    unless $I5003 goto if647_else1219 
    set $P5008, fb_tmp_186[1]
    set $P5010, $P5008
    goto if647_end1220
  if647_else1219:
    null $P5009
    set $P5010, $P5009
  if647_end1220:
    unless_null $P5010, vivi_6481221
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_6481221:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "readline_interactive" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_263_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1801
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_187 
.annotate 'line', 1802
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if649_end1223 
    box $P5002, "The 'readallfh' op expects one operand"
    die $P5002
  if649_end1223:
.annotate 'line', 1805
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_187, _lex_param_1
    repr_defined $I5002, fb_tmp_187
    unless $I5002 goto if650_else1224 
    set $P5004, fb_tmp_187[0]
    set $P5006, $P5004
    goto if650_end1225
  if650_else1224:
    null $P5005
    set $P5006, $P5005
  if650_end1225:
    unless_null $P5006, vivi_6511226
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6511226:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "readall" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_264_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1810
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_188 
.annotate 'line', 1811
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if652_end1228 
    box $P5002, "The 'eoffh' op expects one operand"
    die $P5002
  if652_end1228:
.annotate 'line', 1814
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_188, _lex_param_1
    repr_defined $I5002, fb_tmp_188
    unless $I5002 goto if653_else1229 
    set $P5004, fb_tmp_188[0]
    set $P5006, $P5004
    goto if653_end1230
  if653_else1229:
    null $P5005
    set $P5006, $P5005
  if653_end1230:
    unless_null $P5006, vivi_6541231
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6541231:
    $P5008 = $P5003."new"($P5006, "isfalse" :named("op"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_265_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1816
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_189 
.annotate 'line', 1817
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if655_end1233 
    box $P5002, "The 'closefh' op expects one operand"
    die $P5002
  if655_end1233:
.annotate 'line', 1820
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_189, _lex_param_1
    repr_defined $I5002, fb_tmp_189
    unless $I5002 goto if656_else1234 
    set $P5004, fb_tmp_189[0]
    set $P5006, $P5004
    goto if656_end1235
  if656_else1234:
    null $P5005
    set $P5006, $P5005
  if656_end1235:
    unless_null $P5006, vivi_6571236
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6571236:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "close" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_266_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1929
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1930
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 1931
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if658_else1237 
.annotate 'line', 1932
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5004 = $P5003."new"($P101 :flat, "substr2" :named("op"))
    set $P5007, $P5004
    goto if658_end1238
  if658_else1237:
.annotate 'line', 1933
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5006 = $P5005."new"($P101 :flat, "substr3" :named("op"))
    set $P5007, $P5006
  if658_end1238:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_267_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1939
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1940
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 1941
    set $N5001, $P101
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if659_else1239 
.annotate 'line', 1942
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5004 = $P5003."new"($P101 :flat, "ordfirst" :named("op"))
    set $P5007, $P5004
    goto if659_end1240
  if659_else1239:
.annotate 'line', 1943
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5006 = $P5005."new"($P101 :flat, "ordat" :named("op"))
    set $P5007, $P5006
  if659_end1240:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_268_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1948
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1949
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 1950
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if660_else1241 
.annotate 'line', 1951
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 42
    $P5005 = $P5004."new"(0 :named("value"))
    $P5006 = $P5003."new"($P101 :flat, $P5005, "indexfrom" :named("op"))
    set $P5009, $P5006
    goto if660_end1242
  if660_else1241:
.annotate 'line', 1952
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5008 = $P5007."new"($P101 :flat, "indexfrom" :named("op"))
    set $P5009, $P5008
  if660_end1242:
    $P5010 = _lex_param_0."as_post"($P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_269_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1956
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
.annotate 'line', 1957
    $P5002 = _lex_param_1."list"()
    set $P101, $P5002
.annotate 'line', 1958
    set $N5001, $P101
    set $N5002, 2
    iseq $I5001, $N5001, $N5002
    unless $I5001 goto if661_else1243 
.annotate 'line', 1959
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5004 = $P5003."new"($P101 :flat, "rindexfromend" :named("op"))
    set $P5007, $P5004
    goto if661_end1244
  if661_else1243:
.annotate 'line', 1960
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5006 = $P5005."new"($P101 :flat, "rindexfrom" :named("op"))
    set $P5007, $P5006
  if661_end1244:
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_270_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 1963
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "@operands", $P101 
    .lex "$i_reg", $P102 
    .lex "$s_reg", $P103 
    .lex "$ops", $P104 
    .lex "$name", $P105 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_190 
    .local pmc fb_tmp_191 
    .local pmc fb_tmp_192 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
.annotate 'line', 1964
    $P5006 = _lex_param_1."list"()
    set $P101, $P5006
    set $N5001, $P101
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    if $I5001 goto unless662_end1246 
    box $P5007, "codepointfromname expects a single child"
    die $P5007
  unless662_end1246:
.annotate 'line', 1966
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback1247
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5009, $P5010
    set fb_tmp_190, $P5009
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if663_else1248 
    set $P5011, fb_tmp_190["$REGALLOC"]
    set $P5013, $P5011
    goto if663_end1249
  if663_else1248:
    null $P5012
    set $P5013, $P5012
  if663_end1249:
    unless_null $P5013, vivi_6641250
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_6641250:
    unless_null $P5013, vivi_6651251
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_6651251:
    set $P5008, $P5013
  fallback1247:
    $P5016 = $P5008."fresh_i"()
    set $P102, $P5016
.annotate 'line', 1967
    find_dynamic_lex $P5017, "$*REGALLOC"
    unless_null $P5017, fallback1252
    nqp_get_sc_object $P5019, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5018, $P5019
    set fb_tmp_191, $P5018
    repr_defined $I5003, fb_tmp_191
    unless $I5003 goto if666_else1253 
    set $P5020, fb_tmp_191["$REGALLOC"]
    set $P5022, $P5020
    goto if666_end1254
  if666_else1253:
    null $P5021
    set $P5022, $P5021
  if666_end1254:
    unless_null $P5022, vivi_6671255
    nqp_get_sc_object $P5023, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5022, $P5023
  vivi_6671255:
    unless_null $P5022, vivi_6681256
    die "Contextual $*REGALLOC not found"
    box $P5024, "Contextual $*REGALLOC not found"
    set $P5022, $P5024
  vivi_6681256:
    set $P5017, $P5022
  fallback1252:
    $P5025 = $P5017."fresh_s"()
    set $P103, $P5025
.annotate 'line', 1968
    nqp_get_sc_object $P5026, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5027 = $P5026."new"()
    set $P104, $P5027
.annotate 'line', 1969
    set fb_tmp_192, _lex_param_1
    repr_defined $I5004, fb_tmp_192
    unless $I5004 goto if669_else1257 
    set $P5028, fb_tmp_192[0]
    set $P5030, $P5028
    goto if669_end1258
  if669_else1257:
    null $P5029
    set $P5030, $P5029
  if669_end1258:
    unless_null $P5030, vivi_6701259
    nqp_get_sc_object $P5031, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5030, $P5031
  vivi_6701259:
    $P5032 = _lex_param_0."as_post"($P5030)
    $P5033 = _lex_param_0."coerce"($P5032, "S")
    set $P105, $P5033
.annotate 'line', 1970
    $P104."push"($P105)
.annotate 'line', 1971
    $P104."push_pirop"("find_encoding", $P102, "'utf8'")
.annotate 'line', 1972
    $P104."push_pirop"("trans_encoding", $P103, $P105, $P102)
.annotate 'line', 1973
    $P104."push_pirop"("find_codepoint", $P102, $P103)
.annotate 'line', 1974
    $P104."result"($P102)
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_271_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2071
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_193 
.annotate 'line', 2072
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_193, _lex_param_1
    repr_defined $I5001, fb_tmp_193
    unless $I5001 goto if671_else1260 
    set $P5002, fb_tmp_193[0]
    set $P5004, $P5002
    goto if671_end1261
  if671_else1260:
    null $P5003
    set $P5004, $P5003
  if671_end1261:
    unless_null $P5004, vivi_6721262
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_6721262:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "key" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_272_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2074
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_194 
.annotate 'line', 2075
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_194, _lex_param_1
    repr_defined $I5001, fb_tmp_194
    unless $I5001 goto if673_else1263 
    set $P5002, fb_tmp_194[0]
    set $P5004, $P5002
    goto if673_end1264
  if673_else1263:
    null $P5003
    set $P5004, $P5003
  if673_end1264:
    unless_null $P5004, vivi_6741265
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_6741265:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "value" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_273_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2155
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_195 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if675_end1267 
.annotate 'line', 2156
    box $P5002, "getcodecuid requires one operand"
    die $P5002
  if675_end1267:
.annotate 'line', 2159
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_195, _lex_param_1
    repr_defined $I5002, fb_tmp_195
    unless $I5002 goto if676_else1268 
    set $P5004, fb_tmp_195[0]
    set $P5006, $P5004
    goto if676_end1269
  if676_else1268:
    null $P5005
    set $P5006, $P5005
  if676_end1269:
    unless_null $P5006, vivi_6771270
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6771270:
    $P5008 = $P5003."new"($P5006, "callmethod" :named("op"), "get_subid" :named("name"))
    $P5009 = _lex_param_0."as_post"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_274_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2164
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$cuid", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_196 
    .local pmc fb_tmp_197 
    .local pmc fb_tmp_198 
    .local pmc fb_tmp_199 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    $P5002 = _lex_param_1."list"()
    set $N5001, $P5002
    set $N5002, 3
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if678_end1272 
.annotate 'line', 2165
    box $P5003, "setstaticlex requires three operands"
    die $P5003
  if678_end1272:
    set fb_tmp_196, _lex_param_1
    repr_defined $I5003, fb_tmp_196
    unless $I5003 goto if680_else1275 
    set $P5004, fb_tmp_196[0]
    set $P5006, $P5004
    goto if680_end1276
  if680_else1275:
    null $P5005
    set $P5006, $P5005
  if680_end1276:
    unless_null $P5006, vivi_6811277
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6811277:
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    type_check $I5002, $P5006, $P5008
    if $I5002 goto unless679_end1274 
.annotate 'line', 2168
    box $P5009, "First operand to setstaticlex must be a QAST::Block"
    die $P5009
  unless679_end1274:
.annotate 'line', 2171
    set fb_tmp_197, _lex_param_1
    repr_defined $I5004, fb_tmp_197
    unless $I5004 goto if682_else1278 
    set $P5010, fb_tmp_197[0]
    set $P5012, $P5010
    goto if682_end1279
  if682_else1278:
    null $P5011
    set $P5012, $P5011
  if682_end1279:
    unless_null $P5012, vivi_6831280
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_6831280:
    $P5014 = $P5012."cuid"()
    set $P101, $P5014
.annotate 'line', 2172
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 93
.annotate 'line', 2173
    nqp_get_sc_object $P5016, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2175
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 89
    set $S5003, $P101
    concat $S5002, "    .const \"LexInfo\" %r = \"", $S5003
    concat $S5001, $S5002, "\""
    $P5018 = $P5017."new"($S5001 :named("pir"))
    set fb_tmp_198, _lex_param_1
    repr_defined $I5005, fb_tmp_198
    unless $I5005 goto if684_else1281 
    set $P5019, fb_tmp_198[1]
    set $P5021, $P5019
    goto if684_end1282
  if684_else1281:
    null $P5020
    set $P5021, $P5020
  if684_end1282:
    unless_null $P5021, vivi_6851283
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5021, $P5022
  vivi_6851283:
    set fb_tmp_199, _lex_param_1
    repr_defined $I5006, fb_tmp_199
    unless $I5006 goto if686_else1284 
    set $P5023, fb_tmp_199[2]
    set $P5025, $P5023
    goto if686_end1285
  if686_else1284:
    null $P5024
    set $P5025, $P5024
  if686_end1285:
    unless_null $P5025, vivi_6871286
    nqp_get_sc_object $P5026, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5025, $P5026
  vivi_6871286:
    $P5027 = $P5016."new"($P5018, $P5021, $P5025, "callmethod" :named("op"), "set_static_lexpad_value" :named("name"))
.annotate 'line', 2183
    nqp_get_sc_object $P5028, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2185
    nqp_get_sc_object $P5029, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 89
    set $S5006, $P101
    concat $S5005, "    .const \"LexInfo\" %r = \"", $S5006
    concat $S5004, $S5005, "\""
    $P5030 = $P5029."new"($S5004 :named("pir"))
    $P5031 = $P5028."new"($P5030, "callmethod" :named("op"), "finish_static_lexpad" :named("name"))
    $P5032 = $P5015."new"($P5027, $P5031)
    $P5033 = _lex_param_0."as_post"($P5032)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_275_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2191
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    $P5001 = _lex_param_1."list"()
    set $N5001, $P5001
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if688_end1288 
.annotate 'line', 2192
    box $P5002, "forceouterctx requires two operands"
    die $P5002
  if688_end1288:
.annotate 'line', 2195
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_200, _lex_param_1
    repr_defined $I5002, fb_tmp_200
    unless $I5002 goto if689_else1289 
    set $P5004, fb_tmp_200[0]
    set $P5006, $P5004
    goto if689_end1290
  if689_else1289:
    null $P5005
    set $P5006, $P5005
  if689_end1290:
    unless_null $P5006, vivi_6901291
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_6901291:
    set fb_tmp_201, _lex_param_1
    repr_defined $I5003, fb_tmp_201
    unless $I5003 goto if691_else1292 
    set $P5008, fb_tmp_201[1]
    set $P5010, $P5008
    goto if691_end1293
  if691_else1292:
    null $P5009
    set $P5010, $P5009
  if691_end1293:
    unless_null $P5010, vivi_6921294
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_6921294:
    $P5012 = $P5003."new"($P5006, $P5010, "callmethod" :named("op"), "set_outer_ctx" :named("name"))
    $P5013 = _lex_param_0."as_post"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_276_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2202
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$code", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_202 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if693_end1296 
.annotate 'line', 2203
    box $P5004, "markcodestatic requires one operand"
    die $P5004
  if693_end1296:
.annotate 'line', 2206
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5006 = $P5005."new"()
    set $P101, $P5006
.annotate 'line', 2207
    set fb_tmp_202, _lex_param_1
    repr_defined $I5002, fb_tmp_202
    unless $I5002 goto if694_else1297 
    set $P5007, fb_tmp_202[0]
    set $P5009, $P5007
    goto if694_end1298
  if694_else1297:
    null $P5008
    set $P5009, $P5008
  if694_end1298:
    unless_null $P5009, vivi_6951299
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_6951299:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 2208
    $P101."push"($P102)
.annotate 'line', 2209
    $P101."push_pirop"("setprop", $P102, "'STATIC_CODE_REF'", $P102)
.annotate 'line', 2210
    $P101."result"($P102)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_277_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2213
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$code", $P102 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_203 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    $P5003 = _lex_param_1."list"()
    set $N5001, $P5003
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if696_end1301 
.annotate 'line', 2214
    box $P5004, "markcodestatic requires one operand"
    die $P5004
  if696_end1301:
.annotate 'line', 2217
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5006 = $P5005."new"()
    set $P101, $P5006
.annotate 'line', 2218
    set fb_tmp_203, _lex_param_1
    repr_defined $I5002, fb_tmp_203
    unless $I5002 goto if697_else1302 
    set $P5007, fb_tmp_203[0]
    set $P5009, $P5007
    goto if697_end1303
  if697_else1302:
    null $P5008
    set $P5009, $P5008
  if697_end1303:
    unless_null $P5009, vivi_6981304
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_6981304:
    $P5011 = _lex_param_0."as_post"($P5009)
    $P5012 = _lex_param_0."coerce"($P5011, "P")
    set $P102, $P5012
.annotate 'line', 2219
    $P101."push"($P102)
.annotate 'line', 2220
    $P101."push_pirop"("setprop", $P102, "'COMPILER_STUB'", $P102)
.annotate 'line', 2221
    $P101."result"($P102)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_278_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2232
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_204 
.annotate 'line', 2233
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 4
    set fb_tmp_204, _lex_param_1
    repr_defined $I5001, fb_tmp_204
    unless $I5001 goto if699_else1305 
    set $P5003, fb_tmp_204[0]
    set $P5005, $P5003
    goto if699_end1306
  if699_else1305:
    null $P5004
    set $P5005, $P5004
  if699_end1306:
    unless_null $P5005, vivi_7001307
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_7001307:
    $P5007 = $P5001."new"($P5005, "callmethod" :named("op"), "handle" :named("name"), $P5002 :named("returns"))
    $P5008 = _lex_param_0."as_post"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_279_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2238
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_205 
    .local pmc fb_tmp_206 
.annotate 'line', 2239
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 2
    set fb_tmp_205, _lex_param_1
    repr_defined $I5001, fb_tmp_205
    unless $I5001 goto if701_else1308 
    set $P5003, fb_tmp_205[0]
    set $P5005, $P5003
    goto if701_end1309
  if701_else1308:
    null $P5004
    set $P5005, $P5004
  if701_end1309:
    unless_null $P5005, vivi_7021310
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_7021310:
    set fb_tmp_206, _lex_param_1
    repr_defined $I5002, fb_tmp_206
    unless $I5002 goto if703_else1311 
    set $P5007, fb_tmp_206[1]
    set $P5009, $P5007
    goto if703_end1312
  if703_else1311:
    null $P5008
    set $P5009, $P5008
  if703_end1312:
    unless_null $P5009, vivi_7041313
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_7041313:
    $P5011 = $P5001."new"($P5005, $P5009, "callmethod" :named("op"), "slot_index_for" :named("name"), $P5002 :named("returns"))
    $P5012 = _lex_param_0."as_post"($P5011)
    .return ($P5012) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_280_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2244
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
.annotate 'line', 2245
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_207, _lex_param_1
    repr_defined $I5001, fb_tmp_207
    unless $I5001 goto if705_else1314 
    set $P5002, fb_tmp_207[0]
    set $P5004, $P5002
    goto if705_end1315
  if705_else1314:
    null $P5003
    set $P5004, $P5003
  if705_end1315:
    unless_null $P5004, vivi_7061316
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_7061316:
    set fb_tmp_208, _lex_param_1
    repr_defined $I5002, fb_tmp_208
    unless $I5002 goto if707_else1317 
    set $P5006, fb_tmp_208[1]
    set $P5008, $P5006
    goto if707_end1318
  if707_else1317:
    null $P5007
    set $P5008, $P5007
  if707_end1318:
    unless_null $P5008, vivi_7081319
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_7081319:
    $P5010 = $P5001."new"($P5004, $P5008, "callmethod" :named("op"), "set_description" :named("name"))
    $P5011 = _lex_param_0."as_post"($P5010)
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_281_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2250
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    .local pmc fb_tmp_209 
.annotate 'line', 2251
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    set fb_tmp_209, _lex_param_1
    repr_defined $I5001, fb_tmp_209
    unless $I5001 goto if709_else1320 
    set $P5002, fb_tmp_209[0]
    set $P5004, $P5002
    goto if709_end1321
  if709_else1320:
    null $P5003
    set $P5004, $P5003
  if709_end1321:
    unless_null $P5004, vivi_7101322
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_7101322:
    $P5006 = $P5001."new"($P5004, "callmethod" :named("op"), "elems" :named("name"))
    $P5007 = _lex_param_0."as_post"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_282_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2261
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2262
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2263
    $P101."push_pirop"("nqp_disable_sc_write_barrier")
.annotate 'line', 2264
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_283_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2267
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2268
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2269
    $P101."push_pirop"("nqp_enable_sc_write_barrier")
.annotate 'line', 2270
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_284_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2274
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2275
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2276
    $P101."push_pirop"("nqp_pop_compiling_sc")
.annotate 'line', 2277
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_285_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2287
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$qastcomp", _lex_param_0 
    .lex "$op", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2289
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5003 = $P5002."new"()
    set $P101, $P5003
.annotate 'line', 2290
    $P101."result"("0")
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_287_1361964166.213") :anon :lex :outer("cuid_144_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2305
    .const 'Sub' $P5093 = 'cuid_286_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_288_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_290_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_291_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_292_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_87_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_88_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_89_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_90_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_91_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_92_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_93_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_94_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_95_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_96_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_97_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_98_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_99_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_100_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_101_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_102_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_103_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_104_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_105_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_106_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_107_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_108_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_109_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_110_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_111_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_112_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_113_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_114_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_115_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_116_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_117_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_118_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_119_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_120_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_121_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_122_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_123_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_124_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_125_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_126_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_127_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_128_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_129_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_130_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_131_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_132_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_133_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_134_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_135_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_136_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_137_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_138_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_139_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_140_1361964166.213' 
    capture_lex $P5093 
    .const 'Sub' $P5093 = 'cuid_141_1361964166.213' 
    capture_lex $P5093 
    .lex "RegAlloc", $P101 
    .lex "BlockInfo", $P102 
    .lex "@prim_to_reg", $P103 
    .lex "&type_to_register_type", $P104 
    .lex "@prim_to_lookup_name", $P105 
    .lex "&type_to_lookup_name", $P106 
    .lex "%hll_force_return_boxing", $P107 
    .lex "&want", $P108 
    .lex "%cclass_code", $P109 
    .lex "$?PACKAGE", $P110 
    .lex "$?CLASS", $P111 
    .local pmc fb_tmp_222 
    new $P5001, 'ResizablePMCArray'
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_286_1361964166.213' 
    capture_lex $P5002
    set $P104, $P5002
    new $P5003, 'ResizablePMCArray'
    set $P105, $P5003
    .const 'Sub' $P5004 = 'cuid_288_1361964166.213' 
    capture_lex $P5004
    set $P106, $P5004
    new $P5005, 'Hash'
    set $P107, $P5005
    .const 'Sub' $P5006 = 'cuid_290_1361964166.213' 
    capture_lex $P5006
    set $P108, $P5006
    new $P5007, 'Hash'
    set $P109, $P5007
.annotate 'line', 2484
    get_who $P5008, $P110
    box $P5009, 10
    set $P5008["$serno"], $P5009

            $P0 = get_root_global ['parrot';'QAST'], 'Compiler'
            unless null $P0 goto have_qastcomp
            $P0 = find_lex '$?CLASS'
            set_root_global ['parrot';'QAST'], 'Compiler', $P0
            compreg 'QAST', $P0
          have_qastcomp:
        
.annotate 'line', 3575
    box $P5010, ".CCLASS_ANY"
    set $P109["."], $P5010
    box $P5011, ".CCLASS_NUMERIC"
    set $P109["d"], $P5011
    box $P5012, ".CCLASS_WHITESPACE"
    set $P109["s"], $P5012
    box $P5013, ".CCLASS_WORD"
    set $P109["w"], $P5013
    box $P5014, ".CCLASS_NEWLINE"
    set $P109["n"], $P5014
    box $P5015, ".CCLASS_NEWLINE"
    set $P109["nl"], $P5015
.annotate 'line', 2305
    .const 'Sub' $P5016 = 'cuid_291_1361964166.213' 
    capture_lex $P5016
    $P5017 = $P5016()
    .const 'Sub' $P5018 = 'cuid_292_1361964166.213' 
    capture_lex $P5018
    $P5019 = $P5018()
    .const 'Sub' $P5028 = 'cuid_87_1361964166.213' 
    capture_lex $P5028
    new $P5029, 'ResizablePMCArray'
    box $P5030, "P"
    push $P5029, $P5030
    box $P5031, "I"
    push $P5029, $P5031
    box $P5032, "N"
    push $P5029, $P5032
    box $P5033, "S"
    push $P5029, $P5033
    set $P103, $P5029
    .const 'Sub' $P5034 = 'cuid_88_1361964166.213' 
    capture_lex $P5034
    new $P5035, 'ResizablePMCArray'
    box $P5036, "obj"
    push $P5035, $P5036
    box $P5037, "int"
    push $P5035, $P5037
    box $P5038, "num"
    push $P5035, $P5038
    box $P5039, "str"
    push $P5035, $P5039
    set $P105, $P5035
    .const 'Sub' $P5040 = 'cuid_89_1361964166.213' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_90_1361964166.213' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_91_1361964166.213' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_92_1361964166.213' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_93_1361964166.213' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_94_1361964166.213' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_95_1361964166.213' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_96_1361964166.213' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_97_1361964166.213' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_98_1361964166.213' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_99_1361964166.213' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_100_1361964166.213' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_101_1361964166.213' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_102_1361964166.213' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_103_1361964166.213' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_104_1361964166.213' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_105_1361964166.213' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_106_1361964166.213' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_107_1361964166.213' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_108_1361964166.213' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_109_1361964166.213' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_110_1361964166.213' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_111_1361964166.213' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_112_1361964166.213' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_113_1361964166.213' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_114_1361964166.213' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_115_1361964166.213' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_116_1361964166.213' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_117_1361964166.213' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_118_1361964166.213' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_119_1361964166.213' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_120_1361964166.213' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_121_1361964166.213' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_122_1361964166.213' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_123_1361964166.213' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_124_1361964166.213' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_125_1361964166.213' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_126_1361964166.213' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_127_1361964166.213' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_128_1361964166.213' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_129_1361964166.213' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_130_1361964166.213' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_131_1361964166.213' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_132_1361964166.213' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_133_1361964166.213' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_134_1361964166.213' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_135_1361964166.213' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_136_1361964166.213' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_137_1361964166.213' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_138_1361964166.213' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_139_1361964166.213' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_140_1361964166.213' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_141_1361964166.213' 
    capture_lex $P5092
    .return ($P5092) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_register_type" :subid("cuid_286_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2505
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_210 
    find_lex $P5001, "@prim_to_reg"
    set fb_tmp_210, $P5001
    repr_defined $I5001, fb_tmp_210
    unless $I5001 goto if711_else1323 
    repr_get_primitive_type_spec $I5002, _lex_param_0
    set $P5002, fb_tmp_210[$I5002]
    set $P5004, $P5002
    goto if711_end1324
  if711_else1323:
    null $P5003
    set $P5004, $P5003
  if711_end1324:
    unless_null $P5004, vivi_7121325
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_7121325:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_lookup_name" :subid("cuid_288_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2513
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_211 
    find_lex $P5001, "@prim_to_lookup_name"
    set fb_tmp_211, $P5001
    repr_defined $I5001, fb_tmp_211
    unless $I5001 goto if713_else1326 
    repr_get_primitive_type_spec $I5002, _lex_param_0
    set $P5002, fb_tmp_211[$I5002]
    set $P5004, $P5002
    goto if713_end1327
  if713_else1326:
    null $P5003
    set $P5004, $P5003
  if713_end1327:
    unless_null $P5004, vivi_7141328
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_7141328:
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "want" :subid("cuid_290_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2957
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5012 = 'cuid_289_1361964166.213' 
    capture_lex $P5012 
    .lex "@possibles", $P101 
    .lex "$best", $P102 
    .lex "$node", _lex_param_0 
    .lex "$type", _lex_param_1 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 2958
    $P5004 = _lex_param_0."list"()
    repr_clone $P5003, $P5004
    set $P101, $P5003
.annotate 'line', 2959
    $P5005 = $P101."shift"()
    set $P102, $P5005
    set $P5006, $P101
    iter $P5008, $P101
  for_next1331:
    unless $P5008, for_done1333
    shift $P5010, $P5008
    shift $P5011, $P5008
  for_redo1332:
    .const 'Sub' $P5009 = 'cuid_289_1361964166.213' 
    capture_lex $P5009
    $P5006 = $P5009($P5010, $P5011)
    goto for_next1331
  for_done1333:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_289_1361964166.213") :anon :lex :outer("cuid_290_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2960
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$sel", _lex_param_0 
    .lex "$ast", _lex_param_1 
    set $S5001, _lex_param_0
    find_lex $P5001, "$type"
    set $S5002, $P5001
    index $I5002, $S5001, $S5002, 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    box $P5003, $I5001
    set $P5002, $P5003
    unless $I5001 goto if715_end1330 
.annotate 'line', 2961
    store_lex "$best", _lex_param_1
    set $P5002, _lex_param_1
  if715_end1330:
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_291_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2308
    .const 'Sub' $P5012 = 'cuid_52_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_53_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_54_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_55_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_56_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_57_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_58_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_59_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_60_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_61_1361964166.213' 
    capture_lex $P5012 
    .const 'Sub' $P5012 = 'cuid_62_1361964166.213' 
    capture_lex $P5012 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_52_1361964166.213' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_53_1361964166.213' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_54_1361964166.213' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_55_1361964166.213' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_56_1361964166.213' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_57_1361964166.213' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_58_1361964166.213' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_59_1361964166.213' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_60_1361964166.213' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_61_1361964166.213' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_62_1361964166.213' 
    capture_lex $P5011
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_52_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2314
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_11 :opt_flag 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$cur", _lex_param_1 
    if haz_param_11, default1336
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_1, $P5010
  default1336:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
    unless _lex_param_1 goto if716_else1334 
.annotate 'line', 2317
    $P5004 = _lex_param_1."cur_p"()
    $P5005 = _lex_param_1."cur_s"()
    $P5006 = _lex_param_1."cur_i"()
    $P5007 = _lex_param_1."cur_n"()
    $P5008 = $P101."BUILD"($P5004, $P5005, $P5006, $P5007)
    goto if716_end1335
  if716_else1334:
.annotate 'line', 2318
    $P5009 = $P101."BUILD"(5000, 5000, 5000, 5000)
  if716_end1335:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "handler_allocator" :subid("cuid_53_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2322
    .param pmc _lex_param_0 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 2324
    $P101."BUILD"(10000, 10000, 10000, 10000)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_54_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2328
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$p", _lex_param_1 
    .lex "$s", _lex_param_2 
    .lex "$i", _lex_param_3 
    .lex "$n", _lex_param_4 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    set $I5001, _lex_param_1
    repr_bind_attr_int $P5001, $P5002, "$!cur_p", $I5001
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    set $I5002, _lex_param_2
    repr_bind_attr_int $P5003, $P5004, "$!cur_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    set $I5003, _lex_param_3
    repr_bind_attr_int $P5005, $P5006, "$!cur_i", $I5003
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    set $I5004, _lex_param_4
    repr_bind_attr_int $P5007, $P5008, "$!cur_n", $I5004
    .return ($I5004) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_p" :subid("cuid_55_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2335
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_p"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_p", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_p"
    set $S5002, $I5003
    concat $S5001, "$P", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_s" :subid("cuid_56_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2339
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_s"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_s"
    set $S5002, $I5003
    concat $S5001, "$S", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_i" :subid("cuid_57_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2343
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_i"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_i", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_i"
    set $S5002, $I5003
    concat $S5001, "$I", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_n" :subid("cuid_58_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2347
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_n"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_n", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_n"
    set $S5002, $I5003
    concat $S5001, "$N", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_p" :subid("cuid_59_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2352
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_p"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_s" :subid("cuid_60_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2353
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_s"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_i" :subid("cuid_61_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2354
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_i"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "cur_n" :subid("cuid_62_1361964166.213") :anon :lex :outer("cuid_291_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2355
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    repr_get_attr_int $I5001, $P5001, $P5002, "$!cur_n"
    .return ($I5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_292_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2359
    .const 'Sub' $P5031 = 'cuid_63_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_64_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_65_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_66_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_67_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_68_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_69_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_70_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_71_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_72_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_73_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_74_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_75_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_76_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_77_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_78_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_79_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_80_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_81_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_82_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_83_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_84_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_85_1361964166.213' 
    capture_lex $P5031 
    .const 'Sub' $P5031 = 'cuid_86_1361964166.213' 
    capture_lex $P5031 
    .lex "%longnames", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "$?CLASS", $P103 
    new $P5001, 'Hash'
    set $P101, $P5001
    .const 'Sub' $P5002 = 'cuid_63_1361964166.213' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_64_1361964166.213' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_65_1361964166.213' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_66_1361964166.213' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_67_1361964166.213' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_68_1361964166.213' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_69_1361964166.213' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_70_1361964166.213' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_71_1361964166.213' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_72_1361964166.213' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_73_1361964166.213' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_74_1361964166.213' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_75_1361964166.213' 
    capture_lex $P5014
    new $P5015, 'Hash'
    box $P5016, "pmc"
    set $P5015["P"], $P5016
    box $P5017, "int"
    set $P5015["I"], $P5017
    box $P5018, "num"
    set $P5015["N"], $P5018
    box $P5019, "string"
    set $P5015["S"], $P5019
    set $P101, $P5015
    .const 'Sub' $P5020 = 'cuid_76_1361964166.213' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_77_1361964166.213' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_78_1361964166.213' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_79_1361964166.213' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_80_1361964166.213' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_81_1361964166.213' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_82_1361964166.213' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_83_1361964166.213' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_84_1361964166.213' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_85_1361964166.213' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_86_1361964166.213' 
    capture_lex $P5030
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "new" :subid("cuid_63_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2376
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "$obj", $P101 
    .lex "self", _lex_param_0 
    .lex "$qast", _lex_param_1 
    .lex "$outer", _lex_param_2 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_decontainerize $P5003, _lex_param_0
    repr_instance_of $P5002, $P5003
    set $P101, $P5002
.annotate 'line', 2378
    $P101."BUILD"(_lex_param_1, _lex_param_2)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "BUILD" :subid("cuid_64_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2382
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$qast", _lex_param_1 
    .lex "$outer", _lex_param_2 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_bind_attr_obj $P5001, $P5002, "$!qast", _lex_param_1
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_bind_attr_obj $P5003, $P5004, "$!outer", _lex_param_2
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5007, 'ResizablePMCArray'
    repr_bind_attr_obj $P5005, $P5006, "@!params", $P5007
    nqp_decontainerize $P5008, _lex_param_0
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5010, 'ResizablePMCArray'
    repr_bind_attr_obj $P5008, $P5009, "@!locals", $P5010
    nqp_decontainerize $P5011, _lex_param_0
    nqp_get_sc_object $P5012, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5013, 'ResizablePMCArray'
    repr_bind_attr_obj $P5011, $P5012, "@!lexicals", $P5013
    nqp_decontainerize $P5014, _lex_param_0
    nqp_get_sc_object $P5015, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5016, 'Hash'
    repr_bind_attr_obj $P5014, $P5015, "%!local_types", $P5016
    nqp_decontainerize $P5017, _lex_param_0
    nqp_get_sc_object $P5018, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5019, 'Hash'
    repr_bind_attr_obj $P5017, $P5018, "%!lexical_types", $P5019
    nqp_decontainerize $P5020, _lex_param_0
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5022, 'Hash'
    repr_bind_attr_obj $P5020, $P5021, "%!lexical_regs", $P5022
    nqp_decontainerize $P5023, _lex_param_0
    nqp_get_sc_object $P5024, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5025, 'Hash'
    repr_bind_attr_obj $P5023, $P5024, "%!reg_types", $P5025
    nqp_decontainerize $P5026, _lex_param_0
    nqp_get_sc_object $P5027, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    new $P5028, 'ResizablePMCArray'
    repr_bind_attr_obj $P5026, $P5027, "@!loadlibs", $P5028
    nqp_decontainerize $P5029, _lex_param_0
    nqp_get_sc_object $P5030, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_bind_attr_int $P5029, $P5030, "$!cur_lex_p", 100
    nqp_decontainerize $P5031, _lex_param_0
    nqp_get_sc_object $P5032, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_bind_attr_int $P5031, $P5032, "$!cur_lex_s", 100
    nqp_decontainerize $P5033, _lex_param_0
    nqp_get_sc_object $P5034, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_bind_attr_int $P5033, $P5034, "$!cur_lex_i", 100
    nqp_decontainerize $P5035, _lex_param_0
    nqp_get_sc_object $P5036, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_bind_attr_int $P5035, $P5036, "$!cur_lex_n", 100
    .return (100) 
.end
.HLL "nqp"
.namespace []
.sub "add_param" :subid("cuid_65_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2399
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5012 = 'cuid_293_1361964166.213' 
    capture_lex $P5012 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2400
    $P5001 = _lex_param_1."scope"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "local"
    unless $I5001 goto if717_else1337 
.annotate 'line', 2401
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = $P5002."register_local"(_lex_param_1)
    goto if717_end1338
  if717_else1337:
    .const 'Sub' $P5004 = 'cuid_293_1361964166.213' 
    capture_lex $P5004
    $P5005 = $P5004()
  if717_end1338:
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5008, $P5006, $P5007, "@!params"
    nqp_decontainerize $P5009, _lex_param_0
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!params"
    set $N5001, $P5011
    set $I5002, $N5001
    set $P5008[$I5002], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_293_1361964166.213") :anon :lex :outer("cuid_65_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2403
    .lex "$reg", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5001, $P5002, $P5004, "$!param_idx"
    set $S5002, $I5001
    concat $S5001, "_lex_param_", $S5002
    box $P5005, $S5001
    set $P101, $P5005
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5002, $P5009, $P5011, "$!param_idx"
    set $N5002, $I5002
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5003, $N5001
    repr_bind_attr_int $P5006, $P5008, "$!param_idx", $I5003
.annotate 'line', 2406
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$var"
    $P5015 = $P5012."register_lexical"($P5014, $P101)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "add_lexical" :subid("cuid_66_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2411
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2412
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."register_lexical"(_lex_param_1)
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!lexicals"
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!lexicals"
    set $N5001, $P5007
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "add_local" :subid("cuid_67_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2416
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
.annotate 'line', 2417
    nqp_decontainerize $P5001, _lex_param_0
    $P5001."register_local"(_lex_param_1)
    nqp_decontainerize $P5002, _lex_param_0
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5004, $P5002, $P5003, "@!locals"
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!locals"
    set $N5001, $P5007
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_1
    .return (_lex_param_1) 
.end
.HLL "nqp"
.namespace []
.sub "register_lexical" :subid("cuid_68_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2421
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_12 :opt_flag 
    .lex "$name", $P101 
    .lex "$type", $P102 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
    .lex "$reg", _lex_param_2 
    .local pmc fb_tmp_212 
    if haz_param_12, default1346
    nqp_get_sc_object $P5029, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5029
  default1346:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 2422
    $P5003 = _lex_param_1."name"()
    set $P101, $P5003
.annotate 'line', 2423
    $P5004 = _lex_param_1."returns"()
    $P5005 = "&type_to_register_type"($P5004)
    set $P102, $P5005
    nqp_decontainerize $P5006, _lex_param_0
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5008, $P5006, $P5007, "%!lexical_types"
    set $S5001, $P101
    exists $I5001, $P5008[$S5001]
    unless $I5001 goto if718_end1340 
.annotate 'line', 2424
    set $S5004, $P101
    concat $S5003, "Lexical '", $S5004
    concat $S5002, $S5003, "' already declared"
    box $P5009, $S5002
    die $P5009
  if718_end1340:
    nqp_decontainerize $P5010, _lex_param_0
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5012, $P5010, $P5011, "%!lexical_types"
    set $S5005, $P101
    set $P5012[$S5005], $P102
    nqp_decontainerize $P5013, _lex_param_0
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5015, $P5013, $P5014, "%!lexical_regs"
    set $S5006, $P101
    unless _lex_param_2 goto if719_else1341 
    set $P5018, _lex_param_2
    goto if719_end1342
  if719_else1341:
.annotate 'line', 2428
    nqp_decontainerize $P5016, _lex_param_0
    set $S5009, $P102
    downcase $S5008, $S5009
    concat $S5007, "fresh_lex_", $S5008
    $P5017 = $P5016.$S5007()
    set $P5018, $P5017
  if719_end1342:
    set $P5015[$S5006], $P5018
    nqp_decontainerize $P5019, _lex_param_0
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5021, $P5019, $P5020, "%!reg_types"
    nqp_decontainerize $P5022, _lex_param_0
    nqp_get_sc_object $P5023, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5024, $P5022, $P5023, "%!lexical_regs"
    set fb_tmp_212, $P5024
    repr_defined $I5002, fb_tmp_212
    unless $I5002 goto if720_else1343 
    set $S5010, $P101
    set $P5025, fb_tmp_212[$S5010]
    set $P5027, $P5025
    goto if720_end1344
  if720_else1343:
    null $P5026
    set $P5027, $P5026
  if720_end1344:
    unless_null $P5027, vivi_7211345
    nqp_get_sc_object $P5028, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5027, $P5028
  vivi_7211345:
    set $S5011, $P5027
    set $P5021[$S5011], $P102
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "register_local" :subid("cuid_69_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2432
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$name", $P101 
    .lex "self", _lex_param_0 
    .lex "$var", _lex_param_1 
    .local pmc fb_tmp_213 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2433
    $P5002 = _lex_param_1."name"()
    set $P101, $P5002
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!local_types"
    set $S5001, $P101
    exists $I5001, $P5005[$S5001]
    unless $I5001 goto if722_end1348 
.annotate 'line', 2434
    set $S5004, $P101
    concat $S5003, "Local '", $S5004
    concat $S5002, $S5003, "' already declared"
    box $P5006, $S5002
    die $P5006
  if722_end1348:
    nqp_decontainerize $P5007, _lex_param_0
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5009, $P5007, $P5008, "%!local_types"
    set $S5005, $P101
.annotate 'line', 2437
    $P5010 = _lex_param_1."returns"()
    $P5011 = "&type_to_register_type"($P5010)
    set $P5009[$S5005], $P5011
    nqp_decontainerize $P5012, _lex_param_0
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5014, $P5012, $P5013, "%!reg_types"
    set $S5006, $P101
    nqp_decontainerize $P5015, _lex_param_0
    nqp_get_sc_object $P5016, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5017, $P5015, $P5016, "%!local_types"
    set fb_tmp_213, $P5017
    repr_defined $I5002, fb_tmp_213
    unless $I5002 goto if723_else1349 
    set $S5007, $P101
    set $P5018, fb_tmp_213[$S5007]
    set $P5020, $P5018
    goto if723_end1350
  if723_else1349:
    null $P5019
    set $P5020, $P5019
  if723_end1350:
    unless_null $P5020, vivi_7241351
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_7241351:
    set $P5014[$S5006], $P5020
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "qast" :subid("cuid_70_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2441
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "$!qast"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "outer" :subid("cuid_71_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2442
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "$!outer"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "params" :subid("cuid_72_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2443
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!params"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "lexicals" :subid("cuid_73_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2444
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!lexicals"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "locals" :subid("cuid_74_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2445
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!locals"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "lex_reg" :subid("cuid_75_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2447
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_214 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!lexical_regs"
    set fb_tmp_214, $P5003
    repr_defined $I5001, fb_tmp_214
    unless $I5001 goto if725_else1352 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_214[$S5001]
    set $P5006, $P5004
    goto if725_end1353
  if725_else1352:
    null $P5005
    set $P5006, $P5005
  if725_end1353:
    unless_null $P5006, vivi_7261354
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_7261354:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "local_type" :subid("cuid_76_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2450
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_215 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!local_types"
    set fb_tmp_215, $P5003
    repr_defined $I5001, fb_tmp_215
    unless $I5001 goto if727_else1355 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_215[$S5001]
    set $P5006, $P5004
    goto if727_end1356
  if727_else1355:
    null $P5005
    set $P5006, $P5005
  if727_end1356:
    unless_null $P5006, vivi_7281357
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_7281357:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "local_type_long" :subid("cuid_77_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2451
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_216 
    .local pmc fb_tmp_217 
    find_lex $P5001, "%longnames"
    set fb_tmp_216, $P5001
    repr_defined $I5001, fb_tmp_216
    unless $I5001 goto if729_else1358 
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!local_types"
    set fb_tmp_217, $P5005
    repr_defined $I5002, fb_tmp_217
    unless $I5002 goto if730_else1360 
    set $S5001, _lex_param_1
    set $P5006, fb_tmp_217[$S5001]
    set $P5008, $P5006
    goto if730_end1361
  if730_else1360:
    null $P5007
    set $P5008, $P5007
  if730_end1361:
    unless_null $P5008, vivi_7311362
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_7311362:
    set $S5002, $P5008
    set $P5002, fb_tmp_216[$S5002]
    set $P5011, $P5002
    goto if729_end1359
  if729_else1358:
    null $P5010
    set $P5011, $P5010
  if729_end1359:
    unless_null $P5011, vivi_7321363
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_7321363:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_type" :subid("cuid_78_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2452
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_218 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!lexical_types"
    set fb_tmp_218, $P5003
    repr_defined $I5001, fb_tmp_218
    unless $I5001 goto if733_else1364 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_218[$S5001]
    set $P5006, $P5004
    goto if733_end1365
  if733_else1364:
    null $P5005
    set $P5006, $P5005
  if733_end1365:
    unless_null $P5006, vivi_7341366
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_7341366:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "lexical_type_long" :subid("cuid_79_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2453
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    find_lex $P5001, "%longnames"
    set fb_tmp_219, $P5001
    repr_defined $I5001, fb_tmp_219
    unless $I5001 goto if735_else1367 
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5005, $P5003, $P5004, "%!lexical_types"
    set fb_tmp_220, $P5005
    repr_defined $I5002, fb_tmp_220
    unless $I5002 goto if736_else1369 
    set $S5001, _lex_param_1
    set $P5006, fb_tmp_220[$S5001]
    set $P5008, $P5006
    goto if736_end1370
  if736_else1369:
    null $P5007
    set $P5008, $P5007
  if736_end1370:
    unless_null $P5008, vivi_7371371
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_7371371:
    set $S5002, $P5008
    set $P5002, fb_tmp_219[$S5002]
    set $P5011, $P5002
    goto if735_end1368
  if735_else1367:
    null $P5010
    set $P5011, $P5010
  if735_end1368:
    unless_null $P5011, vivi_7381372
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_7381372:
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "reg_type" :subid("cuid_80_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2454
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$name", _lex_param_1 
    .local pmc fb_tmp_221 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "%!reg_types"
    set fb_tmp_221, $P5003
    repr_defined $I5001, fb_tmp_221
    unless $I5001 goto if739_else1373 
    set $S5001, _lex_param_1
    set $P5004, fb_tmp_221[$S5001]
    set $P5006, $P5004
    goto if739_end1374
  if739_else1373:
    null $P5005
    set $P5006, $P5005
  if739_end1374:
    unless_null $P5006, vivi_7401375
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_7401375:
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "add_loadlibs" :subid("cuid_81_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2456
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5006 = 'cuid_294_1361964166.213' 
    capture_lex $P5006 
    .lex "self", _lex_param_0 
    .lex "@libs", _lex_param_1 
    set $P5001, _lex_param_1
    iter $P5003, _lex_param_1
  for_next1376:
    unless $P5003, for_done1378
    shift $P5005, $P5003
  for_redo1377:
    .const 'Sub' $P5004 = 'cuid_294_1361964166.213' 
    capture_lex $P5004
    $P5001 = $P5004($P5005)
    goto for_next1376
  for_done1378:
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_294_1361964166.213") :anon :lex :outer("cuid_81_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2457
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5002, "self"
    nqp_decontainerize $P5001, $P5002
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5004, $P5001, $P5003, "@!loadlibs"
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5008, $P5005, $P5007, "@!loadlibs"
    set $N5001, $P5008
    set $I5001, $N5001
    set $P5004[$I5001], _lex_param_0
    .return (_lex_param_0) 
.end
.HLL "nqp"
.namespace []
.sub "loadlibs" :subid("cuid_82_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2461
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_obj $P5003, $P5001, $P5002, "@!loadlibs"
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_p" :subid("cuid_83_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2465
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_p"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_p", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_p"
    set $S5002, $I5003
    concat $S5001, "$P", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_s" :subid("cuid_84_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2469
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_s"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_s", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_s"
    set $S5002, $I5003
    concat $S5001, "$S", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_i" :subid("cuid_85_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2473
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_i"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_i", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_i"
    set $S5002, $I5003
    concat $S5001, "$I", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "fresh_lex_n" :subid("cuid_86_1361964166.213") :anon :lex :outer("cuid_292_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2477
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_decontainerize $P5001, _lex_param_0
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    nqp_decontainerize $P5003, _lex_param_0
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5001, $P5003, $P5004, "$!cur_lex_n"
    set $N5002, $I5001
    set $N5003, 1
    add $N5001, $N5002, $N5003
    set $I5002, $N5001
    repr_bind_attr_int $P5001, $P5002, "$!cur_lex_n", $I5002
    nqp_decontainerize $P5005, _lex_param_0
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    repr_get_attr_int $I5003, $P5005, $P5006, "$!cur_lex_n"
    set $S5002, $I5003
    concat $S5001, "$N", $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "post" :subid("cuid_87_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2496
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$source", _lex_param_1 
    .lex "%adverbs", _lex_param_2 
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 114
    type_check $I5001, _lex_param_1, $P5001
    set $I5003, $I5001
    if $I5001 goto unless745_end1386 
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    type_check $I5002, _lex_param_1, $P5002
    set $I5003, $I5002
  unless745_end1386:
    if $I5003 goto unless744_end1384 
.annotate 'line', 2498
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    $P5004 = $P5003."new"(_lex_param_1)
    set _lex_param_1, $P5004
  unless744_end1384:
.annotate 'line', 2501
    nqp_decontainerize $P5005, _lex_param_0
    $P5006 = $P5005."as_post"(_lex_param_1)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "type_to_register_type" :subid("cuid_88_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2508
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$type", _lex_param_1 
.annotate 'line', 2509
    $P5001 = "&type_to_register_type"(_lex_param_1)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "force_return_boxing_for_hll" :subid("cuid_89_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2518
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$hll", _lex_param_1 
    find_lex $P5001, "%hll_force_return_boxing"
    set $S5001, _lex_param_1
    box $P5002, 1
    set $P5001[$S5001], $P5002
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "unique" :subid("cuid_90_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2522
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 :optional 
    .param int haz_param_13 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$prefix", _lex_param_1 
    .local pmc tmp_2 
    .local pmc fb_tmp_223 
    if haz_param_13, default1390
    box $P5001, ""
    set _lex_param_1, $P5001
  default1390:
    set $S5002, _lex_param_1
    find_lex $P5002, "$?PACKAGE"
    get_who $P5001, $P5002
    set fb_tmp_223, $P5001
    repr_defined $I5001, fb_tmp_223
    unless $I5001 goto if746_else1387 
    set $P5003, fb_tmp_223["$serno"]
    set $P5005, $P5003
    goto if746_end1388
  if746_else1387:
    null $P5004
    set $P5005, $P5004
  if746_end1388:
    unless_null $P5005, vivi_7471389
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5005, $P5006
  vivi_7471389:
    set tmp_2, $P5005
    find_lex $P5008, "$?PACKAGE"
    get_who $P5007, $P5008
    set $N5002, tmp_2
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5009, $N5001
    set $P5007["$serno"], $P5009
    set $S5003, tmp_2
    concat $S5001, $S5002, $S5003
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "escape" :subid("cuid_91_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2523
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$esc", $P101 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    set $S5002, _lex_param_1
    escape $S5001, $S5002
    box $P5002, $S5001
    set $P101, $P5002
    set $S5003, $P101
    index $I5002, $S5003, utf8:"\\x", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if748_else1391 
    set $S5006, $P101
    concat $S5005, "utf8:\"", $S5006
    concat $S5004, $S5005, "\""
    set $S5015, $S5004
    goto if748_end1392
  if748_else1391:
    set $S5007, $P101
    index $I5004, $S5007, unicode:"\\u", 0
    set $N5003, $I5004
    set $N5004, 0
    isge $I5003, $N5003, $N5004
    unless $I5003 goto if749_else1393 
    set $S5010, $P101
    concat $S5009, "unicode:\"", $S5010
    concat $S5008, $S5009, "\""
    set $S5014, $S5008
    goto if749_end1394
  if749_else1393:
    set $S5013, $P101
    concat $S5012, "\"", $S5013
    concat $S5011, $S5012, "\""
    set $S5014, $S5011
  if749_end1394:
    set $S5015, $S5014
  if748_end1392:
    .return ($S5015) 
.end
.HLL "nqp"
.namespace []
.sub "rxescape" :subid("cuid_92_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2531
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$str", _lex_param_1 
    set $S5004, _lex_param_1
    escape $S5003, $S5004
    concat $S5002, "ucs4:\"", $S5003
    concat $S5001, $S5002, "\""
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_93_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2533
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_14 :opt_flag 
    .lex "$*WANT", $P101 
    .lex "CURRENT_DISPATCH_CAPTURE", $P102 
    .lex "&*CURRENT_DISPATCHER", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc dispatch_cap_1 
    .local pmc dispatch_cap_2 
    if haz_param_14, default1401
    nqp_get_sc_object $P5025, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5025
  default1401:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    getinterp $P5002
    set $P5002, $P5002['context']
    set $P102, $P5002
    getinterp $P5004
    set $P5004, $P5004['sub']
    get_sub_code_object $P5003, $P5004
    set $P103, $P5003
    set $P101, _lex_param_2
    unless _lex_param_2 goto if750_else1395 
.annotate 'line', 2535
    nqp_get_sc_object $P5005, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 66
    type_check $I5001, _lex_param_1, $P5005
    unless $I5001 goto if751_else1397 
.annotate 'line', 2536
.annotate 'line', 2537
    nqp_decontainerize $P5006, _lex_param_0
    nqp_decontainerize $P5007, _lex_param_0
    $P5008 = "&want"(_lex_param_1, _lex_param_2)
    $P5009 = $P5007."as_post"($P5008)
    $P5010 = $P5006."coerce"($P5009, _lex_param_2)
    set $P5018, $P5010
    goto if751_end1398
  if751_else1397:
.annotate 'line', 2539
.annotate 'line', 2540
    nqp_decontainerize $P5011, _lex_param_0
    set dispatch_cap_1, $P102
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 5
    repr_get_attr_obj $P5015, $P103, $P5014, "$!dispatch_cache"
    multi_cache_find $P5013, $P5015, dispatch_cap_1
    unless_null $P5013, vivi_7521399
    $P5016 = $P103."dispatch"(dispatch_cap_1)
    set $P5013, $P5016
  vivi_7521399:
    invoke_with_capture $P5012, $P5013, dispatch_cap_1
    $P5017 = $P5011."coerce"($P5012, _lex_param_2)
    set $P5018, $P5017
  if751_end1398:
    set $P5024, $P5018
    goto if750_end1396
  if750_else1395:
.annotate 'line', 2543
    set dispatch_cap_2, $P102
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 5
    repr_get_attr_obj $P5022, $P103, $P5021, "$!dispatch_cache"
    multi_cache_find $P5020, $P5022, dispatch_cap_2
    unless_null $P5020, vivi_7531400
    $P5023 = $P103."dispatch"(dispatch_cap_2)
    set $P5020, $P5023
  vivi_7531400:
    invoke_with_capture $P5019, $P5020, dispatch_cap_2
    set $P5024, $P5019
  if750_end1396:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_94_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2548
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_15 :opt_flag 
    .const 'Sub' $P5038 = 'cuid_296_1361964166.213' 
    capture_lex $P5038 
    .const 'Sub' $P5038 = 'cuid_298_1361964166.213' 
    capture_lex $P5038 
    .const 'Sub' $P5038 = 'cuid_299_1361964166.213' 
    capture_lex $P5038 
    .lex "$*HLL", $P101 
    .lex "$*QAST_BLOCK_NO_CLOSE", $P102 
    .lex "$block_post", $P103 
    .lex "$comp_mode", $P104 
    .lex "@pre_des", $P105 
    .lex "@post_des", $P106 
    .lex "self", _lex_param_0 
    .lex "$cu", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    if haz_param_15, default1432
    nqp_get_sc_object $P5037, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5037
  default1432:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    box $P5007, ""
    set $P101, $P5007
.annotate 'line', 2551
    $P5008 = _lex_param_1."hll"()
    unless $P5008 goto if754_end1403 
.annotate 'line', 2552
    $P5009 = _lex_param_1."hll"()
    set $P101, $P5009
  if754_end1403:
    $P5010 = _lex_param_1."list"()
    set $N5001, $P5010
    set $N5002, 1
    isne $I5001, $N5001, $N5002
    set $I5005, $I5001
    if $I5001 goto unless756_end1407 
    set fb_tmp_224, _lex_param_1
    repr_defined $I5004, fb_tmp_224
    unless $I5004 goto if757_else1408 
    set $P5011, fb_tmp_224[0]
    set $P5013, $P5011
    goto if757_end1409
  if757_else1408:
    null $P5012
    set $P5013, $P5012
  if757_end1409:
    unless_null $P5013, vivi_7581410
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_7581410:
    nqp_get_sc_object $P5015, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    type_check $I5003, $P5013, $P5015
    not $I5002, $I5003
    set $I5005, $I5002
  unless756_end1407:
    unless $I5005 goto if755_end1405 
.annotate 'line', 2556
    box $P5016, "QAST::CompUnit should have one child that is a QAST::Block"
    die $P5016
  if755_end1405:
    box $P5017, 1
    set $P102, $P5017
.annotate 'line', 2562
    nqp_decontainerize $P5018, _lex_param_0
    set fb_tmp_225, _lex_param_1
    repr_defined $I5006, fb_tmp_225
    unless $I5006 goto if759_else1411 
    set $P5019, fb_tmp_225[0]
    set $P5021, $P5019
    goto if759_end1412
  if759_else1411:
    null $P5020
    set $P5021, $P5020
  if759_end1412:
    unless_null $P5021, vivi_7601413
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5021, $P5022
  vivi_7601413:
    $P5023 = $P5018."as_post"($P5021)
    set $P103, $P5023
.annotate 'line', 2567
    $P5024 = _lex_param_1."compilation_mode"()
    set $P104, $P5024
.annotate 'line', 2568
    $P5025 = _lex_param_1."pre_deserialize"()
    set $P105, $P5025
.annotate 'line', 2569
    $P5026 = _lex_param_1."post_deserialize"()
    set $P106, $P5026
    set $P5027, $P104
    if $P104 goto unless763_end1419 
    set $P5027, $P105
  unless763_end1419:
    set $P5028, $P5027
    if $P5027 goto unless762_end1417 
    set $P5028, $P106
  unless762_end1417:
    unless $P5028 goto if761_end1415 
    .const 'Sub' $P5029 = 'cuid_296_1361964166.213' 
    capture_lex $P5029
    $P5030 = $P5029()
  if761_end1415:
.annotate 'line', 2598
    $P5031 = _lex_param_1."load"()
    defined $I5007, $P5031
    unless $I5007 goto if765_end1429 
    .const 'Sub' $P5032 = 'cuid_298_1361964166.213' 
    capture_lex $P5032
    $P5033 = $P5032()
  if765_end1429:
.annotate 'line', 2605
    $P5034 = _lex_param_1."main"()
    defined $I5008, $P5034
    unless $I5008 goto if766_end1431 
    .const 'Sub' $P5035 = 'cuid_299_1361964166.213' 
    capture_lex $P5035
    $P5036 = $P5035()
  if766_end1431:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_296_1361964166.213") :anon :lex :outer("cuid_94_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2570
    .const 'Sub' $P5033 = 'cuid_295_1361964166.213' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_297_1361964166.213' 
    capture_lex $P5033 
    .lex "$block", $P101 
    .lex "$sc_post", $P102 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 2573
    nqp_get_sc_object $P5003, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    $P5004 = $P5003."new"("raw" :named("blocktype"))
    set $P101, $P5004
    find_lex $P5008, "@pre_des"
    set $P5005, $P5008
    iter $P5007, $P5008
  for_next1420:
    unless $P5007, for_done1422
    shift $P5010, $P5007
  for_redo1421:
    .const 'Sub' $P5009 = 'cuid_295_1361964166.213' 
    capture_lex $P5009
    $P5005 = $P5009($P5010)
    goto for_next1420
  for_done1422:
    find_lex $P5011, "$comp_mode"
    unless $P5011 goto if764_end1424 
.annotate 'line', 2581
.annotate 'line', 2582
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$cu"
    $P5015 = $P5014."sc"()
    find_lex $P5016, "$cu"
    $P5017 = $P5016."code_ref_blocks"()
.annotate 'line', 2583
    find_lex $P5018, "$cu"
    $P5019 = $P5018."repo_conflict_resolver"()
    $P5020 = $P5012."deserialization_code"($P5015, $P5017, $P5019)
    $P5021 = $P101."push"($P5020)
  if764_end1424:
    find_lex $P5025, "@post_des"
    set $P5022, $P5025
    iter $P5024, $P5025
  for_next1425:
    unless $P5024, for_done1427
    shift $P5027, $P5024
  for_redo1426:
    .const 'Sub' $P5026 = 'cuid_297_1361964166.213' 
    capture_lex $P5026
    $P5022 = $P5026($P5027)
    goto for_next1425
  for_done1427:
.annotate 'line', 2592
    find_lex $P5029, "self"
    nqp_decontainerize $P5028, $P5029
    $P5030 = $P5028."as_post"($P101)
    set $P102, $P5030
.annotate 'line', 2593
    $P102."pirflags"(":load :init")
.annotate 'line', 2594
    find_lex $P5031, "$block_post"
    $P5032 = $P5031."push"($P102)
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_295_1361964166.213") :anon :lex :outer("cuid_296_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2576
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2577
    find_lex $P5001, "$block"
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 98
    $P5003 = $P5002."new"(_lex_param_0)
    $P5004 = $P5001."push"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_297_1361964166.213") :anon :lex :outer("cuid_296_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2587
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2588
    find_lex $P5001, "$block"
    nqp_get_sc_object $P5002, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 98
    $P5003 = $P5002."new"(_lex_param_0)
    $P5004 = $P5001."push"($P5003)
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_298_1361964166.213") :anon :lex :outer("cuid_94_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2598
    .lex "$load_post", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2599
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    find_lex $P5005, "$cu"
    $P5006 = $P5005."load"()
    $P5007 = $P5004."new"($P5006, "raw" :named("blocktype"))
    $P5008 = $P5002."as_post"($P5007)
    set $P101, $P5008
.annotate 'line', 2600
    $P101."pirflags"(":load")
.annotate 'line', 2601
    find_lex $P5009, "$block_post"
    $P5010 = $P5009."push"($P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_299_1361964166.213") :anon :lex :outer("cuid_94_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2605
    .lex "$main_post", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2606
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    nqp_get_sc_object $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    find_lex $P5005, "$cu"
    $P5006 = $P5005."main"()
    $P5007 = $P5004."new"($P5006, "raw" :named("blocktype"))
    $P5008 = $P5002."as_post"($P5007)
    set $P101, $P5008
.annotate 'line', 2607
    $P101."pirflags"(":main")
.annotate 'line', 2608
    find_lex $P5009, "$block_post"
    $P5010 = $P5009."push"($P101)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "deserialization_code" :subid("cuid_95_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2614
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .lex "$sh", $P101 
    .lex "$serialized", $P102 
    .lex "$sh_ast", $P103 
    .lex "$sh_elems", $P104 
    .lex "$i", $P105 
    .lex "$cr_past", $P106 
    .lex "self", _lex_param_0 
    .lex "$sc", _lex_param_1 
    .lex "@code_ref_blocks", _lex_param_2 
    .lex "$repo_conf_res", _lex_param_3 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    new $P5007, 'ResizableStringArray'
    set $P101, $P5007
    nqp_serialize_sc $S5001, _lex_param_1, $P101
    box $P5008, $S5001
    set $P102, $P5008
    nqp_pop_compiling_sc 
.annotate 'line', 2623
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5010 = $P5009."new"("list_s" :named("op"))
    set $P103, $P5010
    elements $I5001, $P101
    box $P5011, $I5001
    set $P104, $P5011
    box $P5012, 0
    set $P105, $P5012
  while767_test1433:
    set $N5001, $P105
    set $N5002, $P104
    islt $I5002, $N5001, $N5002
    box $P5028, $I5002
    set $P5027, $P5028
    unless $I5002 goto while767_done1437 
  while767_redo1435:
.annotate 'line', 2626
.annotate 'line', 2627
    set fb_tmp_226, $P101
    repr_defined $I5004, fb_tmp_226
    unless $I5004 goto if769_else1440 
    set $I5005, $P105
    set $P5013, fb_tmp_226[$I5005]
    set $P5015, $P5013
    goto if769_end1441
  if769_else1440:
    null $P5014
    set $P5015, $P5014
  if769_end1441:
    unless_null $P5015, vivi_7701442
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_7701442:
    set $S5002, $P5015
    isnull $I5003, $S5002
    unless $I5003 goto if768_else1438 
.annotate 'line', 2628
    nqp_get_sc_object $P5017, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5018 = $P5017."new"("null_s" :named("op"))
    set $P5025, $P5018
    goto if768_end1439
  if768_else1438:
.annotate 'line', 2629
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 52
    set fb_tmp_227, $P101
    repr_defined $I5006, fb_tmp_227
    unless $I5006 goto if771_else1443 
    set $I5007, $P105
    set $P5020, fb_tmp_227[$I5007]
    set $P5022, $P5020
    goto if771_end1444
  if771_else1443:
    null $P5021
    set $P5022, $P5021
  if771_end1444:
    unless_null $P5022, vivi_7721445
    nqp_get_sc_object $P5023, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5022, $P5023
  vivi_7721445:
    $P5024 = $P5019."new"($P5022 :named("value"))
    set $P5025, $P5024
  if768_end1439:
    $P103."push"($P5025)
    set $N5004, $P105
    set $N5005, 1
    add $N5003, $N5004, $N5005
    box $P5026, $N5003
    set $P105, $P5026
    set $P5027, $P105
    goto while767_test1433 
  while767_done1437:
.annotate 'line', 2634
    nqp_get_sc_object $P5029, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5030 = $P5029."new"(_lex_param_2 :flat, "list_b" :named("op"))
    set $P106, $P5030
    unless _lex_param_3 goto if773_else1446 
.annotate 'line', 2637
.annotate 'line', 2638
    nqp_get_sc_object $P5031, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5032 = $P5031."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5033 = _lex_param_3."push"($P5032)
    goto if773_end1447
  if773_else1446:
.annotate 'line', 2640
.annotate 'line', 2641
    nqp_get_sc_object $P5034, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2643
    nqp_get_sc_object $P5035, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 52
    $P5036 = $P5035."new"("Repossession conflicts occurred during deserialization" :named("value"))
    $P5037 = $P5034."new"($P5036, "die_s" :named("op"))
    set _lex_param_3, $P5037
  if773_end1447:
.annotate 'line', 2648
    nqp_get_sc_object $P5038, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 98
.annotate 'line', 2649
    nqp_get_sc_object $P5039, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2651
    nqp_get_sc_object $P5040, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5041 = $P5040."new"("cur_sc" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2652
    nqp_get_sc_object $P5042, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    nqp_get_sc_object $P5043, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 52
    $P5044 = _lex_param_1."handle"()
    $P5045 = $P5043."new"($P5044 :named("value"))
    $P5046 = $P5042."new"($P5045, "createsc" :named("op"))
    $P5047 = $P5039."new"($P5041, $P5046, "bind" :named("op"))
.annotate 'line', 2654
    nqp_get_sc_object $P5048, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2656
    nqp_get_sc_object $P5049, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5050 = $P5049."new"("cur_sc" :named("name"), "local" :named("scope"))
.annotate 'line', 2657
    nqp_get_sc_object $P5051, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 52
    $P5052 = _lex_param_1."description"()
    $P5053 = $P5051."new"($P5052 :named("value"))
    $P5054 = $P5048."new"($P5050, $P5053, "scsetdesc" :named("op"))
.annotate 'line', 2659
    nqp_get_sc_object $P5055, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2661
    nqp_get_sc_object $P5056, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5057 = $P5056."new"("conflicts" :named("name"), "local" :named("scope"), "var" :named("decl"))
.annotate 'line', 2662
    nqp_get_sc_object $P5058, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5059 = $P5058."new"("list" :named("op"))
    $P5060 = $P5055."new"($P5057, $P5059, "bind" :named("op"))
.annotate 'line', 2664
    nqp_get_sc_object $P5061, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2666
    nqp_get_sc_object $P5062, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 52
    $P5063 = $P5062."new"($P102 :named("value"))
.annotate 'line', 2667
    nqp_get_sc_object $P5064, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5065 = $P5064."new"("cur_sc" :named("name"), "local" :named("scope"))
.annotate 'line', 2669
    nqp_get_sc_object $P5066, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 103
    $P5067 = $P5066."new"($P106, "immediate" :named("blocktype"))
.annotate 'line', 2670
    nqp_get_sc_object $P5068, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5069 = $P5068."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5070 = $P5061."new"($P5063, $P5065, $P103, $P5067, $P5069, "deserialize" :named("op"))
.annotate 'line', 2672
    nqp_get_sc_object $P5071, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 2674
    nqp_get_sc_object $P5072, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5073 = $P5072."new"("conflicts" :named("name"), "local" :named("scope"))
    $P5074 = $P5071."new"($P5073, _lex_param_3, "if" :named("op"))
    $P5075 = $P5038."new"($P5047, $P5054, $P5060, $P5070, $P5074)
    .return ($P5075) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_96_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2680
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_16 :opt_flag 
    .const 'Sub' $P5029 = 'cuid_302_1361964166.213' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_318_1361964166.213' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_319_1361964166.213' 
    capture_lex $P5029 
    .lex "$sub", $P101 
    .lex "$ops", $P102 
    .lex "$blocktype", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_236 
    if haz_param_16, default1615
    nqp_get_sc_object $P5028, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5028
  default1615:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    root_new $P104, ['parrot';'Continuation']
    set_label $P104, lexotic_1448
    .lex "RETURN", $P104
    .const 'Sub' $P5004 = 'cuid_302_1361964166.213' 
    capture_lex $P5004
    $P5005 = $P5004()
    new $P5014, 'ExceptionHandler'
    set_label $P5014, catch_handler_8311570
    $P5014.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5014
    find_dynamic_lex $P5006, "$*BLOCK"
    unless_null $P5006, fallback1564
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5007, $P5008
    set fb_tmp_236, $P5007
    repr_defined $I5002, fb_tmp_236
    unless $I5002 goto if827_else1565 
    set $P5009, fb_tmp_236["$BLOCK"]
    set $P5011, $P5009
    goto if827_end1566
  if827_else1565:
    null $P5010
    set $P5011, $P5010
  if827_end1566:
    unless_null $P5011, vivi_8281567
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_8281567:
    unless_null $P5011, vivi_8291568
    die "Contextual $*BLOCK not found"
    box $P5013, "Contextual $*BLOCK not found"
    set $P5011, $P5013
  vivi_8291568:
    set $P5006, $P5011
  fallback1564:
    set $P5015, $P5006
    pop_eh 
    goto skip_handler_8301569
  catch_handler_8311570:
    .get_results ($P5014) 
    set $I10001, 1
    set $P5014["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5014
    pop_upto_eh $P5014
    pop_eh 
    set $P5015, $P10001
    goto skip_handler_8301569
  skip_handler_8301569:
    nqp_get_sc_object $P5016, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    type_check $I5001, $P5015, $P5016
    if $I5001 goto unless826_end1563 
.annotate 'line', 2863
    find_lex $P5017, "RETURN"
    $P5018 = $P5017($P101)
  unless826_end1563:
.annotate 'line', 2869
    nqp_get_sc_object $P5019, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5020 = $P5019."new"()
    set $P102, $P5020
.annotate 'line', 2870
    $P102."push"($P101)
.annotate 'line', 2871
    $P5021 = _lex_param_1."blocktype"()
    set $P103, $P5021
    set $S5001, $P103
    iseq $I5003, $S5001, "immediate"
    unless $I5003 goto if832_else1571 
    .const 'Sub' $P5022 = 'cuid_318_1361964166.213' 
    capture_lex $P5022
    $P5023 = $P5022()
    goto if832_end1572
  if832_else1571:
    set $S5002, $P103
    iseq $I5004, $S5002, "declaration"
    set $I5006, $I5004
    if $I5004 goto unless851_end1602 
    set $S5003, $P103
    iseq $I5005, $S5003, ""
    set $I5006, $I5005
  unless851_end1602:
    box $P5027, $I5006
    set $P5026, $P5027
    unless $I5006 goto if850_end1600 
    .const 'Sub' $P5024 = 'cuid_319_1361964166.213' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5026, $P5025
  if850_end1600:
  if832_end1572:
    goto lexotic_1449
  lexotic_1448:
    .get_results ($P102)
  lexotic_1449:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_302_1361964166.213") :anon :lex :outer("cuid_96_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2683
    .const 'Sub' $P5133 = 'cuid_301_1361964166.213' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_304_1361964166.213' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_311_1361964166.213' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_312_1361964166.213' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_313_1361964166.213' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_314_1361964166.213' 
    capture_lex $P5133 
    .const 'Sub' $P5133 = 'cuid_316_1361964166.213' 
    capture_lex $P5133 
    .lex "$*REGALLOC", $P101 
    .lex "$*BLOCKRA", $P102 
    .lex "$*BINDVAL", $P103 
    .lex "$outer", $P104 
    .lex "$block", $P105 
    .lex "@inners", $P106 
    .lex "$stmts", $P107 
    .lex "$decls", $P108 
    .lex "$opts", $P109 
    .lex "%lex_params", $P110 
    .lex "$cap_lex_reg", $P111 
    .lex "$hll", $P112 
    .lex "@loadlibs", $P113 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc fb_tmp_235 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    new $P5010, 'Hash'
    set $P110, $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P111, $P5011
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P112, $P5012
    new $P5013, 'ResizablePMCArray'
    set $P113, $P5013
.annotate 'line', 2685
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    $P5015 = $P5014."new"()
    set $P101, $P5015
    unless_null $P101, fallback1450
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5016, $P5017
    set fb_tmp_228, $P5016
    repr_defined $I5001, fb_tmp_228
    unless $I5001 goto if774_else1451 
    set $P5018, fb_tmp_228["$REGALLOC"]
    set $P5020, $P5018
    goto if774_end1452
  if774_else1451:
    null $P5019
    set $P5020, $P5019
  if774_end1452:
    unless_null $P5020, vivi_7751453
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_7751453:
    unless_null $P5020, vivi_7761454
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_7761454:
    set $P101, $P5020
  fallback1450:
    set $P102, $P101
    box $P5023, 0
    set $P103, $P5023
    new $P5032, 'ExceptionHandler'
    set_label $P5032, catch_handler_7811461
    $P5032.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5032
    find_dynamic_lex $P5024, "$*BLOCK"
    unless_null $P5024, fallback1455
    nqp_get_sc_object $P5026, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5025, $P5026
    set fb_tmp_229, $P5025
    repr_defined $I5002, fb_tmp_229
    unless $I5002 goto if777_else1456 
    set $P5027, fb_tmp_229["$BLOCK"]
    set $P5029, $P5027
    goto if777_end1457
  if777_else1456:
    null $P5028
    set $P5029, $P5028
  if777_end1457:
    unless_null $P5029, vivi_7781458
    nqp_get_sc_object $P5030, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5029, $P5030
  vivi_7781458:
    unless_null $P5029, vivi_7791459
    die "Contextual $*BLOCK not found"
    box $P5031, "Contextual $*BLOCK not found"
    set $P5029, $P5031
  vivi_7791459:
    set $P5024, $P5029
  fallback1455:
    set $P5033, $P5024
    pop_eh 
    goto skip_handler_7801460
  catch_handler_7811461:
    .get_results ($P5032) 
    set $I10001, 1
    set $P5032["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5032
    pop_upto_eh $P5032
    pop_eh 
    set $P5033, $P10001
    goto skip_handler_7801460
  skip_handler_7801460:
    set $P104, $P5033
.annotate 'line', 2689
    nqp_get_sc_object $P5034, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    find_lex $P5035, "$node"
    $P5036 = $P5034."new"($P5035, $P104)
    set $P105, $P5036
    .const 'Sub' $P5037 = 'cuid_301_1361964166.213' 
    capture_lex $P5037
    $P5038 = $P5037()
.annotate 'line', 2711
    nqp_get_sc_object $P5039, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5040 = $P5039."new"()
    set $P108, $P5040
.annotate 'line', 2712
    nqp_get_sc_object $P5041, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5042 = $P5041."new"()
    set $P109, $P5042
.annotate 'line', 2713
    find_lex $P5043, "$node"
    $P5044 = $P5043."node"()
    unless $P5044 goto if790_end1474 
    find_lex $P5045, "$node"
    $P5046 = $P5045."node"()
    $P5047 = $P108."node"($P5046)
  if790_end1474:
.annotate 'line', 2715
    find_lex $P5048, "$node"
    $P5049 = $P5048."custom_args"()
    unless $P5049 goto if791_else1475 
.annotate 'line', 2716
    $P5050 = $P108."push_pirop"(".param pmc CALL_SIG :call_sig")
    goto if791_end1476
  if791_else1475:
    .const 'Sub' $P5051 = 'cuid_304_1361964166.213' 
    capture_lex $P5051
    $P5052 = $P5051()
  if791_end1476:
.annotate 'line', 2797
    unless_null $P101, fallback1516
    nqp_get_sc_object $P5054, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5053, $P5054
    set fb_tmp_232, $P5053
    repr_defined $I5003, fb_tmp_232
    unless $I5003 goto if805_else1517 
    set $P5055, fb_tmp_232["$REGALLOC"]
    set $P5057, $P5055
    goto if805_end1518
  if805_else1517:
    null $P5056
    set $P5057, $P5056
  if805_end1518:
    unless_null $P5057, vivi_8061519
    nqp_get_sc_object $P5058, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5057, $P5058
  vivi_8061519:
    unless_null $P5057, vivi_8071520
    die "Contextual $*REGALLOC not found"
    box $P5059, "Contextual $*REGALLOC not found"
    set $P5057, $P5059
  vivi_8071520:
    set $P101, $P5057
  fallback1516:
    $P5060 = $P101."fresh_p"()
    set $P111, $P5060
    set $P5061, $P106
    iter $P5063, $P106
  for_next1521:
    unless $P5063, for_done1523
    shift $P5065, $P5063
  for_redo1522:
    .const 'Sub' $P5064 = 'cuid_311_1361964166.213' 
    capture_lex $P5064
    $P5061 = $P5064($P5065)
    goto for_next1521
  for_done1523:
.annotate 'line', 2804
    $P5069 = $P105."lexicals"()
    set $P5066, $P5069
    iter $P5068, $P5069
  for_next1524:
    unless $P5068, for_done1526
    shift $P5071, $P5068
  for_redo1525:
    .const 'Sub' $P5070 = 'cuid_312_1361964166.213' 
    capture_lex $P5070
    $P5066 = $P5070($P5071)
    goto for_next1524
  for_done1526:
    set $P5072, $P110
    iter $P5074, $P110
  for_next1527:
    unless $P5074, for_done1529
    shift $P5076, $P5074
  for_redo1528:
    .const 'Sub' $P5075 = 'cuid_313_1361964166.213' 
    capture_lex $P5075
    $P5072 = $P5075($P5076)
    goto for_next1527
  for_done1529:
.annotate 'line', 2810
    $P5080 = $P105."locals"()
    set $P5077, $P5080
    iter $P5079, $P5080
  for_next1530:
    unless $P5079, for_done1532
    shift $P5082, $P5079
  for_redo1531:
    .const 'Sub' $P5081 = 'cuid_314_1361964166.213' 
    capture_lex $P5081
    $P5077 = $P5081($P5082)
    goto for_next1530
  for_done1532:
.annotate 'line', 2815
    $P108."push"($P109)
.annotate 'line', 2818
    nqp_get_sc_object $P5083, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    $P5084 = $P5083."new"()
    store_lex "$sub", $P5084
    box $P5085, ""
    set $P112, $P5085
    new $P5094, 'ExceptionHandler'
    set_label $P5094, catch_handler_8121539
    $P5094.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5094
    find_dynamic_lex $P5086, "$*HLL"
    unless_null $P5086, fallback1533
    nqp_get_sc_object $P5088, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5087, $P5088
    set fb_tmp_233, $P5087
    repr_defined $I5004, fb_tmp_233
    unless $I5004 goto if808_else1534 
    set $P5089, fb_tmp_233["$HLL"]
    set $P5091, $P5089
    goto if808_end1535
  if808_else1534:
    null $P5090
    set $P5091, $P5090
  if808_end1535:
    unless_null $P5091, vivi_8091536
    nqp_get_sc_object $P5092, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5091, $P5092
  vivi_8091536:
    unless_null $P5091, vivi_8101537
    die "Contextual $*HLL not found"
    box $P5093, "Contextual $*HLL not found"
    set $P5091, $P5093
  vivi_8101537:
    set $P5086, $P5091
  fallback1533:
    set $P112, $P5086
    set $P5095, $P112
    pop_eh 
    goto skip_handler_8111538
  catch_handler_8121539:
    .get_results ($P5094) 
    set $I10001, 1
    set $P5094["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5094
    pop_upto_eh $P5094
    pop_eh 
    set $P5095, $P10001
    goto skip_handler_8111538
  skip_handler_8111538:
    unless $P112 goto if813_end1541 
.annotate 'line', 2821
.annotate 'line', 2822
    find_lex $P5096, "$sub"
    $P5097 = $P5096."hll"($P112)
  if813_end1541:
.annotate 'line', 2826
    find_lex $P5098, "$sub"
    $P5098."push"($P108)
    .const 'Sub' $P5099 = 'cuid_316_1361964166.213' 
    capture_lex $P5099
    $P5100 = $P5099()
.annotate 'line', 2843
    find_lex $P5101, "$sub"
    find_lex $P5102, "$node"
    $P5103 = $P5102."cuid"()
    $P5101."subid"($P5103)
.annotate 'line', 2844
    $P5104 = $P105."outer"()
    nqp_get_sc_object $P5105, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    type_check $I5005, $P5104, $P5105
    unless $I5005 goto if820_else1551 
.annotate 'line', 2845
    find_lex $P5106, "$sub"
    find_lex $P5108, "self"
    nqp_decontainerize $P5107, $P5108
    $P5109 = $P105."outer"()
    $P5110 = $P5109."qast"()
    $P5111 = $P5110."cuid"()
    $P5112 = $P5107."escape"($P5111)
    set $S5003, $P5112
    concat $S5002, ":anon :lex :outer(", $S5003
    concat $S5001, $S5002, ")"
    $P5113 = $P5106."pirflags"($S5001)
    goto if820_end1552
  if820_else1551:
.annotate 'line', 2847
.annotate 'line', 2848
    find_lex $P5114, "$sub"
    $P5115 = $P5114."pirflags"(":anon :lex")
  if820_end1552:
.annotate 'line', 2850
    find_lex $P5116, "$sub"
    find_lex $P5117, "$node"
    $P5118 = $P5117."name"()
    $P5116."name"($P5118)
.annotate 'line', 2853
    $P5119 = $P105."loadlibs"()
    set $P113, $P5119
    unless $P113 goto if821_end1554 
.annotate 'line', 2854
    find_lex $P5120, "$sub"
    $P5121 = $P5120."loadlibs"($P113)
  if821_end1554:
    find_dynamic_lex $P5122, "$*QAST_BLOCK_NO_CLOSE"
    unless_null $P5122, fallback1557
    nqp_get_sc_object $P5124, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5123, $P5124
    set fb_tmp_235, $P5123
    repr_defined $I5006, fb_tmp_235
    unless $I5006 goto if823_else1558 
    set $P5125, fb_tmp_235["$QAST_BLOCK_NO_CLOSE"]
    set $P5127, $P5125
    goto if823_end1559
  if823_else1558:
    null $P5126
    set $P5127, $P5126
  if823_end1559:
    unless_null $P5127, vivi_8241560
    nqp_get_sc_object $P5128, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5127, $P5128
  vivi_8241560:
    unless_null $P5127, vivi_8251561
    die "Contextual $*QAST_BLOCK_NO_CLOSE not found"
    box $P5129, "Contextual $*QAST_BLOCK_NO_CLOSE not found"
    set $P5127, $P5129
  vivi_8251561:
    set $P5122, $P5127
  fallback1557:
    set $P5132, $P5122
    if $P5122 goto unless822_end1556 
.annotate 'line', 2857
.annotate 'line', 2858
    find_lex $P5130, "$sub"
    $P5131 = $P5130."close_sub"()
    set $P5132, $P5131
  unless822_end1556:
    .return ($P5132) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_301_1361964166.213") :anon :lex :outer("cuid_302_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2694
    .const 'Sub' $P5032 = 'cuid_300_1361964166.213' 
    capture_lex $P5032 
    .lex "$*BLOCK", $P101 
    .lex "@*INNERS", $P102 
    .lex "$*HAVE_IMM_ARG", $P103 
    .lex "$*QAST_BLOCK_NO_CLOSE", $P104 
    .lex "$*WANT", $P105 
    .lex "$err", $P106 
    .local pmc fb_tmp_230 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    find_lex $P5007, "$block"
    set $P101, $P5007
    find_lex $P5008, "@inners"
    set $P102, $P5008
    box $P5009, 0
    set $P103, $P5009
    box $P5010, 0
    set $P104, $P5010
    new $P5026, 'ExceptionHandler'
    set_label $P5026, catch_handler_7881470
    $P5026.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5026
.annotate 'line', 2701
    new $P5024, 'ExceptionHandler'
    set_label $P5024, catch_handler_7861468
    $P5024.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5024
.annotate 'line', 2702
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    find_lex $P5020, "$node"
    $P5021 = $P5020."list"()
    $P5022 = $P5018."compile_all_the_stmts"($P5021)
    store_lex "$stmts", $P5022
    nqp_get_sc_object $P5023, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5025, $P5023
    pop_eh 
    goto skip_handler_7851467
  catch_handler_7861468:
    .get_results ($P5024) 
    .const 'Sub' $P10001 = 'cuid_300_1361964166.213' 
    capture_lex $P10001
    $P10001($P5024)
    set $I10001, 1
    set $P5024["handled"], $I10001
    nqp_get_sc_object $P10002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5024
    pop_upto_eh $P5024
    pop_eh 
    set $P5025, $P10002
    goto skip_handler_7851467
  skip_handler_7851467:
    set $P5027, $P5025
    pop_eh 
    goto skip_handler_7871469
  catch_handler_7881470:
    .get_results ($P5026) 
    set $I10001, 1
    set $P5026["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5026
    pop_upto_eh $P5026
    pop_eh 
    set $P5027, $P10001
    goto skip_handler_7871469
  skip_handler_7871469:
    set $P5031, $P106
    unless $P106 goto if789_end1472 
.annotate 'line', 2705
.annotate 'line', 2706
    find_lex $P5028, "$node"
    $P5029 = $P5028."name"()
    set $S5003, $P5029
    concat $S5002, "Error while compiling block ", $S5003
    set $S5005, $P106
    concat $S5004, ": ", $S5005
    concat $S5001, $S5002, $S5004
    box $P5030, $S5001
    die $P5030
    set $P5031, $P5030
  if789_end1472:
    .return ($P5031) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_300_1361964166.213") :anon :lex :outer("cuid_301_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2703
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    store_lex "$err", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_304_1361964166.213") :anon :lex :outer("cuid_302_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2718
    .const 'Sub' $P5030 = 'cuid_303_1361964166.213' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_305_1361964166.213' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_306_1361964166.213' 
    capture_lex $P5030 
    .const 'Sub' $P5030 = 'cuid_308_1361964166.213' 
    capture_lex $P5030 
    .lex "@pos_params", $P101 
    .lex "@named_params", $P102 
    .lex "$slurpy_pos", $P103 
    .lex "$slurpy_named", $P104 
    .lex "@sorted_params", $P105 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
.annotate 'line', 2723
    find_lex $P5009, "$block"
    $P5010 = $P5009."params"()
    set $P5006, $P5010
    iter $P5008, $P5010
  for_next1485:
    unless $P5008, for_done1487
    shift $P5012, $P5008
  for_redo1486:
    .const 'Sub' $P5011 = 'cuid_303_1361964166.213' 
    capture_lex $P5011
    $P5006 = $P5011($P5012)
    goto for_next1485
  for_done1487:
    set $P5013, $P101
    iter $P5015, $P101
    new $P5017, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5017, for_handlers1488
    push_eh $P5017
  for_next1489:
    unless $P5015, for_done1491
    shift $P5018, $P5015
  for_redo1490:
    .const 'Sub' $P5016 = 'cuid_305_1361964166.213' 
    capture_lex $P5016
    $P5013 = $P5016($P5018)
    goto for_next1489
  for_handlers1488:
    .get_results ($P5017)
    pop_upto_eh $P5017
    getattribute $P5017, $P5017, 'type'
    eq $P5017, .CONTROL_LOOP_NEXT, for_next1489
    eq $P5017, .CONTROL_LOOP_REDO, for_redo1490
  for_done1491:
    pop_eh 
    unless $P103 goto if796_end1493 
    push $P105, $P103
  if796_end1493:
    set $P5019, $P102
    iter $P5021, $P102
    new $P5023, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5023, for_handlers1494
    push_eh $P5023
  for_next1495:
    unless $P5021, for_done1497
    shift $P5024, $P5021
  for_redo1496:
    .const 'Sub' $P5022 = 'cuid_306_1361964166.213' 
    capture_lex $P5022
    $P5019 = $P5022($P5024)
    goto for_next1495
  for_handlers1494:
    .get_results ($P5023)
    pop_upto_eh $P5023
    getattribute $P5023, $P5023, 'type'
    eq $P5023, .CONTROL_LOOP_NEXT, for_next1495
    eq $P5023, .CONTROL_LOOP_REDO, for_redo1496
  for_done1497:
    pop_eh 
    unless $P104 goto if797_end1499 
    push $P105, $P104
  if797_end1499:
    set $P5025, $P105
    iter $P5027, $P105
  for_next1513:
    unless $P5027, for_done1515
    shift $P5029, $P5027
  for_redo1514:
    .const 'Sub' $P5028 = 'cuid_308_1361964166.213' 
    capture_lex $P5028
    $P5025 = $P5028($P5029)
    goto for_next1513
  for_done1515:
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_303_1361964166.213") :anon :lex :outer("cuid_304_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2723
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2724
    $P5001 = _lex_param_0."slurpy"()
    set $P5003, $P5001
    unless $P5001 goto if793_end1480 
    $P5002 = _lex_param_0."named"()
    set $P5003, $P5002
  if793_end1480:
    unless $P5003 goto if792_else1477 
    store_lex "$slurpy_named", _lex_param_0
    set $P5010, _lex_param_0
    goto if792_end1478
  if792_else1477:
.annotate 'line', 2727
    $P5004 = _lex_param_0."slurpy"()
    unless $P5004 goto if794_else1481 
    store_lex "$slurpy_pos", _lex_param_0
    set $P5009, _lex_param_0
    goto if794_end1482
  if794_else1481:
.annotate 'line', 2730
    $P5005 = _lex_param_0."named"()
    unless $P5005 goto if795_else1483 
    find_lex $P5006, "@named_params"
    push $P5006, _lex_param_0
    set $P5008, $P5006
    goto if795_end1484
  if795_else1483:
.annotate 'line', 2733
    find_lex $P5007, "@pos_params"
    push $P5007, _lex_param_0
    set $P5008, $P5007
  if795_end1484:
    set $P5009, $P5008
  if794_end1482:
    set $P5010, $P5009
  if792_end1478:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_305_1361964166.213") :anon :lex :outer("cuid_304_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@sorted_params"
    push $P5001, _lex_param_0
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_306_1361964166.213") :anon :lex :outer("cuid_304_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "@sorted_params"
    push $P5001, _lex_param_0
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_308_1361964166.213") :anon :lex :outer("cuid_304_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2742
    .param pmc _lex_param_0 
    .const 'Sub' $P5033 = 'cuid_307_1361964166.213' 
    capture_lex $P5033 
    .const 'Sub' $P5033 = 'cuid_310_1361964166.213' 
    capture_lex $P5033 
    .lex "@param", $P101 
    .lex "$reg_type", $P102 
    .lex "$_", _lex_param_0 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    new $P5003, 'ResizablePMCArray'
    box $P5004, ".param"
    push $P5003, $P5004
    set $P101, $P5003
.annotate 'line', 2746
    $P5005 = _lex_param_0."scope"()
    set $S5001, $P5005
    iseq $I5001, $S5001, "local"
    unless $I5001 goto if798_else1500 
.annotate 'line', 2747
    find_lex $P5006, "$block"
    $P5007 = _lex_param_0."name"()
    $P5008 = $P5006."local_type_long"($P5007)
    push $P101, $P5008
.annotate 'line', 2748
    $P5009 = _lex_param_0."name"()
    push $P101, $P5009
.annotate 'line', 2749
    find_lex $P5010, "$block"
    $P5011 = _lex_param_0."name"()
    $P5012 = $P5010."local_type"($P5011)
    set $P102, $P5012
    goto if798_end1501
  if798_else1500:
    .const 'Sub' $P5013 = 'cuid_307_1361964166.213' 
    capture_lex $P5013
    $P5014 = $P5013()
  if798_end1501:
.annotate 'line', 2759
    $P5015 = _lex_param_0."slurpy"()
    unless $P5015 goto if799_else1502 
    box $P5016, ":slurpy"
    push $P101, $P5016
.annotate 'line', 2761
    $P5017 = _lex_param_0."named"()
    set $P5019, $P5017
    unless $P5017 goto if800_end1505 
    box $P5018, ":named"
    push $P101, $P5018
    set $P5019, $P101
  if800_end1505:
    goto if799_end1503
  if799_else1502:
.annotate 'line', 2765
    $P5020 = _lex_param_0."named"()
    set $P5026, $P5020
    unless $P5020 goto if801_end1507 
.annotate 'line', 2766
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    $P5023 = _lex_param_0."named"()
    $P5024 = $P5021."escape"($P5023)
    set $S5004, $P5024
    concat $S5003, ":named(", $S5004
    concat $S5002, $S5003, ")"
    box $P5025, $S5002
    push $P101, $P5025
    set $P5026, $P101
  if801_end1507:
  if799_end1503:
.annotate 'line', 2769
    $P5027 = _lex_param_0."default"()
    unless $P5027 goto if802_else1508 
    .const 'Sub' $P5028 = 'cuid_310_1361964166.213' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5032, $P5029
    goto if802_end1509
  if802_else1508:
.annotate 'line', 2790
.annotate 'line', 2791
    find_lex $P5030, "$decls"
    join $S5005, " ", $P101
    $P5031 = $P5030."push_pirop"($S5005)
    set $P5032, $P5031
  if802_end1509:
    .return ($P5032) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_307_1361964166.213") :anon :lex :outer("cuid_308_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2751
    .lex "$reg", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2752
    find_lex $P5002, "$block"
    find_lex $P5003, "$_"
    $P5004 = $P5003."name"()
    $P5005 = $P5002."lex_reg"($P5004)
    set $P101, $P5005
    find_lex $P5006, "@param"
.annotate 'line', 2753
    find_lex $P5007, "$block"
    find_lex $P5008, "$_"
    $P5009 = $P5008."name"()
    $P5010 = $P5007."lexical_type_long"($P5009)
    push $P5006, $P5010
    find_lex $P5011, "@param"
    push $P5011, $P101
    find_lex $P5012, "%lex_params"
.annotate 'line', 2755
    find_lex $P5013, "$_"
    $P5014 = $P5013."name"()
    set $S5001, $P5014
    set $P5012[$S5001], $P101
.annotate 'line', 2756
    find_lex $P5015, "$block"
    find_lex $P5016, "$_"
    $P5017 = $P5016."name"()
    $P5018 = $P5015."lexical_type"($P5017)
    store_lex "$reg_type", $P5018
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_310_1361964166.213") :anon :lex :outer("cuid_308_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2769
    .const 'Sub' $P5026 = 'cuid_309_1361964166.213' 
    capture_lex $P5026 
    .lex "$o_flag", $P101 
    .lex "$lbl", $P102 
    .lex "$def", $P103 
    .local pmc fb_tmp_231 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    find_lex $P5004, "@param"
    box $P5005, ":optional"
    push $P5004, $P5005
.annotate 'line', 2772
    find_lex $P5006, "$decls"
    find_lex $P5007, "@param"
    join $S5001, " ", $P5007
    $P5006."push_pirop"($S5001)
.annotate 'line', 2775
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 12
    $P5009 = $P5008."unique"("haz_param")
    set $P101, $P5009
.annotate 'line', 2776
    find_lex $P5010, "$decls"
    set $S5004, $P101
    concat $S5003, ".param int ", $S5004
    concat $S5002, $S5003, " :opt_flag"
    $P5010."push_pirop"($S5002)
.annotate 'line', 2779
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5012 = $P5011."new"("default" :named("name"))
    set $P102, $P5012
    .const 'Sub' $P5013 = 'cuid_309_1361964166.213' 
    capture_lex $P5013
    $P5014 = $P5013()
.annotate 'line', 2785
    find_lex $P5015, "$opts"
    $P5015."push_pirop"("if", $P101, $P102)
.annotate 'line', 2786
    find_lex $P5016, "$opts"
    $P5016."push"($P103)
.annotate 'line', 2787
    find_lex $P5017, "$opts"
    find_lex $P5018, "@param"
    set fb_tmp_231, $P5018
    repr_defined $I5001, fb_tmp_231
    unless $I5001 goto if803_else1510 
    set $P5019, fb_tmp_231[2]
    set $P5021, $P5019
    goto if803_end1511
  if803_else1510:
    null $P5020
    set $P5021, $P5020
  if803_end1511:
    unless_null $P5021, vivi_8041512
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5021, $P5022
  vivi_8041512:
    $P5023 = $P103."result"()
    $P5017."push_pirop"("set", $P5021, $P5023)
.annotate 'line', 2788
    find_lex $P5024, "$opts"
    $P5025 = $P5024."push"($P102)
    .return ($P5025) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_309_1361964166.213") :anon :lex :outer("cuid_310_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2781
    .lex "$*BLOCK", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_lex $P5002, "$block"
    set $P101, $P5002
.annotate 'line', 2783
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$_"
    $P5006 = $P5005."default"()
    find_lex $P5007, "$reg_type"
    $P5008 = $P5003."as_post"($P5006, $P5007 :named("want"))
    store_lex "$def", $P5008
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_311_1361964166.213") :anon :lex :outer("cuid_302_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2798
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2799
    find_lex $P5001, "$decls"
    find_lex $P5002, "$cap_lex_reg"
    set $S5005, $P5002
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    set $S5006, _lex_param_0
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5001."push_pirop"($S5001)
.annotate 'line', 2800
    find_lex $P5003, "$decls"
    find_lex $P5004, "$cap_lex_reg"
    set $S5008, $P5004
    concat $S5007, "capture_lex ", $S5008
    $P5005 = $P5003."push_pirop"($S5007)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_312_1361964166.213") :anon :lex :outer("cuid_302_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2804
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2805
    find_lex $P5001, "$decls"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = _lex_param_0."name"()
    $P5005 = $P5002."escape"($P5004)
    set $S5004, $P5005
    concat $S5003, ".lex ", $S5004
    concat $S5002, $S5003, ", "
    find_lex $P5006, "$block"
    $P5007 = _lex_param_0."name"()
    $P5008 = $P5006."lex_reg"($P5007)
    set $S5005, $P5008
    concat $S5001, $S5002, $S5005
    $P5009 = $P5001."push_pirop"($S5001)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_313_1361964166.213") :anon :lex :outer("cuid_302_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2807
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2808
    find_lex $P5001, "$decls"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = _lex_param_0."key"()
    $P5005 = $P5002."escape"($P5004)
    set $S5004, $P5005
    concat $S5003, ".lex ", $S5004
    concat $S5002, $S5003, ", "
    $P5006 = _lex_param_0."value"()
    set $S5005, $P5006
    concat $S5001, $S5002, $S5005
    $P5007 = $P5001."push_pirop"($S5001)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_314_1361964166.213") :anon :lex :outer("cuid_302_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2810
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
.annotate 'line', 2811
    find_lex $P5001, "$decls"
    find_lex $P5002, "$block"
    $P5003 = _lex_param_0."name"()
    $P5004 = $P5002."local_type_long"($P5003)
    set $S5004, $P5004
    concat $S5003, ".local ", $S5004
    concat $S5002, $S5003, " "
    $P5005 = _lex_param_0."name"()
    set $S5005, $P5005
    concat $S5001, $S5002, $S5005
    $P5006 = $P5001."push_pirop"($S5001)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_316_1361964166.213") :anon :lex :outer("cuid_302_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2827
    .const 'Sub' $P5029 = 'cuid_315_1361964166.213' 
    capture_lex $P5029 
    .lex "$*BLOCK", $P101 
    .lex "$ret_type", $P102 
    .local pmc fb_tmp_234 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    find_lex $P5003, "$block"
    set $P101, $P5003
    box $P5004, "P"
    set $P102, $P5004
    new $P5010, 'ExceptionHandler'
    set_label $P5010, catch_handler_8151543
    $P5010.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5010
.annotate 'line', 2830
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    find_lex $P5007, "$stmts"
    $P5008 = $P5007."result"()
    $P5009 = $P5005."infer_type"($P5008)
    set $P102, $P5009
    set $P5011, $P102
    pop_eh 
    goto skip_handler_8141542
  catch_handler_8151543:
    .get_results ($P5010) 
    set $I10001, 1
    set $P5010["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5010
    pop_upto_eh $P5010
    pop_eh 
    set $P5011, $P10001
    goto skip_handler_8141542
  skip_handler_8141542:
    set $S5001, $P102
    isne $I5001, $S5001, "P"
    box $P5019, $I5001
    set $P5018, $P5019
    unless $I5001 goto if817_end1547 
    find_lex $P5012, "%hll_force_return_boxing"
    set fb_tmp_234, $P5012
    repr_defined $I5002, fb_tmp_234
    unless $I5002 goto if818_else1548 
    find_lex $P5014, "$hll"
    set $S5002, $P5014
    set $P5013, fb_tmp_234[$S5002]
    set $P5016, $P5013
    goto if818_end1549
  if818_else1548:
    null $P5015
    set $P5016, $P5015
  if818_end1549:
    unless_null $P5016, vivi_8191550
    nqp_get_sc_object $P5017, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5016, $P5017
  vivi_8191550:
    set $P5018, $P5016
  if817_end1547:
    unless $P5018 goto if816_else1544 
    .const 'Sub' $P5020 = 'cuid_315_1361964166.213' 
    capture_lex $P5020
    $P5021 = $P5020()
    set $P5028, $P5021
    goto if816_end1545
  if816_else1544:
.annotate 'line', 2836
.annotate 'line', 2837
    find_lex $P5022, "$sub"
    find_lex $P5023, "$stmts"
    $P5022."push"($P5023)
.annotate 'line', 2838
    find_lex $P5024, "$sub"
    find_lex $P5025, "$stmts"
    $P5026 = $P5025."result"()
    set $S5005, $P5026
    concat $S5004, ".return (", $S5005
    concat $S5003, $S5004, ")"
    $P5027 = $P5024."push_pirop"($S5003)
    set $P5028, $P5027
  if816_end1545:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_315_1361964166.213") :anon :lex :outer("cuid_316_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2831
    .lex "$boxed", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2832
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$stmts"
    $P5005 = $P5002."coerce"($P5004, "P")
    set $P101, $P5005
.annotate 'line', 2833
    find_lex $P5006, "$sub"
    $P5006."push"($P101)
.annotate 'line', 2834
    find_lex $P5007, "$sub"
    $P5008 = $P101."result"()
    set $S5003, $P5008
    concat $S5002, ".return (", $S5003
    concat $S5001, $S5002, ")"
    $P5009 = $P5007."push_pirop"($S5001)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_318_1361964166.213") :anon :lex :outer("cuid_96_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2872
    .const 'Sub' $P5061 = 'cuid_317_1361964166.213' 
    capture_lex $P5061 
    .lex "$breg", $P101 
    .lex "$rtype", $P102 
    .lex "$rreg", $P103 
    .lex "$im_arg", $P104 
    .local pmc fb_tmp_237 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local pmc fb_tmp_240 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    new $P5016, 'ExceptionHandler'
    set_label $P5016, catch_handler_8371579
    $P5016.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5016
.annotate 'line', 2874
    find_dynamic_lex $P5005, "@*INNERS"
    unless_null $P5005, fallback1573
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_5, $P5006
    set fb_tmp_237, pkg_viv_tmp_5
    repr_defined $I5001, fb_tmp_237
    unless $I5001 goto if833_else1574 
    set $P5008, fb_tmp_237["@INNERS"]
    set $P5010, $P5008
    goto if833_end1575
  if833_else1574:
    null $P5009
    set $P5010, $P5009
  if833_end1575:
    unless_null $P5010, vivi_8341576
    new $P5011, 'ResizablePMCArray'
    set pkg_viv_tmp_5["@INNERS"], $P5011
    set $P5010, $P5011
  vivi_8341576:
    unless_null $P5010, vivi_8351577
    die "Contextual @*INNERS not found"
    box $P5012, "Contextual @*INNERS not found"
    set $P5010, $P5012
  vivi_8351577:
    set $P5005, $P5010
  fallback1573:
    find_lex $P5013, "$node"
    $P5014 = $P5013."cuid"()
    $P5015 = $P5005."push"($P5014)
    set $P5017, $P5015
    pop_eh 
    goto skip_handler_8361578
  catch_handler_8371579:
    .get_results ($P5016) 
    set $I10001, 1
    set $P5016["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5016
    pop_upto_eh $P5016
    pop_eh 
    set $P5017, $P10001
    goto skip_handler_8361578
  skip_handler_8361578:
.annotate 'line', 2875
    find_dynamic_lex $P5018, "$*REGALLOC"
    unless_null $P5018, fallback1580
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5019, $P5020
    set fb_tmp_238, $P5019
    repr_defined $I5002, fb_tmp_238
    unless $I5002 goto if838_else1581 
    set $P5021, fb_tmp_238["$REGALLOC"]
    set $P5023, $P5021
    goto if838_end1582
  if838_else1581:
    null $P5022
    set $P5023, $P5022
  if838_end1582:
    unless_null $P5023, vivi_8391583
    nqp_get_sc_object $P5024, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5023, $P5024
  vivi_8391583:
    unless_null $P5023, vivi_8401584
    die "Contextual $*REGALLOC not found"
    box $P5025, "Contextual $*REGALLOC not found"
    set $P5023, $P5025
  vivi_8401584:
    set $P5018, $P5023
  fallback1580:
    $P5026 = $P5018."fresh_p"()
    set $P101, $P5026
.annotate 'line', 2876
    find_lex $P5027, "$ops"
    set $S5005, $P101
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    find_lex $P5028, "$node"
    $P5029 = $P5028."cuid"()
    set $S5006, $P5029
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5027."push_pirop"($S5001)
.annotate 'line', 2877
    find_lex $P5030, "$ops"
    $P5030."push_pirop"("capture_lex", $P101)
.annotate 'line', 2880
    find_lex $P5031, "$node"
    $P5032 = $P5031."returns"()
    $P5033 = "&type_to_register_type"($P5032)
    set $S5008, $P5033
    downcase $S5007, $S5008
    box $P5034, $S5007
    set $P102, $P5034
.annotate 'line', 2881
    find_dynamic_lex $P5035, "$*REGALLOC"
    unless_null $P5035, fallback1585
    nqp_get_sc_object $P5037, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5036, $P5037
    set fb_tmp_239, $P5036
    repr_defined $I5003, fb_tmp_239
    unless $I5003 goto if841_else1586 
    set $P5038, fb_tmp_239["$REGALLOC"]
    set $P5040, $P5038
    goto if841_end1587
  if841_else1586:
    null $P5039
    set $P5040, $P5039
  if841_end1587:
    unless_null $P5040, vivi_8421588
    nqp_get_sc_object $P5041, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5040, $P5041
  vivi_8421588:
    unless_null $P5040, vivi_8431589
    die "Contextual $*REGALLOC not found"
    box $P5042, "Contextual $*REGALLOC not found"
    set $P5040, $P5042
  vivi_8431589:
    set $P5035, $P5040
  fallback1585:
    set $S5010, $P102
    concat $S5009, "fresh_", $S5010
    $P5043 = $P5035.$S5009()
    set $P103, $P5043
    box $P5044, 0
    set $P104, $P5044
    new $P5053, 'ExceptionHandler'
    set_label $P5053, catch_handler_8481596
    $P5053.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5053
    find_dynamic_lex $P5045, "$*HAVE_IMM_ARG"
    unless_null $P5045, fallback1590
    nqp_get_sc_object $P5047, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5046, $P5047
    set fb_tmp_240, $P5046
    repr_defined $I5004, fb_tmp_240
    unless $I5004 goto if844_else1591 
    set $P5048, fb_tmp_240["$HAVE_IMM_ARG"]
    set $P5050, $P5048
    goto if844_end1592
  if844_else1591:
    null $P5049
    set $P5050, $P5049
  if844_end1592:
    unless_null $P5050, vivi_8451593
    nqp_get_sc_object $P5051, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5050, $P5051
  vivi_8451593:
    unless_null $P5050, vivi_8461594
    die "Contextual $*HAVE_IMM_ARG not found"
    box $P5052, "Contextual $*HAVE_IMM_ARG not found"
    set $P5050, $P5052
  vivi_8461594:
    set $P5045, $P5050
  fallback1590:
    set $P104, $P5045
    set $P5054, $P104
    pop_eh 
    goto skip_handler_8471595
  catch_handler_8481596:
    .get_results ($P5053) 
    set $I10001, 1
    set $P5053["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5053
    pop_upto_eh $P5053
    pop_eh 
    set $P5054, $P10001
    goto skip_handler_8471595
  skip_handler_8471595:
    unless $P104 goto if849_else1597 
.annotate 'line', 2887
    .const 'Sub' $P5056 = 'cuid_317_1361964166.213' 
    capture_lex $P5056
    newclosure $P5055, $P5056
    store_dynamic_lex "$*IMM_ARG", $P5055
    goto if849_end1598
  if849_else1597:
.annotate 'line', 2892
.annotate 'line', 2893
    find_lex $P5057, "$ops"
    $P5058 = $P5057."push_pirop"("call", $P101, $P103 :named("result"))
  if849_end1598:
.annotate 'line', 2895
    find_lex $P5059, "$ops"
    $P5060 = $P5059."result"($P103)
    .return ($P5060) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_317_1361964166.213") :anon :lex :outer("cuid_318_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2888
    .param pmc _lex_param_0 
    .lex "$arg", _lex_param_0 
.annotate 'line', 2889
    find_lex $P5001, "$ops"
    find_lex $P5002, "$breg"
    find_lex $P5003, "$rreg"
    $P5004 = $P5001."push_pirop"("call", $P5002, _lex_param_0, $P5003 :named("result"))
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_319_1361964166.213") :anon :lex :outer("cuid_96_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2897
    .lex "$breg", $P101 
    .local pmc fb_tmp_241 
    .local pmc pkg_viv_tmp_6 
    .local pmc fb_tmp_242 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5013, 'ExceptionHandler'
    set_label $P5013, catch_handler_8561609
    $P5013.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5013
.annotate 'line', 2899
    find_dynamic_lex $P5002, "@*INNERS"
    unless_null $P5002, fallback1603
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set pkg_viv_tmp_6, $P5003
    set fb_tmp_241, pkg_viv_tmp_6
    repr_defined $I5001, fb_tmp_241
    unless $I5001 goto if852_else1604 
    set $P5005, fb_tmp_241["@INNERS"]
    set $P5007, $P5005
    goto if852_end1605
  if852_else1604:
    null $P5006
    set $P5007, $P5006
  if852_end1605:
    unless_null $P5007, vivi_8531606
    new $P5008, 'ResizablePMCArray'
    set pkg_viv_tmp_6["@INNERS"], $P5008
    set $P5007, $P5008
  vivi_8531606:
    unless_null $P5007, vivi_8541607
    die "Contextual @*INNERS not found"
    box $P5009, "Contextual @*INNERS not found"
    set $P5007, $P5009
  vivi_8541607:
    set $P5002, $P5007
  fallback1603:
    find_lex $P5010, "$node"
    $P5011 = $P5010."cuid"()
    $P5012 = $P5002."push"($P5011)
    set $P5014, $P5012
    pop_eh 
    goto skip_handler_8551608
  catch_handler_8561609:
    .get_results ($P5013) 
    set $I10001, 1
    set $P5013["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5013
    pop_upto_eh $P5013
    pop_eh 
    set $P5014, $P10001
    goto skip_handler_8551608
  skip_handler_8551608:
.annotate 'line', 2900
    find_dynamic_lex $P5015, "$*REGALLOC"
    unless_null $P5015, fallback1610
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5016, $P5017
    set fb_tmp_242, $P5016
    repr_defined $I5002, fb_tmp_242
    unless $I5002 goto if857_else1611 
    set $P5018, fb_tmp_242["$REGALLOC"]
    set $P5020, $P5018
    goto if857_end1612
  if857_else1611:
    null $P5019
    set $P5020, $P5019
  if857_end1612:
    unless_null $P5020, vivi_8581613
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_8581613:
    unless_null $P5020, vivi_8591614
    die "Contextual $*REGALLOC not found"
    box $P5022, "Contextual $*REGALLOC not found"
    set $P5020, $P5022
  vivi_8591614:
    set $P5015, $P5020
  fallback1610:
    $P5023 = $P5015."fresh_p"()
    set $P101, $P5023
.annotate 'line', 2901
    find_lex $P5024, "$ops"
    set $S5005, $P101
    concat $S5004, ".const 'Sub' ", $S5005
    concat $S5003, $S5004, " = '"
    find_lex $P5025, "$node"
    $P5026 = $P5025."cuid"()
    set $S5006, $P5026
    concat $S5002, $S5003, $S5006
    concat $S5001, $S5002, "'"
    $P5024."push_pirop"($S5001)
.annotate 'line', 2902
    find_lex $P5027, "$ops"
    $P5027."push_pirop"("capture_lex", $P101)
.annotate 'line', 2903
    find_lex $P5028, "$ops"
    $P5029 = $P5028."result"($P101)
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_97_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2908
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_17 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_17, default1616
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5006
  default1616:
.annotate 'line', 2909
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = _lex_param_1."list"()
    $P5003 = _lex_param_1."resultchild"()
    $P5004 = _lex_param_1."node"()
    $P5005 = $P5001."compile_all_the_stmts"($P5002, $P5003, $P5004 :named("node"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_98_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2912
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_18 :opt_flag 
    .const 'Sub' $P5013 = 'cuid_320_1361964166.213' 
    capture_lex $P5013 
    .lex "$orig_reg", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_243 
    if haz_param_18, default1622
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5012
  default1622:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback1617
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_243, $P5003
    repr_defined $I5001, fb_tmp_243
    unless $I5001 goto if860_else1618 
    set $P5005, fb_tmp_243["$REGALLOC"]
    set $P5007, $P5005
    goto if860_end1619
  if860_else1618:
    null $P5006
    set $P5007, $P5006
  if860_end1619:
    unless_null $P5007, vivi_8611620
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_8611620:
    unless_null $P5007, vivi_8621621
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_8621621:
    set $P5002, $P5007
  fallback1617:
    set $P101, $P5002
    .const 'Sub' $P5010 = 'cuid_320_1361964166.213' 
    capture_lex $P5010
    $P5011 = $P5010()
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_320_1361964166.213") :anon :lex :outer("cuid_98_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2914
    .lex "$*REGALLOC", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2915
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    find_lex $P5003, "$orig_reg"
    $P5004 = $P5002."new"($P5003)
    set $P101, $P5004
.annotate 'line', 2916
    find_lex $P5006, "self"
    nqp_decontainerize $P5005, $P5006
    find_lex $P5007, "$node"
    $P5008 = $P5007."list"()
    find_lex $P5009, "$node"
    $P5010 = $P5009."resultchild"()
    find_lex $P5011, "$node"
    $P5012 = $P5011."node"()
    $P5013 = $P5005."compile_all_the_stmts"($P5008, $P5010, $P5012 :named("node"))
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "compile_all_the_stmts" :subid("cuid_99_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2920
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :optional 
    .param int haz_param_19 :opt_flag 
    .param pmc _lex_param_3 :named("node") :optional 
    .param int haz_param_20 :opt_flag 
    .const 'Sub' $P5024 = 'cuid_321_1361964166.213' 
    capture_lex $P5024 
    .lex "$last", $P101 
    .lex "$ops", $P102 
    .lex "$i", $I101 
    .lex "$n", $I102 
    .lex "$all_void", $P103 
    .lex "self", _lex_param_0 
    .lex "@stmts", _lex_param_1 
    .lex "$resultchild", _lex_param_2 
    .lex "$node", _lex_param_3 
    .local pmc fb_tmp_244 
    if haz_param_19, default1647
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5022
  default1647:
    if haz_param_20, default1648
    nqp_get_sc_object $P5023, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_3, $P5023
  default1648:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    set $I101, 0
    set $I102, 0
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 2922
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5005 = $P5004."new"()
    set $P102, $P5005
    unless _lex_param_3 goto if863_end1624 
.annotate 'line', 2923
    $P5006 = $P102."node"(_lex_param_3)
  if863_end1624:
    set $I101, 0
    set $N5001, _lex_param_1
    set $I5001, $N5001
    set $I102, $I5001
    find_dynamic_lex $P5007, "$*WANT"
    unless_null $P5007, fallback1625
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set fb_tmp_244, $P5008
    repr_defined $I5003, fb_tmp_244
    unless $I5003 goto if864_else1626 
    set $P5010, fb_tmp_244["$WANT"]
    set $P5012, $P5010
    goto if864_end1627
  if864_else1626:
    null $P5011
    set $P5012, $P5011
  if864_end1627:
    unless_null $P5012, vivi_8651628
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_8651628:
    unless_null $P5012, vivi_8661629
    die "Contextual $*WANT not found"
    box $P5014, "Contextual $*WANT not found"
    set $P5012, $P5014
  vivi_8661629:
    set $P5007, $P5012
  fallback1625:
    set $S5001, $P5007
    iseq $I5002, $S5001, "v"
    box $P5015, $I5002
    set $P103, $P5015
    defined $I5004, _lex_param_2
    if $I5004 goto unless867_end1631 
.annotate 'line', 2927
    set $N5003, $I102
    set $N5004, 1
    sub $N5002, $N5003, $N5004
    box $P5016, $N5002
    set _lex_param_2, $P5016
  unless867_end1631:
    set $P5017, _lex_param_1
    iter $P5019, _lex_param_1
  for_next1644:
    unless $P5019, for_done1646
    shift $P5021, $P5019
  for_redo1645:
    .const 'Sub' $P5020 = 'cuid_321_1361964166.213' 
    capture_lex $P5020
    $P5017 = $P5020($P5021)
    goto for_next1644
  for_done1646:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_321_1361964166.213") :anon :lex :outer("cuid_99_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2930
    .param pmc _lex_param_0 
    .lex "$void", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_lex $P5002, "$all_void"
    set $P5004, $P5002
    if $P5002 goto unless868_end1633 
    find_lex $I5002, "$i"
    set $N5001, $I5002
    find_lex $P5003, "$resultchild"
    set $N5002, $P5003
    isne $I5001, $N5001, $N5002
    box $P5005, $I5001
    set $P5004, $P5005
  unless868_end1633:
    set $P101, $P5004
    unless $P101 goto if869_else1634 
.annotate 'line', 2932
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 66
    type_check $I5003, _lex_param_0, $P5006
    unless $I5003 goto if870_end1637 
.annotate 'line', 2933
.annotate 'line', 2934
    $P5007 = "&want"(_lex_param_0, "v")
    set _lex_param_0, $P5007
  if870_end1637:
.annotate 'line', 2936
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    $P5010 = $P5008."as_post"(_lex_param_0, "v" :named("want"))
    store_lex "$last", $P5010
    goto if869_end1635
  if869_else1634:
.annotate 'line', 2938
.annotate 'line', 2939
    find_lex $P5012, "self"
    nqp_decontainerize $P5011, $P5012
    $P5013 = $P5011."as_post"(_lex_param_0)
    store_lex "$last", $P5013
  if869_end1635:
    set $P5015, $P101
    unless $P101 goto if872_end1641 
    nqp_get_sc_object $P5014, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    type_check $I5004, _lex_param_0, $P5014
    box $P5016, $I5004
    set $P5015, $P5016
  if872_end1641:
    if $P5015 goto unless871_end1639 
.annotate 'line', 2941
    find_lex $P5017, "$ops"
    find_lex $P5018, "$last"
    $P5019 = $P5017."push"($P5018)
  unless871_end1639:
    find_lex $P5020, "$resultchild"
    set $N5003, $P5020
    find_lex $I5006, "$i"
    set $N5004, $I5006
    iseq $I5005, $N5003, $N5004
    unless $I5005 goto if873_end1643 
.annotate 'line', 2943
.annotate 'line', 2944
    find_lex $P5021, "$ops"
    find_lex $P5022, "$last"
    $P5023 = $P5022."result"()
    $P5024 = $P5021."result"($P5023)
  if873_end1643:
    find_lex $I5007, "$i"
    set $N5006, $I5007
    set $N5007, 1
    add $N5005, $N5006, $N5007
    set $I5008, $N5005
    store_lex "$i", $I5008
    .return ($I5008) 
.end
.HLL "nqp"
.namespace []
.sub "apply_context" :subid("cuid_100_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2951
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$type", _lex_param_2 
    nqp_get_sc_object $P5001, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 66
    type_check $I5001, _lex_param_1, $P5001
    unless $I5001 goto if874_else1649 
.annotate 'line', 2953
    $P5002 = "&want"(_lex_param_1, _lex_param_2)
    set $P5003, $P5002
    goto if874_end1650
  if874_else1649:
    set $P5003, _lex_param_1
  if874_end1650:
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_101_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2968
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_21 :opt_flag 
    .const 'Sub' $P5026 = 'cuid_322_1361964166.213' 
    capture_lex $P5026 
    .lex "$hll", $P101 
    .lex "$result", $P102 
    .lex "$err", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_245 
    if haz_param_21, default1664
    nqp_get_sc_object $P5025, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5025
  default1664:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    box $P5004, ""
    set $P101, $P5004
    new $P5013, 'ExceptionHandler'
    set_label $P5013, catch_handler_8791657
    $P5013.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5013
    find_dynamic_lex $P5005, "$*HLL"
    unless_null $P5005, fallback1651
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set fb_tmp_245, $P5006
    repr_defined $I5001, fb_tmp_245
    unless $I5001 goto if875_else1652 
    set $P5008, fb_tmp_245["$HLL"]
    set $P5010, $P5008
    goto if875_end1653
  if875_else1652:
    null $P5009
    set $P5010, $P5009
  if875_end1653:
    unless_null $P5010, vivi_8761654
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_8761654:
    unless_null $P5010, vivi_8771655
    die "Contextual $*HLL not found"
    box $P5012, "Contextual $*HLL not found"
    set $P5010, $P5012
  vivi_8771655:
    set $P5005, $P5010
  fallback1651:
    set $P101, $P5005
    set $P5014, $P101
    pop_eh 
    goto skip_handler_8781656
  catch_handler_8791657:
    .get_results ($P5013) 
    set $I10001, 1
    set $P5013["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5013
    pop_upto_eh $P5013
    pop_eh 
    set $P5014, $P10001
    goto skip_handler_8781656
  skip_handler_8781656:
    new $P5021, 'ExceptionHandler'
    set_label $P5021, catch_handler_8831661
    $P5021.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5021
.annotate 'line', 2973
    new $P5019, 'ExceptionHandler'
    set_label $P5019, catch_handler_8811659
    $P5019.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5019
.annotate 'line', 2974
    nqp_get_sc_object $P5015, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    nqp_decontainerize $P5016, _lex_param_0
    $P5017 = $P5015."compile_op"($P5016, $P101, _lex_param_1)
    set $P102, $P5017
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5018
    pop_eh 
    goto skip_handler_8801658
  catch_handler_8811659:
    .get_results ($P5019) 
    .const 'Sub' $P10001 = 'cuid_322_1361964166.213' 
    capture_lex $P10001
    $P10001($P5019)
    set $I10001, 1
    set $P5019["handled"], $I10001
    nqp_get_sc_object $P10002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5019
    pop_upto_eh $P5019
    pop_eh 
    set $P5020, $P10002
    goto skip_handler_8801658
  skip_handler_8801658:
    set $P5022, $P5020
    pop_eh 
    goto skip_handler_8821660
  catch_handler_8831661:
    .get_results ($P5021) 
    set $I10001, 1
    set $P5021["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5021
    pop_upto_eh $P5021
    pop_eh 
    set $P5022, $P10001
    goto skip_handler_8821660
  skip_handler_8821660:
    unless $P103 goto if884_end1663 
.annotate 'line', 2977
.annotate 'line', 2978
    $P5023 = _lex_param_1."op"()
    set $S5003, $P5023
    concat $S5002, "Error while compiling op ", $S5003
    set $S5005, $P103
    concat $S5004, ": ", $S5005
    concat $S5001, $S5002, $S5004
    box $P5024, $S5001
    die $P5024
  if884_end1663:
    .return ($P102) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_322_1361964166.213") :anon :lex :outer("cuid_101_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2975
    .param pmc _lex_param_0 
    .lex "$!", $P101 
    .lex "$_", _lex_param_0 
    set $P101, _lex_param_0
    store_lex "$err", $P101
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_102_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2983
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_22 :opt_flag 
    .const 'Sub' $P5038 = 'cuid_324_1361964166.213' 
    capture_lex $P5038 
    .const 'Sub' $P5038 = 'cuid_325_1361964166.213' 
    capture_lex $P5038 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_247 
    if haz_param_22, default1693
    nqp_get_sc_object $P5037, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5037
  default1693:
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_1665
    .lex "RETURN", $P101
.annotate 'line', 2984
    $P5001 = _lex_param_1."supports"("parrot")
    unless $P5001 goto if885_else1667 
.annotate 'line', 2985
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = _lex_param_1."alternative"("parrot")
    $P5005 = $P5003."as_post"($P5004)
    find_lex $P5002, "RETURN"
    $P5006 = $P5002($P5005)
    set $P5036, $P5006
    goto if885_end1668
  if885_else1667:
.annotate 'line', 2987
    $P5007 = _lex_param_1."supports"("pirop")
    unless $P5007 goto if886_else1669 
.annotate 'line', 2988
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = _lex_param_1."alternative"("pirop")
    $P5011 = _lex_param_1."list"()
    $P5012 = $P5008."compile_pirop"($P5009, $P5010, $P5011)
    set $P5035, $P5012
    goto if886_end1670
  if886_else1669:
.annotate 'line', 2990
    $P5013 = _lex_param_1."supports"("pir")
    unless $P5013 goto if887_else1671 
    .const 'Sub' $P5014 = 'cuid_324_1361964166.213' 
    capture_lex $P5014
    $P5015 = $P5014()
    set $P5034, $P5015
    goto if887_end1672
  if887_else1671:
.annotate 'line', 3004
    $P5016 = _lex_param_1."supports"("pirconst")
    unless $P5016 goto if893_else1682 
    .const 'Sub' $P5017 = 'cuid_325_1361964166.213' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5033, $P5018
    goto if893_end1683
  if893_else1682:
.annotate 'line', 3011
    $P5019 = _lex_param_1."supports"("loadlibs")
    unless $P5019 goto if895_else1686 
.annotate 'line', 3012
    find_dynamic_lex $P5020, "$*BLOCK"
    unless_null $P5020, fallback1688
    nqp_get_sc_object $P5022, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5021, $P5022
    set fb_tmp_247, $P5021
    repr_defined $I5001, fb_tmp_247
    unless $I5001 goto if896_else1689 
    set $P5023, fb_tmp_247["$BLOCK"]
    set $P5025, $P5023
    goto if896_end1690
  if896_else1689:
    null $P5024
    set $P5025, $P5024
  if896_end1690:
    unless_null $P5025, vivi_8971691
    nqp_get_sc_object $P5026, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5025, $P5026
  vivi_8971691:
    unless_null $P5025, vivi_8981692
    die "Contextual $*BLOCK not found"
    box $P5027, "Contextual $*BLOCK not found"
    set $P5025, $P5027
  vivi_8981692:
    set $P5020, $P5025
  fallback1688:
    $P5028 = _lex_param_1."alternative"("loadlibs")
    $P5020."add_loadlibs"($P5028)
.annotate 'line', 3013
    nqp_get_sc_object $P5029, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5030 = $P5029."new"()
    set $P5032, $P5030
    goto if895_end1687
  if895_else1686:
.annotate 'line', 3015
    box $P5031, "To compile on the Parrot backend, QAST::VM must have an alternative 'parrot', 'pirop', 'pir', 'pircosnt' or 'loadlibs'"
    die $P5031
    set $P5032, $P5031
  if895_end1687:
    set $P5033, $P5032
  if893_end1683:
    set $P5034, $P5033
  if887_end1672:
    set $P5035, $P5034
  if886_end1670:
    set $P5036, $P5035
  if885_end1668:
    goto lexotic_1666
  lexotic_1665:
    .get_results ($P5036)
  lexotic_1666:
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_324_1361964166.213") :anon :lex :outer("cuid_102_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2990
    .const 'Sub' $P5017 = 'cuid_323_1361964166.213' 
    capture_lex $P5017 
    .lex "$ops", $P101 
    .lex "$pir", $P102 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 2991
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 2992
    find_lex $P5005, "$node"
    $P5006 = $P5005."node"()
    unless $P5006 goto if888_end1674 
    find_lex $P5007, "$node"
    $P5008 = $P5007."node"()
    $P5009 = $P101."node"($P5008)
  if888_end1674:
.annotate 'line', 2993
    find_lex $P5010, "$node"
    $P5011 = $P5010."alternative"("pir")
    set $P102, $P5011
    set $S5001, $P102
    index $I5002, $S5001, "%r", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    unless $I5001 goto if889_else1675 
    .const 'Sub' $P5012 = 'cuid_323_1361964166.213' 
    capture_lex $P5012
    $P5013 = $P5012()
    goto if889_end1676
  if889_else1675:
.annotate 'line', 2999
.annotate 'line', 3000
    $P5014 = $P101."push_pirop"("inline", $P102)
  if889_end1676:
    find_lex $P5015, "RETURN"
    $P5016 = $P5015($P101)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_323_1361964166.213") :anon :lex :outer("cuid_324_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 2994
    .lex "$reg", $P101 
    .local pmc fb_tmp_246 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 2995
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback1677
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_246, $P5003
    repr_defined $I5001, fb_tmp_246
    unless $I5001 goto if890_else1678 
    set $P5005, fb_tmp_246["$REGALLOC"]
    set $P5007, $P5005
    goto if890_end1679
  if890_else1678:
    null $P5006
    set $P5007, $P5006
  if890_end1679:
    unless_null $P5007, vivi_8911680
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_8911680:
    unless_null $P5007, vivi_8921681
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_8921681:
    set $P5002, $P5007
  fallback1677:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 2996
    find_lex $P5011, "$ops"
    find_lex $P5012, "$pir"
    $P5011."push_pirop"("inline", $P5012, $P101 :named("result"))
.annotate 'line', 2997
    find_lex $P5013, "$ops"
    $P5014 = $P5013."result"($P101)
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_325_1361964166.213") :anon :lex :outer("cuid_102_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3004
    .lex "$ops", $P101 
    .lex "$name", $P102 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 3005
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3006
    find_lex $P5005, "$node"
    $P5006 = $P5005."node"()
    unless $P5006 goto if894_end1685 
    find_lex $P5007, "$node"
    $P5008 = $P5007."node"()
    $P5009 = $P101."node"($P5008)
  if894_end1685:
.annotate 'line', 3007
    find_lex $P5010, "$node"
    $P5011 = $P5010."alternative"("pirconst")
    set $P102, $P5011
.annotate 'line', 3008
    set $S5002, $P102
    concat $S5001, ".", $S5002
    $P101."result"($S5001)
    find_lex $P5012, "RETURN"
    $P5013 = $P5012($P101)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_103_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3020
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_23 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_23, default1694
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5003
  default1694:
.annotate 'line', 3021
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."compile_var"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_104_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3024
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_24 :opt_flag 
    .const 'Sub' $P5020 = 'cuid_327_1361964166.213' 
    capture_lex $P5020 
    .const 'Sub' $P5020 = 'cuid_328_1361964166.213' 
    capture_lex $P5020 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_248 
    if haz_param_24, default1714
    nqp_get_sc_object $P5019, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5019
  default1714:
    find_dynamic_lex $P5001, "$*BINDVAL"
    unless_null $P5001, fallback1697
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5002, $P5003
    set fb_tmp_248, $P5002
    repr_defined $I5001, fb_tmp_248
    unless $I5001 goto if900_else1698 
    set $P5004, fb_tmp_248["$BINDVAL"]
    set $P5006, $P5004
    goto if900_end1699
  if900_else1698:
    null $P5005
    set $P5006, $P5005
  if900_end1699:
    unless_null $P5006, vivi_9011700
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_9011700:
    unless_null $P5006, vivi_9021701
    die "Contextual $*BINDVAL not found"
    box $P5008, "Contextual $*BINDVAL not found"
    set $P5006, $P5008
  vivi_9021701:
    set $P5001, $P5006
  fallback1697:
    unless $P5001 goto if899_else1695 
.annotate 'line', 3025
.annotate 'line', 3026
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."compile_var"(_lex_param_1)
    set $P5018, $P5010
    goto if899_end1696
  if899_else1695:
.annotate 'line', 3028
    $P5011 = _lex_param_1."scope"()
    set $S5001, $P5011
    isne $I5002, $S5001, "positional"
    set $I5004, $I5002
    unless $I5002 goto if904_end1705 
    $P5012 = _lex_param_1."scope"()
    set $S5002, $P5012
    isne $I5003, $S5002, "associative"
    set $I5004, $I5003
  if904_end1705:
    unless $I5004 goto if903_else1702 
    .const 'Sub' $P5013 = 'cuid_327_1361964166.213' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5017, $P5014
    goto if903_end1703
  if903_else1702:
    .const 'Sub' $P5015 = 'cuid_328_1361964166.213' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5017, $P5016
  if903_end1703:
    set $P5018, $P5017
  if899_end1696:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_327_1361964166.213") :anon :lex :outer("cuid_104_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3028
    .const 'Sub' $P5017 = 'cuid_326_1361964166.213' 
    capture_lex $P5017 
    .lex "$post", $P101 
    .lex "$lbl", $P102 
    .lex "$result", $P103 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 3029
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    find_lex $P5006, "$node"
    $P5007 = $P5004."compile_var"($P5006)
    set $P101, $P5007
.annotate 'line', 3030
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5009 = $P5008."new"("fallback" :named("name"))
    set $P102, $P5009
.annotate 'line', 3031
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5011 = $P5010."new"($P101 :named("result"))
    set $P103, $P5011
.annotate 'line', 3032
    $P103."push"($P101)
.annotate 'line', 3033
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    $P5014 = $P5012."infer_type"($P101)
    set $S5002, $P5014
    downcase $S5001, $S5002
    iseq $I5001, $S5001, "p"
    unless $I5001 goto if905_end1707 
    .const 'Sub' $P5015 = 'cuid_326_1361964166.213' 
    capture_lex $P5015
    $P5016 = $P5015()
  if905_end1707:
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_326_1361964166.213") :anon :lex :outer("cuid_327_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3033
    .lex "$fbpost", $P101 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3034
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."fallback"()
    $P5006 = $P5002."as_post"($P5005, "P" :named("want"))
    set $P101, $P5006
.annotate 'line', 3035
    find_lex $P5007, "$result"
    find_lex $P5008, "$post"
    find_lex $P5009, "$lbl"
    $P5007."push_pirop"("unless_null", $P5008, $P5009)
.annotate 'line', 3036
    find_lex $P5010, "$result"
    $P5010."push"($P101)
.annotate 'line', 3037
    find_lex $P5011, "$result"
    find_lex $P5012, "$post"
    $P5011."push_pirop"("set", $P5012, $P101)
.annotate 'line', 3038
    find_lex $P5013, "$result"
    find_lex $P5014, "$lbl"
    $P5015 = $P5013."push"($P5014)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_328_1361964166.213") :anon :lex :outer("cuid_104_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3042
    .lex "$fb_temp", $P101 
    .local pmc fb_tmp_249 
    .local pmc fb_tmp_250 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3043
    find_lex $P5002, "$node"
    $P5003 = $P5002."unique"("fb_tmp")
    set $P101, $P5003
.annotate 'line', 3044
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    nqp_get_sc_object $P5006, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 3046
    nqp_get_sc_object $P5007, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 3048
    nqp_get_sc_object $P5008, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 3050
    nqp_get_sc_object $P5009, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
.annotate 'line', 3052
    nqp_get_sc_object $P5010, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5011 = $P5010."new"($P101 :named("name"), "local" :named("scope"), "var" :named("decl"))
    find_lex $P5012, "$node"
    set fb_tmp_249, $P5012
    repr_defined $I5001, fb_tmp_249
    unless $I5001 goto if906_else1708 
    set $P5013, fb_tmp_249[0]
    set $P5015, $P5013
    goto if906_end1709
  if906_else1708:
    null $P5014
    set $P5015, $P5014
  if906_end1709:
    unless_null $P5015, vivi_9071710
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_9071710:
    $P5017 = $P5009."new"($P5011, $P5015, "bind" :named("op"))
    $P5018 = $P5008."new"($P5017, "isconcrete" :named("op"))
.annotate 'line', 3056
    nqp_get_sc_object $P5019, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
.annotate 'line', 3057
    find_lex $P5020, "$node"
    $P5021 = $P5020."scope"()
.annotate 'line', 3058
    nqp_get_sc_object $P5022, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 71
    $P5023 = $P5022."new"($P101 :named("name"), "local" :named("scope"))
    find_lex $P5024, "$node"
    set fb_tmp_250, $P5024
    repr_defined $I5002, fb_tmp_250
    unless $I5002 goto if908_else1711 
    set $P5025, fb_tmp_250[1]
    set $P5027, $P5025
    goto if908_end1712
  if908_else1711:
    null $P5026
    set $P5027, $P5026
  if908_end1712:
    unless_null $P5027, vivi_9091713
    nqp_get_sc_object $P5028, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5027, $P5028
  vivi_9091713:
    $P5029 = $P5019."new"($P5023, $P5027, $P5021 :named("scope"))
.annotate 'line', 3061
    nqp_get_sc_object $P5030, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5031 = $P5030."new"("null" :named("op"))
    $P5032 = $P5007."new"($P5018, $P5029, $P5031, "if" :named("op"))
.annotate 'line', 3063
    find_lex $P5033, "$node"
    $P5034 = $P5033."fallback"()
    $P5035 = $P5006."new"($P5032, $P5034, "ifnull" :named("op"))
    $P5036 = $P5004."as_post"($P5035)
    .return ($P5036) 
.end
.HLL "nqp"
.namespace []
.sub "compile_var" :subid("cuid_105_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3068
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5122 = 'cuid_330_1361964166.213' 
    capture_lex $P5122 
    .const 'Sub' $P5122 = 'cuid_332_1361964166.213' 
    capture_lex $P5122 
    .const 'Sub' $P5122 = 'cuid_335_1361964166.213' 
    capture_lex $P5122 
    .const 'Sub' $P5122 = 'cuid_344_1361964166.213' 
    capture_lex $P5122 
    .lex "$scope", $P101 
    .lex "$decl", $P102 
    .lex "$name", $P103 
    .lex "$ops", $P104 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_251 
    .local pmc fb_tmp_252 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_256 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
.annotate 'line', 3069
    $P5005 = _lex_param_1."scope"()
    set $P101, $P5005
.annotate 'line', 3070
    $P5006 = _lex_param_1."decl"()
    set $P102, $P5006
    unless $P102 goto if910_end1716 
.annotate 'line', 3074
    set $S5001, $P102
    iseq $I5001, $S5001, "param"
    unless $I5001 goto if911_else1717 
.annotate 'line', 3077
    set $S5002, $P101
    iseq $I5002, $S5002, "local"
    set $I5004, $I5002
    if $I5002 goto unless913_end1722 
    set $S5003, $P101
    iseq $I5003, $S5003, "lexical"
    set $I5004, $I5003
  unless913_end1722:
    unless $I5004 goto if912_else1719 
.annotate 'line', 3078
.annotate 'line', 3079
    find_dynamic_lex $P5007, "$*BLOCK"
    unless_null $P5007, fallback1723
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set fb_tmp_251, $P5008
    repr_defined $I5005, fb_tmp_251
    unless $I5005 goto if914_else1724 
    set $P5010, fb_tmp_251["$BLOCK"]
    set $P5012, $P5010
    goto if914_end1725
  if914_else1724:
    null $P5011
    set $P5012, $P5011
  if914_end1725:
    unless_null $P5012, vivi_9151726
    nqp_get_sc_object $P5013, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5012, $P5013
  vivi_9151726:
    unless_null $P5012, vivi_9161727
    die "Contextual $*BLOCK not found"
    box $P5014, "Contextual $*BLOCK not found"
    set $P5012, $P5014
  vivi_9161727:
    set $P5007, $P5012
  fallback1723:
    $P5015 = $P5007."add_param"(_lex_param_1)
    set $P5017, $P5015
    goto if912_end1720
  if912_else1719:
.annotate 'line', 3081
    set $S5006, $P101
    concat $S5005, "Parameter cannot have scope '", $S5006
    concat $S5004, $S5005, "'; use 'local' or 'lexical'"
    box $P5016, $S5004
    die $P5016
    set $P5017, $P5016
  if912_end1720:
    set $P5041, $P5017
    goto if911_end1718
  if911_else1717:
    set $S5007, $P102
    iseq $I5006, $S5007, "var"
    unless $I5006 goto if917_else1728 
.annotate 'line', 3085
    set $S5008, $P101
    iseq $I5007, $S5008, "local"
    unless $I5007 goto if918_else1730 
.annotate 'line', 3086
.annotate 'line', 3087
    find_dynamic_lex $P5018, "$*BLOCK"
    unless_null $P5018, fallback1732
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5019, $P5020
    set fb_tmp_252, $P5019
    repr_defined $I5008, fb_tmp_252
    unless $I5008 goto if919_else1733 
    set $P5021, fb_tmp_252["$BLOCK"]
    set $P5023, $P5021
    goto if919_end1734
  if919_else1733:
    null $P5022
    set $P5023, $P5022
  if919_end1734:
    unless_null $P5023, vivi_9201735
    nqp_get_sc_object $P5024, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5023, $P5024
  vivi_9201735:
    unless_null $P5023, vivi_9211736
    die "Contextual $*BLOCK not found"
    box $P5025, "Contextual $*BLOCK not found"
    set $P5023, $P5025
  vivi_9211736:
    set $P5018, $P5023
  fallback1732:
    $P5026 = $P5018."add_local"(_lex_param_1)
    set $P5038, $P5026
    goto if918_end1731
  if918_else1730:
    set $S5009, $P101
    iseq $I5009, $S5009, "lexical"
    unless $I5009 goto if922_else1737 
.annotate 'line', 3089
.annotate 'line', 3090
    find_dynamic_lex $P5027, "$*BLOCK"
    unless_null $P5027, fallback1739
    nqp_get_sc_object $P5029, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5028, $P5029
    set fb_tmp_253, $P5028
    repr_defined $I5010, fb_tmp_253
    unless $I5010 goto if923_else1740 
    set $P5030, fb_tmp_253["$BLOCK"]
    set $P5032, $P5030
    goto if923_end1741
  if923_else1740:
    null $P5031
    set $P5032, $P5031
  if923_end1741:
    unless_null $P5032, vivi_9241742
    nqp_get_sc_object $P5033, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5032, $P5033
  vivi_9241742:
    unless_null $P5032, vivi_9251743
    die "Contextual $*BLOCK not found"
    box $P5034, "Contextual $*BLOCK not found"
    set $P5032, $P5034
  vivi_9251743:
    set $P5027, $P5032
  fallback1739:
    $P5035 = $P5027."add_lexical"(_lex_param_1)
    set $P5037, $P5035
    goto if922_end1738
  if922_else1737:
.annotate 'line', 3092
    set $S5012, $P101
    concat $S5011, "Cannot declare variable with scope '", $S5012
    concat $S5010, $S5011, "'; use 'local' or 'lexical'"
    box $P5036, $S5010
    die $P5036
    set $P5037, $P5036
  if922_end1738:
    set $P5038, $P5037
  if918_end1731:
    set $P5040, $P5038
    goto if917_end1729
  if917_else1728:
.annotate 'line', 3096
    set $S5015, $P102
    concat $S5014, "Don't understand declaration type '", $S5015
    concat $S5013, $S5014, "'"
    box $P5039, $S5013
    die $P5039
    set $P5040, $P5039
  if917_end1729:
    set $P5041, $P5040
  if911_end1718:
  if910_end1716:
.annotate 'line', 3103
    $P5042 = _lex_param_1."name"()
    set $P103, $P5042
    set $S5016, $P101
    iseq $I5011, $S5016, ""
    unless $I5011 goto if926_end1745 
    .const 'Sub' $P5043 = 'cuid_330_1361964166.213' 
    capture_lex $P5043
    $P5044 = $P5043()
  if926_end1745:
.annotate 'line', 3122
    nqp_get_sc_object $P5045, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5046 = $P5045."new"()
    set $P104, $P5046
.annotate 'line', 3123
    $P5047 = _lex_param_1."node"()
    unless $P5047 goto if935_end1764 
    $P5048 = _lex_param_1."node"()
    $P5049 = $P104."node"($P5048)
  if935_end1764:
    set $S5017, $P101
    iseq $I5012, $S5017, "local"
    unless $I5012 goto if936_else1765 
.annotate 'line', 3124
.annotate 'line', 3125
    find_dynamic_lex $P5050, "$*BLOCK"
    unless_null $P5050, fallback1769
    nqp_get_sc_object $P5052, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5051, $P5052
    set fb_tmp_256, $P5051
    repr_defined $I5013, fb_tmp_256
    unless $I5013 goto if938_else1770 
    set $P5053, fb_tmp_256["$BLOCK"]
    set $P5055, $P5053
    goto if938_end1771
  if938_else1770:
    null $P5054
    set $P5055, $P5054
  if938_end1771:
    unless_null $P5055, vivi_9391772
    nqp_get_sc_object $P5056, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5055, $P5056
  vivi_9391772:
    unless_null $P5055, vivi_9401773
    die "Contextual $*BLOCK not found"
    box $P5057, "Contextual $*BLOCK not found"
    set $P5055, $P5057
  vivi_9401773:
    set $P5050, $P5055
  fallback1769:
    $P5058 = $P5050."local_type"($P103)
    unless $P5058 goto if937_else1767 
    .const 'Sub' $P5059 = 'cuid_332_1361964166.213' 
    capture_lex $P5059
    $P5060 = $P5059($P5058)
    set $P5062, $P5060
    goto if937_end1768
  if937_else1767:
.annotate 'line', 3133
    set $S5020, $P103
    concat $S5019, "Cannot reference undeclared local '", $S5020
    concat $S5018, $S5019, "'"
    box $P5061, $S5018
    die $P5061
    set $P5062, $P5061
  if937_end1768:
    goto if936_end1766
  if936_else1765:
    set $S5021, $P101
    iseq $I5014, $S5021, "lexical"
    set $I5016, $I5014
    if $I5014 goto unless949_end1789 
    set $S5022, $P101
    iseq $I5015, $S5022, "contextual"
    set $I5016, $I5015
  unless949_end1789:
    unless $I5016 goto if948_else1786 
    .const 'Sub' $P5063 = 'cuid_335_1361964166.213' 
    capture_lex $P5063
    $P5064 = $P5063()
    set $P5121, $P5064
    goto if948_end1787
  if948_else1786:
    set $S5023, $P101
    iseq $I5017, $S5023, "attribute"
    unless $I5017 goto if1000_else1879 
    .const 'Sub' $P5065 = 'cuid_344_1361964166.213' 
    capture_lex $P5065
    $P5066 = $P5065()
    set $P5120, $P5066
    goto if1000_end1880
  if1000_else1879:
    set $S5024, $P101
    iseq $I5018, $S5024, "positional"
    unless $I5018 goto if1016_else1906 
.annotate 'line', 3227
.annotate 'line', 3228
    nqp_decontainerize $P5067, _lex_param_0
    find_dynamic_lex $P5068, "$*BINDVAL"
    unless_null $P5068, fallback1910
    nqp_get_sc_object $P5070, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5069, $P5070
    set fb_tmp_278, $P5069
    repr_defined $I5019, fb_tmp_278
    unless $I5019 goto if1018_else1911 
    set $P5071, fb_tmp_278["$BINDVAL"]
    set $P5073, $P5071
    goto if1018_end1912
  if1018_else1911:
    null $P5072
    set $P5073, $P5072
  if1018_end1912:
    unless_null $P5073, vivi_10191913
    nqp_get_sc_object $P5074, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5073, $P5074
  vivi_10191913:
    unless_null $P5073, vivi_10201914
    die "Contextual $*BINDVAL not found"
    box $P5075, "Contextual $*BINDVAL not found"
    set $P5073, $P5075
  vivi_10201914:
    set $P5068, $P5073
  fallback1910:
    unless $P5068 goto if1017_else1908 
.annotate 'line', 3229
    nqp_get_sc_object $P5076, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5077 = _lex_param_1."list"()
    find_dynamic_lex $P5078, "$*BINDVAL"
    unless_null $P5078, fallback1915
    nqp_get_sc_object $P5080, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5079, $P5080
    set fb_tmp_279, $P5079
    repr_defined $I5020, fb_tmp_279
    unless $I5020 goto if1021_else1916 
    set $P5081, fb_tmp_279["$BINDVAL"]
    set $P5083, $P5081
    goto if1021_end1917
  if1021_else1916:
    null $P5082
    set $P5083, $P5082
  if1021_end1917:
    unless_null $P5083, vivi_10221918
    nqp_get_sc_object $P5084, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5083, $P5084
  vivi_10221918:
    unless_null $P5083, vivi_10231919
    die "Contextual $*BINDVAL not found"
    box $P5085, "Contextual $*BINDVAL not found"
    set $P5083, $P5085
  vivi_10231919:
    set $P5078, $P5083
  fallback1915:
    $P5086 = $P5076."new"($P5077 :flat, $P5078, "positional_bind" :named("op"))
    set $P5090, $P5086
    goto if1017_end1909
  if1017_else1908:
.annotate 'line', 3230
    nqp_get_sc_object $P5087, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5088 = _lex_param_1."list"()
    $P5089 = $P5087."new"($P5088 :flat, "positional_get" :named("op"))
    set $P5090, $P5089
  if1017_end1909:
    $P5091 = $P5067."as_post_clear_bindval"($P5090)
    set $P104, $P5091
    set $P5119, $P104
    goto if1016_end1907
  if1016_else1906:
    set $S5025, $P101
    iseq $I5021, $S5025, "associative"
    unless $I5021 goto if1024_else1920 
.annotate 'line', 3232
.annotate 'line', 3233
    nqp_decontainerize $P5092, _lex_param_0
    find_dynamic_lex $P5093, "$*BINDVAL"
    unless_null $P5093, fallback1924
    nqp_get_sc_object $P5095, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5094, $P5095
    set fb_tmp_280, $P5094
    repr_defined $I5022, fb_tmp_280
    unless $I5022 goto if1026_else1925 
    set $P5096, fb_tmp_280["$BINDVAL"]
    set $P5098, $P5096
    goto if1026_end1926
  if1026_else1925:
    null $P5097
    set $P5098, $P5097
  if1026_end1926:
    unless_null $P5098, vivi_10271927
    nqp_get_sc_object $P5099, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5098, $P5099
  vivi_10271927:
    unless_null $P5098, vivi_10281928
    die "Contextual $*BINDVAL not found"
    box $P5100, "Contextual $*BINDVAL not found"
    set $P5098, $P5100
  vivi_10281928:
    set $P5093, $P5098
  fallback1924:
    unless $P5093 goto if1025_else1922 
.annotate 'line', 3234
    nqp_get_sc_object $P5101, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5102 = _lex_param_1."list"()
    find_dynamic_lex $P5103, "$*BINDVAL"
    unless_null $P5103, fallback1929
    nqp_get_sc_object $P5105, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5104, $P5105
    set fb_tmp_281, $P5104
    repr_defined $I5023, fb_tmp_281
    unless $I5023 goto if1029_else1930 
    set $P5106, fb_tmp_281["$BINDVAL"]
    set $P5108, $P5106
    goto if1029_end1931
  if1029_else1930:
    null $P5107
    set $P5108, $P5107
  if1029_end1931:
    unless_null $P5108, vivi_10301932
    nqp_get_sc_object $P5109, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5108, $P5109
  vivi_10301932:
    unless_null $P5108, vivi_10311933
    die "Contextual $*BINDVAL not found"
    box $P5110, "Contextual $*BINDVAL not found"
    set $P5108, $P5110
  vivi_10311933:
    set $P5103, $P5108
  fallback1929:
    $P5111 = $P5101."new"($P5102 :flat, $P5103, "associative_bind" :named("op"))
    set $P5115, $P5111
    goto if1025_end1923
  if1025_else1922:
.annotate 'line', 3235
    nqp_get_sc_object $P5112, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22", 82
    $P5113 = _lex_param_1."list"()
    $P5114 = $P5112."new"($P5113 :flat, "associative_get" :named("op"))
    set $P5115, $P5114
  if1025_end1923:
    $P5116 = $P5092."as_post_clear_bindval"($P5115)
    set $P104, $P5116
    set $P5118, $P104
    goto if1024_end1921
  if1024_else1920:
.annotate 'line', 3237
    set $S5028, $P101
    concat $S5027, "QAST::Var with scope '", $S5028
    concat $S5026, $S5027, "' NYI"
    box $P5117, $S5026
    die $P5117
    set $P5118, $P5117
  if1024_end1921:
    set $P5119, $P5118
  if1016_end1907:
    set $P5120, $P5119
  if1000_end1880:
    set $P5121, $P5120
  if948_end1787:
  if936_end1766:
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_330_1361964166.213") :anon :lex :outer("cuid_105_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3104
    .const 'Sub' $P5020 = 'cuid_329_1361964166.213' 
    capture_lex $P5020 
    .lex "$cur_block", $P101 
    .local pmc fb_tmp_254 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1746
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_254, $P5003
    repr_defined $I5001, fb_tmp_254
    unless $I5001 goto if927_else1747 
    set $P5005, fb_tmp_254["$BLOCK"]
    set $P5007, $P5005
    goto if927_end1748
  if927_else1747:
    null $P5006
    set $P5007, $P5006
  if927_end1748:
    unless_null $P5007, vivi_9281749
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_9281749:
    unless_null $P5007, vivi_9291750
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_9291750:
    set $P5002, $P5007
  fallback1746:
    set $P101, $P5002
  while930_test1751:
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    type_check $I5002, $P101, $P5010
    box $P5014, $I5002
    set $P5013, $P5014
    unless $I5002 goto while930_done1755 
  while930_redo1753:
    .const 'Sub' $P5011 = 'cuid_329_1361964166.213' 
    capture_lex $P5011
    $P5012 = $P5011()
    set $P5013, $P5012
    goto while930_test1751 
  while930_done1755:
    find_lex $P5015, "$scope"
    set $S5001, $P5015
    iseq $I5003, $S5001, ""
    box $P5019, $I5003
    set $P5018, $P5019
    unless $I5003 goto if934_end1762 
.annotate 'line', 3116
    find_lex $P5016, "$name"
    set $S5004, $P5016
    concat $S5003, "No scope specified or locatable in the symbol table for '", $S5004
    concat $S5002, $S5003, "'"
    box $P5017, $S5002
    die $P5017
    set $P5018, $P5017
  if934_end1762:
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_329_1361964166.213") :anon :lex :outer("cuid_330_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3106
    .lex "%sym", $P101 
    .local pmc fb_tmp_255 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3107
    find_lex $P5002, "$cur_block"
    $P5003 = $P5002."qast"()
    find_lex $P5004, "$name"
    $P5005 = $P5003."symbol"($P5004)
    set $P101, $P5005
    unless $P101 goto if931_else1756 
.annotate 'line', 3108
    set fb_tmp_255, $P101
    repr_defined $I5001, fb_tmp_255
    unless $I5001 goto if932_else1758 
    set $P5006, fb_tmp_255["scope"]
    set $P5008, $P5006
    goto if932_end1759
  if932_else1758:
    null $P5007
    set $P5008, $P5007
  if932_end1759:
    unless_null $P5008, vivi_9331760
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_9331760:
    store_lex "$scope", $P5008
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    store_lex "$cur_block", $P5010
    set $P5013, $P5010
    goto if931_end1757
  if931_else1756:
.annotate 'line', 3112
.annotate 'line', 3113
    find_lex $P5011, "$cur_block"
    $P5012 = $P5011."outer"()
    store_lex "$cur_block", $P5012
    set $P5013, $P5012
  if931_end1757:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_332_1361964166.213") :anon :lex :outer("cuid_105_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3125
    .param pmc _lex_param_0 
    .const 'Sub' $P5014 = 'cuid_331_1361964166.213' 
    capture_lex $P5014 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_257 
    find_dynamic_lex $P5001, "$*BINDVAL"
    unless_null $P5001, fallback1776
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5002, $P5003
    set fb_tmp_257, $P5002
    repr_defined $I5001, fb_tmp_257
    unless $I5001 goto if942_else1777 
    set $P5004, fb_tmp_257["$BINDVAL"]
    set $P5006, $P5004
    goto if942_end1778
  if942_else1777:
    null $P5005
    set $P5006, $P5005
  if942_end1778:
    unless_null $P5006, vivi_9431779
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_9431779:
    unless_null $P5006, vivi_9441780
    die "Contextual $*BINDVAL not found"
    box $P5008, "Contextual $*BINDVAL not found"
    set $P5006, $P5008
  vivi_9441780:
    set $P5001, $P5006
  fallback1776:
    unless $P5001 goto if941_end1775 
    .const 'Sub' $P5009 = 'cuid_331_1361964166.213' 
    capture_lex $P5009
    $P5010 = $P5009()
  if941_end1775:
.annotate 'line', 3131
    find_lex $P5011, "$ops"
    find_lex $P5012, "$name"
    $P5013 = $P5011."result"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_331_1361964166.213") :anon :lex :outer("cuid_332_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3126
    .lex "$valpost", $P101 
    .local pmc fb_tmp_258 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3127
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1781
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_258, $P5005
    repr_defined $I5001, fb_tmp_258
    unless $I5001 goto if945_else1782 
    set $P5007, fb_tmp_258["$BINDVAL"]
    set $P5009, $P5007
    goto if945_end1783
  if945_else1782:
    null $P5008
    set $P5009, $P5008
  if945_end1783:
    unless_null $P5009, vivi_9461784
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_9461784:
    unless_null $P5009, vivi_9471785
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_9471785:
    set $P5004, $P5009
  fallback1781:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3128
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3129
    find_lex $P5015, "$ops"
    find_lex $P5016, "$name"
    $P5017 = $P101."result"()
    $P5018 = $P5015."push_pirop"("set", $P5016, $P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_335_1361964166.213") :anon :lex :outer("cuid_105_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3137
    .const 'Sub' $P5034 = 'cuid_334_1361964166.213' 
    capture_lex $P5034 
    .const 'Sub' $P5034 = 'cuid_338_1361964166.213' 
    capture_lex $P5034 
    .lex "%sym", $P101 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_261 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3140
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1790
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_259, $P5003
    repr_defined $I5001, fb_tmp_259
    unless $I5001 goto if950_else1791 
    set $P5005, fb_tmp_259["$BLOCK"]
    set $P5007, $P5005
    goto if950_end1792
  if950_else1791:
    null $P5006
    set $P5007, $P5006
  if950_end1792:
    unless_null $P5007, vivi_9511793
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_9511793:
    unless_null $P5007, vivi_9521794
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_9521794:
    set $P5002, $P5007
  fallback1790:
    $P5010 = $P5002."qast"()
    find_lex $P5011, "$name"
    $P5012 = $P5010."symbol"($P5011)
    set $P101, $P5012
    isfalse $I5002, $P101
    set $I5005, $I5002
    if $I5002 goto unless955_end1800 
    set fb_tmp_260, $P101
    repr_defined $I5004, fb_tmp_260
    unless $I5004 goto if956_else1801 
    set $P5013, fb_tmp_260["lazyinit"]
    set $P5015, $P5013
    goto if956_end1802
  if956_else1801:
    null $P5014
    set $P5015, $P5014
  if956_end1802:
    unless_null $P5015, vivi_9571803
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_9571803:
    isfalse $I5003, $P5015
    set $I5005, $I5003
  unless955_end1800:
    box $P5028, $I5005
    set $P5027, $P5028
    unless $I5005 goto if954_end1798 
.annotate 'line', 3141
    find_dynamic_lex $P5017, "$*BLOCK"
    unless_null $P5017, fallback1804
    nqp_get_sc_object $P5019, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5018, $P5019
    set fb_tmp_261, $P5018
    repr_defined $I5006, fb_tmp_261
    unless $I5006 goto if958_else1805 
    set $P5020, fb_tmp_261["$BLOCK"]
    set $P5022, $P5020
    goto if958_end1806
  if958_else1805:
    null $P5021
    set $P5022, $P5021
  if958_end1806:
    unless_null $P5022, vivi_9591807
    nqp_get_sc_object $P5023, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5022, $P5023
  vivi_9591807:
    unless_null $P5022, vivi_9601808
    die "Contextual $*BLOCK not found"
    box $P5024, "Contextual $*BLOCK not found"
    set $P5022, $P5024
  vivi_9601808:
    set $P5017, $P5022
  fallback1804:
    find_lex $P5025, "$name"
    $P5026 = $P5017."lexical_type"($P5025)
    set $P5027, $P5026
  if954_end1798:
    unless $P5027 goto if953_else1795 
    .const 'Sub' $P5029 = 'cuid_334_1361964166.213' 
    capture_lex $P5029
    $P5030 = $P5029($P5027)
    set $P5033, $P5030
    goto if953_end1796
  if953_else1795:
    .const 'Sub' $P5031 = 'cuid_338_1361964166.213' 
    capture_lex $P5031
    $P5032 = $P5031()
    set $P5033, $P5032
  if953_end1796:
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_334_1361964166.213") :anon :lex :outer("cuid_335_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3141
    .param pmc _lex_param_0 
    .const 'Sub' $P5024 = 'cuid_333_1361964166.213' 
    capture_lex $P5024 
    .lex "$reg", $P101 
    .lex "$type", _lex_param_0 
    .local pmc fb_tmp_262 
    .local pmc fb_tmp_263 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3142
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1809
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_262, $P5003
    repr_defined $I5001, fb_tmp_262
    unless $I5001 goto if961_else1810 
    set $P5005, fb_tmp_262["$BLOCK"]
    set $P5007, $P5005
    goto if961_end1811
  if961_else1810:
    null $P5006
    set $P5007, $P5006
  if961_end1811:
    unless_null $P5007, vivi_9621812
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_9621812:
    unless_null $P5007, vivi_9631813
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_9631813:
    set $P5002, $P5007
  fallback1809:
    find_lex $P5010, "$name"
    $P5011 = $P5002."lex_reg"($P5010)
    set $P101, $P5011
    find_dynamic_lex $P5012, "$*BINDVAL"
    unless_null $P5012, fallback1816
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5013, $P5014
    set fb_tmp_263, $P5013
    repr_defined $I5002, fb_tmp_263
    unless $I5002 goto if965_else1817 
    set $P5015, fb_tmp_263["$BINDVAL"]
    set $P5017, $P5015
    goto if965_end1818
  if965_else1817:
    null $P5016
    set $P5017, $P5016
  if965_end1818:
    unless_null $P5017, vivi_9661819
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_9661819:
    unless_null $P5017, vivi_9671820
    die "Contextual $*BINDVAL not found"
    box $P5019, "Contextual $*BINDVAL not found"
    set $P5017, $P5019
  vivi_9671820:
    set $P5012, $P5017
  fallback1816:
    unless $P5012 goto if964_end1815 
    .const 'Sub' $P5020 = 'cuid_333_1361964166.213' 
    capture_lex $P5020
    $P5021 = $P5020()
  if964_end1815:
.annotate 'line', 3148
    find_lex $P5022, "$ops"
    $P5023 = $P5022."result"($P101)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_333_1361964166.213") :anon :lex :outer("cuid_334_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3143
    .lex "$valpost", $P101 
    .local pmc fb_tmp_264 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3144
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1821
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_264, $P5005
    repr_defined $I5001, fb_tmp_264
    unless $I5001 goto if968_else1822 
    set $P5007, fb_tmp_264["$BINDVAL"]
    set $P5009, $P5007
    goto if968_end1823
  if968_else1822:
    null $P5008
    set $P5009, $P5008
  if968_end1823:
    unless_null $P5009, vivi_9691824
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_9691824:
    unless_null $P5009, vivi_9701825
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_9701825:
    set $P5004, $P5009
  fallback1821:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3145
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3146
    find_lex $P5015, "$ops"
    find_lex $P5016, "$reg"
    $P5017 = $P101."result"()
    $P5018 = $P5015."push_pirop"("set", $P5016, $P5017)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_338_1361964166.213") :anon :lex :outer("cuid_335_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3150
    .const 'Sub' $P5035 = 'cuid_337_1361964166.213' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_339_1361964166.213' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_340_1361964166.213' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_341_1361964166.213' 
    capture_lex $P5035 
    .const 'Sub' $P5035 = 'cuid_342_1361964166.213' 
    capture_lex $P5035 
    .lex "$type", $P101 
    .local pmc fb_tmp_267 
    .local pmc fb_tmp_270 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3152
    find_lex $P5002, "$node"
    $P5003 = $P5002."returns"()
    $P5004 = "&type_to_register_type"($P5003)
    set $P101, $P5004
    set $S5001, $P101
    iseq $I5001, $S5001, "P"
    unless $I5001 goto if971_end1827 
    .const 'Sub' $P5005 = 'cuid_337_1361964166.213' 
    capture_lex $P5005
    $P5006 = $P5005()
  if971_end1827:
    find_lex $P5007, "$scope"
    set $S5002, $P5007
    iseq $I5002, $S5002, "lexical"
    unless $I5002 goto if979_else1843 
.annotate 'line', 3169
    find_dynamic_lex $P5008, "$*BINDVAL"
    unless_null $P5008, fallback1847
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5009, $P5010
    set fb_tmp_267, $P5009
    repr_defined $I5003, fb_tmp_267
    unless $I5003 goto if981_else1848 
    set $P5011, fb_tmp_267["$BINDVAL"]
    set $P5013, $P5011
    goto if981_end1849
  if981_else1848:
    null $P5012
    set $P5013, $P5012
  if981_end1849:
    unless_null $P5013, vivi_9821850
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_9821850:
    unless_null $P5013, vivi_9831851
    die "Contextual $*BINDVAL not found"
    box $P5015, "Contextual $*BINDVAL not found"
    set $P5013, $P5015
  vivi_9831851:
    set $P5008, $P5013
  fallback1847:
    unless $P5008 goto if980_else1845 
    .const 'Sub' $P5016 = 'cuid_339_1361964166.213' 
    capture_lex $P5016
    $P5017 = $P5016()
    set $P5020, $P5017
    goto if980_end1846
  if980_else1845:
    .const 'Sub' $P5018 = 'cuid_340_1361964166.213' 
    capture_lex $P5018
    $P5019 = $P5018()
    set $P5020, $P5019
  if980_end1846:
    set $P5034, $P5020
    goto if979_end1844
  if979_else1843:
.annotate 'line', 3182
    find_dynamic_lex $P5021, "$*BINDVAL"
    unless_null $P5021, fallback1864
    nqp_get_sc_object $P5023, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5022, $P5023
    set fb_tmp_270, $P5022
    repr_defined $I5004, fb_tmp_270
    unless $I5004 goto if991_else1865 
    set $P5024, fb_tmp_270["$BINDVAL"]
    set $P5026, $P5024
    goto if991_end1866
  if991_else1865:
    null $P5025
    set $P5026, $P5025
  if991_end1866:
    unless_null $P5026, vivi_9921867
    nqp_get_sc_object $P5027, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5026, $P5027
  vivi_9921867:
    unless_null $P5026, vivi_9931868
    die "Contextual $*BINDVAL not found"
    box $P5028, "Contextual $*BINDVAL not found"
    set $P5026, $P5028
  vivi_9931868:
    set $P5021, $P5026
  fallback1864:
    unless $P5021 goto if990_else1862 
    .const 'Sub' $P5029 = 'cuid_341_1361964166.213' 
    capture_lex $P5029
    $P5030 = $P5029()
    set $P5033, $P5030
    goto if990_end1863
  if990_else1862:
    .const 'Sub' $P5031 = 'cuid_342_1361964166.213' 
    capture_lex $P5031
    $P5032 = $P5031()
    set $P5033, $P5032
  if990_end1863:
    set $P5034, $P5033
  if979_end1844:
    .return ($P5034) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_337_1361964166.213") :anon :lex :outer("cuid_338_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3153
    .const 'Sub' $P5015 = 'cuid_336_1361964166.213' 
    capture_lex $P5015 
    .lex "$cur_block", $P101 
    .local pmc fb_tmp_265 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    find_dynamic_lex $P5002, "$*BLOCK"
    unless_null $P5002, fallback1828
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_265, $P5003
    repr_defined $I5001, fb_tmp_265
    unless $I5001 goto if972_else1829 
    set $P5005, fb_tmp_265["$BLOCK"]
    set $P5007, $P5005
    goto if972_end1830
  if972_else1829:
    null $P5006
    set $P5007, $P5006
  if972_end1830:
    unless_null $P5007, vivi_9731831
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_9731831:
    unless_null $P5007, vivi_9741832
    die "Contextual $*BLOCK not found"
    box $P5009, "Contextual $*BLOCK not found"
    set $P5007, $P5009
  vivi_9741832:
    set $P5002, $P5007
  fallback1828:
    set $P101, $P5002
  while975_test1833:
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    type_check $I5002, $P101, $P5010
    box $P5014, $I5002
    set $P5013, $P5014
    unless $I5002 goto while975_done1837 
  while975_redo1835:
    .const 'Sub' $P5011 = 'cuid_336_1361964166.213' 
    capture_lex $P5011
    $P5012 = $P5011()
    set $P5013, $P5012
    goto while975_test1833 
  while975_done1837:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_336_1361964166.213") :anon :lex :outer("cuid_337_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3156
    .lex "%sym", $P101 
    .local pmc fb_tmp_266 
    new $P5001, 'Hash'
    set $P101, $P5001
.annotate 'line', 3157
    find_lex $P5002, "$cur_block"
    $P5003 = $P5002."qast"()
    find_lex $P5004, "$name"
    $P5005 = $P5003."symbol"($P5004)
    set $P101, $P5005
    unless $P101 goto if976_else1838 
.annotate 'line', 3158
.annotate 'line', 3159
    set fb_tmp_266, $P101
    repr_defined $I5001, fb_tmp_266
    unless $I5001 goto if977_else1840 
    set $P5006, fb_tmp_266["type"]
    set $P5008, $P5006
    goto if977_end1841
  if977_else1840:
    null $P5007
    set $P5008, $P5007
  if977_end1841:
    unless_null $P5008, vivi_9781842
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_9781842:
    $P5010 = "&type_to_register_type"($P5008)
    store_lex "$type", $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    store_lex "$cur_block", $P5011
    set $P5014, $P5011
    goto if976_end1839
  if976_else1838:
.annotate 'line', 3162
.annotate 'line', 3163
    find_lex $P5012, "$cur_block"
    $P5013 = $P5012."outer"()
    store_lex "$cur_block", $P5013
    set $P5014, $P5013
  if976_end1839:
    .return ($P5014) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_339_1361964166.213") :anon :lex :outer("cuid_338_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3170
    .lex "$valpost", $P101 
    .local pmc fb_tmp_268 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3171
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1852
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_268, $P5005
    repr_defined $I5001, fb_tmp_268
    unless $I5001 goto if984_else1853 
    set $P5007, fb_tmp_268["$BINDVAL"]
    set $P5009, $P5007
    goto if984_end1854
  if984_else1853:
    null $P5008
    set $P5009, $P5008
  if984_end1854:
    unless_null $P5009, vivi_9851855
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_9851855:
    unless_null $P5009, vivi_9861856
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_9861856:
    set $P5004, $P5009
  fallback1852:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3172
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3173
    find_lex $P5015, "$ops"
    find_lex $P5017, "self"
    nqp_decontainerize $P5016, $P5017
    find_lex $P5018, "$node"
    $P5019 = $P5018."name"()
    $P5020 = $P5016."escape"($P5019)
    $P5021 = $P101."result"()
    $P5015."push_pirop"("store_lex", $P5020, $P5021)
.annotate 'line', 3174
    find_lex $P5022, "$ops"
    $P5023 = $P101."result"()
    $P5024 = $P5022."result"($P5023)
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_340_1361964166.213") :anon :lex :outer("cuid_338_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3176
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_269 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3177
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1857
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_269, $P5004
    repr_defined $I5001, fb_tmp_269
    unless $I5001 goto if987_else1858 
    set $P5006, fb_tmp_269["$REGALLOC"]
    set $P5008, $P5006
    goto if987_end1859
  if987_else1858:
    null $P5007
    set $P5008, $P5007
  if987_end1859:
    unless_null $P5008, vivi_9881860
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_9881860:
    unless_null $P5008, vivi_9891861
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_9891861:
    set $P5003, $P5008
  fallback1857:
    find_lex $P5002, "$type"
    set $S5003, $P5002
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 3178
    find_lex $P5012, "$ops"
    find_lex $P5014, "self"
    nqp_decontainerize $P5013, $P5014
    find_lex $P5015, "$node"
    $P5016 = $P5015."name"()
    $P5017 = $P5013."escape"($P5016)
    $P5012."push_pirop"("find_lex", $P101, $P5017)
.annotate 'line', 3179
    find_lex $P5018, "$ops"
    $P5019 = $P5018."result"($P101)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_341_1361964166.213") :anon :lex :outer("cuid_338_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3183
    .lex "$valpost", $P101 
    .local pmc fb_tmp_271 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3184
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1869
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_271, $P5005
    repr_defined $I5001, fb_tmp_271
    unless $I5001 goto if994_else1870 
    set $P5007, fb_tmp_271["$BINDVAL"]
    set $P5009, $P5007
    goto if994_end1871
  if994_else1870:
    null $P5008
    set $P5009, $P5008
  if994_end1871:
    unless_null $P5009, vivi_9951872
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_9951872:
    unless_null $P5009, vivi_9961873
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_9961873:
    set $P5004, $P5009
  fallback1869:
    $P5012 = $P5002."as_post_clear_bindval"($P5004, "P" :named("want"))
    set $P101, $P5012
.annotate 'line', 3185
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3186
    find_lex $P5014, "$ops"
    find_lex $P5016, "self"
    nqp_decontainerize $P5015, $P5016
    find_lex $P5017, "$name"
    $P5018 = $P5015."escape"($P5017)
    $P5019 = $P101."result"()
    $P5014."push_pirop"("store_dynamic_lex", $P5018, $P5019)
.annotate 'line', 3187
    find_lex $P5020, "$ops"
    $P5021 = $P101."result"()
    $P5022 = $P5020."result"($P5021)
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_342_1361964166.213") :anon :lex :outer("cuid_338_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3189
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_272 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3190
    find_dynamic_lex $P5002, "$*REGALLOC"
    unless_null $P5002, fallback1874
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5003, $P5004
    set fb_tmp_272, $P5003
    repr_defined $I5001, fb_tmp_272
    unless $I5001 goto if997_else1875 
    set $P5005, fb_tmp_272["$REGALLOC"]
    set $P5007, $P5005
    goto if997_end1876
  if997_else1875:
    null $P5006
    set $P5007, $P5006
  if997_end1876:
    unless_null $P5007, vivi_9981877
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5008
  vivi_9981877:
    unless_null $P5007, vivi_9991878
    die "Contextual $*REGALLOC not found"
    box $P5009, "Contextual $*REGALLOC not found"
    set $P5007, $P5009
  vivi_9991878:
    set $P5002, $P5007
  fallback1874:
    $P5010 = $P5002."fresh_p"()
    set $P101, $P5010
.annotate 'line', 3191
    find_lex $P5011, "$ops"
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$name"
    $P5015 = $P5012."escape"($P5014)
    $P5011."push_pirop"("find_dynamic_lex", $P101, $P5015)
.annotate 'line', 3192
    find_lex $P5016, "$ops"
    $P5017 = $P5016."result"($P101)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_344_1361964166.213") :anon :lex :outer("cuid_105_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3197
    .const 'Sub' $P5044 = 'cuid_343_1361964166.213' 
    capture_lex $P5044 
    .const 'Sub' $P5044 = 'cuid_345_1361964166.213' 
    capture_lex $P5044 
    .lex "@args", $P101 
    .lex "$obj", $P102 
    .lex "$han", $P103 
    .lex "$type", $P104 
    .lex "$op_type", $P105 
    .local pmc fb_tmp_273 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    new $P5001, 'ResizablePMCArray'
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
.annotate 'line', 3199
    find_lex $P5006, "$node"
    $P5007 = $P5006."list"()
    set $P101, $P5007
    set $N5001, $P101
    set $N5002, 2
    isne $I5001, $N5001, $N5002
    unless $I5001 goto if1001_end1882 
.annotate 'line', 3200
    box $P5008, "An attribute lookup needs an object and a class handle"
    die $P5008
  if1001_end1882:
.annotate 'line', 3205
    find_lex $P5010, "self"
    nqp_decontainerize $P5009, $P5010
    set fb_tmp_273, $P101
    repr_defined $I5002, fb_tmp_273
    unless $I5002 goto if1002_else1883 
    set $P5011, fb_tmp_273[0]
    set $P5013, $P5011
    goto if1002_end1884
  if1002_else1883:
    null $P5012
    set $P5013, $P5012
  if1002_end1884:
    unless_null $P5013, vivi_10031885
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_10031885:
    $P5015 = $P5009."as_post_clear_bindval"($P5013, "P" :named("want"))
    set $P102, $P5015
.annotate 'line', 3206
    find_lex $P5017, "self"
    nqp_decontainerize $P5016, $P5017
    set fb_tmp_274, $P101
    repr_defined $I5003, fb_tmp_274
    unless $I5003 goto if1004_else1886 
    set $P5018, fb_tmp_274[1]
    set $P5020, $P5018
    goto if1004_end1887
  if1004_else1886:
    null $P5019
    set $P5020, $P5019
  if1004_end1887:
    unless_null $P5020, vivi_10051888
    nqp_get_sc_object $P5021, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5020, $P5021
  vivi_10051888:
    $P5022 = $P5016."as_post_clear_bindval"($P5020, "P" :named("want"))
    set $P103, $P5022
.annotate 'line', 3207
    find_lex $P5023, "$ops"
    $P5023."push"($P102)
.annotate 'line', 3208
    find_lex $P5024, "$ops"
    $P5024."push"($P103)
.annotate 'line', 3211
    find_lex $P5025, "$node"
    $P5026 = $P5025."returns"()
    $P5027 = "&type_to_register_type"($P5026)
    set $P104, $P5027
.annotate 'line', 3212
    find_lex $P5028, "$node"
    $P5029 = $P5028."returns"()
    $P5030 = "&type_to_lookup_name"($P5029)
    set $P105, $P5030
    find_dynamic_lex $P5031, "$*BINDVAL"
    unless_null $P5031, fallback1891
    nqp_get_sc_object $P5033, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5032, $P5033
    set fb_tmp_275, $P5032
    repr_defined $I5004, fb_tmp_275
    unless $I5004 goto if1007_else1892 
    set $P5034, fb_tmp_275["$BINDVAL"]
    set $P5036, $P5034
    goto if1007_end1893
  if1007_else1892:
    null $P5035
    set $P5036, $P5035
  if1007_end1893:
    unless_null $P5036, vivi_10081894
    nqp_get_sc_object $P5037, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5036, $P5037
  vivi_10081894:
    unless_null $P5036, vivi_10091895
    die "Contextual $*BINDVAL not found"
    box $P5038, "Contextual $*BINDVAL not found"
    set $P5036, $P5038
  vivi_10091895:
    set $P5031, $P5036
  fallback1891:
    unless $P5031 goto if1006_else1889 
    .const 'Sub' $P5039 = 'cuid_343_1361964166.213' 
    capture_lex $P5039
    $P5040 = $P5039()
    set $P5043, $P5040
    goto if1006_end1890
  if1006_else1889:
    .const 'Sub' $P5041 = 'cuid_345_1361964166.213' 
    capture_lex $P5041
    $P5042 = $P5041()
    set $P5043, $P5042
  if1006_end1890:
    .return ($P5043) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_343_1361964166.213") :anon :lex :outer("cuid_344_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3213
    .lex "$valpost", $P101 
    .local pmc fb_tmp_276 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3214
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_dynamic_lex $P5004, "$*BINDVAL"
    unless_null $P5004, fallback1896
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set fb_tmp_276, $P5005
    repr_defined $I5001, fb_tmp_276
    unless $I5001 goto if1010_else1897 
    set $P5007, fb_tmp_276["$BINDVAL"]
    set $P5009, $P5007
    goto if1010_end1898
  if1010_else1897:
    null $P5008
    set $P5009, $P5008
  if1010_end1898:
    unless_null $P5009, vivi_10111899
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_10111899:
    unless_null $P5009, vivi_10121900
    die "Contextual $*BINDVAL not found"
    box $P5011, "Contextual $*BINDVAL not found"
    set $P5009, $P5011
  vivi_10121900:
    set $P5004, $P5009
  fallback1896:
    find_lex $P5012, "$type"
    set $S5002, $P5012
    downcase $S5001, $S5002
    $P5013 = $P5002."as_post_clear_bindval"($P5004, $S5001 :named("want"))
    set $P101, $P5013
.annotate 'line', 3215
    find_lex $P5014, "$ops"
    $P5014."push"($P101)
.annotate 'line', 3216
    find_lex $P5015, "$ops"
    find_lex $P5016, "$op_type"
    set $S5004, $P5016
    concat $S5003, "repr_bind_attr_", $S5004
    find_lex $P5017, "$obj"
    $P5018 = $P5017."result"()
    find_lex $P5019, "$han"
    $P5020 = $P5019."result"()
.annotate 'line', 3217
    find_lex $P5022, "self"
    nqp_decontainerize $P5021, $P5022
    find_lex $P5023, "$name"
    $P5024 = $P5021."escape"($P5023)
    $P5025 = $P101."result"()
    $P5015."push_pirop"($S5003, $P5018, $P5020, $P5024, $P5025)
.annotate 'line', 3218
    find_lex $P5026, "$ops"
    $P5027 = $P101."result"()
    $P5028 = $P5026."result"($P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_345_1361964166.213") :anon :lex :outer("cuid_344_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3220
    .lex "$res_reg", $P101 
    .local pmc fb_tmp_277 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3221
    find_dynamic_lex $P5003, "$*REGALLOC"
    unless_null $P5003, fallback1901
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_277, $P5004
    repr_defined $I5001, fb_tmp_277
    unless $I5001 goto if1013_else1902 
    set $P5006, fb_tmp_277["$REGALLOC"]
    set $P5008, $P5006
    goto if1013_end1903
  if1013_else1902:
    null $P5007
    set $P5008, $P5007
  if1013_end1903:
    unless_null $P5008, vivi_10141904
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_10141904:
    unless_null $P5008, vivi_10151905
    die "Contextual $*REGALLOC not found"
    box $P5010, "Contextual $*REGALLOC not found"
    set $P5008, $P5010
  vivi_10151905:
    set $P5003, $P5008
  fallback1901:
    find_lex $P5002, "$type"
    set $S5003, $P5002
    downcase $S5002, $S5003
    concat $S5001, "fresh_", $S5002
    $P5011 = $P5003.$S5001()
    set $P101, $P5011
.annotate 'line', 3222
    find_lex $P5012, "$ops"
    find_lex $P5013, "$op_type"
    set $S5005, $P5013
    concat $S5004, "repr_get_attr_", $S5005
    find_lex $P5014, "$obj"
    $P5015 = $P5014."result"()
    find_lex $P5016, "$han"
    $P5017 = $P5016."result"()
.annotate 'line', 3223
    find_lex $P5019, "self"
    nqp_decontainerize $P5018, $P5019
    find_lex $P5020, "$name"
    $P5021 = $P5018."escape"($P5020)
    $P5012."push_pirop"($S5004, $P101, $P5015, $P5017, $P5021)
.annotate 'line', 3224
    find_lex $P5022, "$ops"
    $P5023 = $P5022."result"($P101)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "as_post_clear_bindval" :subid("cuid_106_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3244
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_25 :opt_flag 
    .lex "$*BINDVAL", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_25, default1936
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5008
  default1936:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    box $P5002, 0
    set $P101, $P5002
    unless _lex_param_2 goto if1032_else1934 
.annotate 'line', 3246
    nqp_decontainerize $P5003, _lex_param_0
    $P5004 = $P5003."as_post"(_lex_param_1, _lex_param_2 :named("want"))
    set $P5007, $P5004
    goto if1032_end1935
  if1032_else1934:
    nqp_decontainerize $P5005, _lex_param_0
    $P5006 = $P5005."as_post"(_lex_param_1)
    set $P5007, $P5006
  if1032_end1935:
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_107_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3249
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_26 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_282 
    if haz_param_26, default1940
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5007
  default1940:
.annotate 'line', 3251
    nqp_decontainerize $P5001, _lex_param_0
    set fb_tmp_282, _lex_param_1
    repr_defined $I5001, fb_tmp_282
    unless $I5001 goto if1033_else1937 
    set $P5002, fb_tmp_282[0]
    set $P5004, $P5002
    goto if1033_end1938
  if1033_else1937:
    null $P5003
    set $P5004, $P5003
  if1033_end1938:
    unless_null $P5004, vivi_10341939
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5004, $P5005
  vivi_10341939:
    $P5006 = $P5001."as_post"($P5004)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_108_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3254
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_27 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_27, default1941
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5004
  default1941:
.annotate 'line', 3255
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5002 = _lex_param_1."value"()
    set $S5001, $P5002
    $P5003 = $P5001."new"($S5001 :named("result"))
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_109_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3258
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_28 :opt_flag 
    .lex "$val", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_28, default1946
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5007
  default1946:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3259
    $P5002 = _lex_param_1."value"()
    set $S5001, $P5002
    box $P5003, $S5001
    set $P101, $P5003
    set $S5002, $P101
    index $I5002, $S5002, ".", 0
    set $N5001, $I5002
    set $N5002, 0
    isge $I5001, $N5001, $N5002
    set $I5005, $I5001
    if $I5001 goto unless1036_end1945 
    set $S5003, $P101
    index $I5004, $S5003, "e", 0
    set $N5003, $I5004
    set $N5004, 0
    isgt $I5003, $N5003, $N5004
    set $I5005, $I5003
  unless1036_end1945:
    if $I5005 goto unless1035_end1943 
    set $S5005, $P101
    concat $S5004, $S5005, ".0"
    box $P5004, $S5004
    set $P101, $P5004
  unless1035_end1943:
.annotate 'line', 3262
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5006 = $P5005."new"($P101 :named("result"))
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_110_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3265
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_29 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_29, default1947
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5006
  default1947:
.annotate 'line', 3266
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    nqp_decontainerize $P5002, _lex_param_0
    $P5003 = _lex_param_1."value"()
    $P5004 = $P5002."escape"($P5003)
    $P5005 = $P5001."new"($P5004 :named("result"))
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_111_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3269
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_30 :opt_flag 
    .lex "$cuid", $P101 
    .lex "$reg", $P102 
    .lex "$ops", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_283 
    if haz_param_30, default1953
    nqp_get_sc_object $P5019, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5019
  default1953:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 3270
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = _lex_param_1."value"()
    $P5006 = $P5005."cuid"()
    $P5007 = $P5004."escape"($P5006)
    set $P101, $P5007
.annotate 'line', 3271
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback1948
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5009, $P5010
    set fb_tmp_283, $P5009
    repr_defined $I5001, fb_tmp_283
    unless $I5001 goto if1037_else1949 
    set $P5011, fb_tmp_283["$REGALLOC"]
    set $P5013, $P5011
    goto if1037_end1950
  if1037_else1949:
    null $P5012
    set $P5013, $P5012
  if1037_end1950:
    unless_null $P5013, vivi_10381951
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_10381951:
    unless_null $P5013, vivi_10391952
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_10391952:
    set $P5008, $P5013
  fallback1948:
    $P5016 = $P5008."fresh_p"()
    set $P102, $P5016
.annotate 'line', 3272
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5018 = $P5017."new"($P102 :named("result"))
    set $P103, $P5018
.annotate 'line', 3273
    set $S5004, $P102
    concat $S5003, ".const 'Sub' ", $S5004
    concat $S5002, $S5003, " = "
    set $S5005, $P101
    concat $S5001, $S5002, $S5005
    $P103."push_pirop"($S5001)
    .return ($P103) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_112_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3277
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_31 :opt_flag 
    .lex "$val", $P101 
    .lex "$sc", $P102 
    .lex "$handle", $P103 
    .lex "$idx", $P104 
    .lex "$reg", $P105 
    .lex "$ops", $P106 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_284 
    if haz_param_31, default1959
    nqp_get_sc_object $P5024, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5024
  default1959:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
.annotate 'line', 3278
    $P5007 = _lex_param_1."value"()
    set $P101, $P5007
    nqp_get_sc_for_object $P5008, $P101
    set $P102, $P5008
    $S5001 = $P102."handle"()
    box $P5009, $S5001
    set $P103, $P5009
    $I5001 = $P102."slot_index_for"($P101)
    box $P5010, $I5001
    set $P104, $P5010
.annotate 'line', 3282
    find_dynamic_lex $P5011, "$*REGALLOC"
    unless_null $P5011, fallback1954
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5012, $P5013
    set fb_tmp_284, $P5012
    repr_defined $I5002, fb_tmp_284
    unless $I5002 goto if1040_else1955 
    set $P5014, fb_tmp_284["$REGALLOC"]
    set $P5016, $P5014
    goto if1040_end1956
  if1040_else1955:
    null $P5015
    set $P5016, $P5015
  if1040_end1956:
    unless_null $P5016, vivi_10411957
    nqp_get_sc_object $P5017, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5016, $P5017
  vivi_10411957:
    unless_null $P5016, vivi_10421958
    die "Contextual $*REGALLOC not found"
    box $P5018, "Contextual $*REGALLOC not found"
    set $P5016, $P5018
  vivi_10421958:
    set $P5011, $P5016
  fallback1954:
    $P5019 = $P5011."fresh_p"()
    set $P105, $P5019
.annotate 'line', 3283
    nqp_get_sc_object $P5020, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5021 = $P5020."new"($P105 :named("result"))
    set $P106, $P5021
.annotate 'line', 3284
    nqp_decontainerize $P5022, _lex_param_0
    $P5023 = $P5022."escape"($P103)
    set $S5002, $P104
    $P106."push_pirop"("nqp_get_sc_object", $P105, $P5023, $S5002)
    .return ($P106) 
.end
.HLL "nqp"
.namespace []
.sub "coerce" :subid("cuid_113_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3288
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .const 'Sub' $P5029 = 'cuid_346_1361964166.213' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_347_1361964166.213' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_348_1361964166.213' 
    capture_lex $P5029 
    .const 'Sub' $P5029 = 'cuid_349_1361964166.213' 
    capture_lex $P5029 
    .lex "$result", $P101 
    .lex "self", _lex_param_0 
    .lex "$post", _lex_param_1 
    .lex "$desired", _lex_param_2 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    root_new $P102, ['parrot';'Continuation']
    set_label $P102, lexotic_1960
    .lex "RETURN", $P102
    set $S5001, _lex_param_2
    iseq $I5001, $S5001, "v"
    unless $I5001 goto if1043_end1963 
    find_lex $P5002, "RETURN"
    $P5003 = $P5002(_lex_param_1)
  if1043_end1963:
.annotate 'line', 3290
    nqp_decontainerize $P5004, _lex_param_0
    $P5005 = _lex_param_1."result"()
    $P5006 = $P5004."infer_type"($P5005)
    set $P101, $P5006
    set $S5002, $P101
    set $S5003, _lex_param_2
    iseq $I5002, $S5002, $S5003
    unless $I5002 goto if1044_else1964 
.annotate 'line', 3291
    find_lex $P5007, "RETURN"
    $P5008 = $P5007(_lex_param_1)
    set $P5028, $P5008
    goto if1044_end1965
  if1044_else1964:
    set $S5005, $P101
    downcase $S5004, $S5005
    set $S5006, _lex_param_2
    iseq $I5003, $S5004, $S5006
    unless $I5003 goto if1045_else1966 
.annotate 'line', 3295
    find_lex $P5009, "RETURN"
    $P5010 = $P5009(_lex_param_1)
    set $P5027, $P5010
    goto if1045_end1967
  if1045_else1966:
    set $S5007, $P101
    iseq $I5004, $S5007, "p"
    set $I5006, $I5004
    unless $I5004 goto if1047_end1971 
    set $S5008, _lex_param_2
    iseq $I5005, $S5008, "P"
    set $I5006, $I5005
  if1047_end1971:
    unless $I5006 goto if1046_else1968 
.annotate 'line', 3300
    find_lex $P5011, "RETURN"
    $P5012 = $P5011(_lex_param_1)
    set $P5026, $P5012
    goto if1046_end1969
  if1046_else1968:
    set $S5009, $P101
    set $S5011, _lex_param_2
    downcase $S5010, $S5011
    iseq $I5007, $S5009, $S5010
    unless $I5007 goto if1048_else1972 
    .const 'Sub' $P5013 = 'cuid_346_1361964166.213' 
    capture_lex $P5013
    $P5014 = $P5013()
    set $P5025, $P5014
    goto if1048_end1973
  if1048_else1972:
    set $S5012, _lex_param_2
    iseq $I5008, $S5012, "P"
    set $I5010, $I5008
    if $I5008 goto unless1053_end1982 
    set $S5013, _lex_param_2
    iseq $I5009, $S5013, "p"
    set $I5010, $I5009
  unless1053_end1982:
    unless $I5010 goto if1052_else1979 
    .const 'Sub' $P5015 = 'cuid_347_1361964166.213' 
    capture_lex $P5015
    $P5016 = $P5015()
    set $P5024, $P5016
    goto if1052_end1980
  if1052_else1979:
    set $S5014, $P101
    iseq $I5011, $S5014, "P"
    set $I5013, $I5011
    if $I5011 goto unless1060_end1993 
    set $S5015, $P101
    iseq $I5012, $S5015, "p"
    set $I5013, $I5012
  unless1060_end1993:
    unless $I5013 goto if1059_else1990 
    .const 'Sub' $P5017 = 'cuid_348_1361964166.213' 
    capture_lex $P5017
    $P5018 = $P5017()
    set $P5023, $P5018
    goto if1059_end1991
  if1059_else1990:
    set $S5016, $P101
    index $I5015, "IiNnSs", $S5016, 0
    set $N5001, $I5015
    set $N5002, 0
    isge $I5014, $N5001, $N5002
    set $I5018, $I5014
    unless $I5014 goto if1067_end2004 
    set $S5017, _lex_param_2
    index $I5017, "IiNnSs", $S5017, 0
    set $N5003, $I5017
    set $N5004, 0
    isge $I5016, $N5003, $N5004
    set $I5018, $I5016
  if1067_end2004:
    unless $I5018 goto if1066_else2001 
    .const 'Sub' $P5019 = 'cuid_349_1361964166.213' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5022, $P5020
    goto if1066_end2002
  if1066_else2001:
.annotate 'line', 3333
    set $S5022, $P101
    concat $S5021, "Coercion from '", $S5022
    concat $S5020, $S5021, "' to '"
    set $S5023, _lex_param_2
    concat $S5019, $S5020, $S5023
    concat $S5018, $S5019, "' NYI"
    box $P5021, $S5018
    die $P5021
    set $P5022, $P5021
  if1066_end2002:
    set $P5023, $P5022
  if1059_end1991:
    set $P5024, $P5023
  if1052_end1980:
    set $P5025, $P5024
  if1048_end1973:
    set $P5026, $P5025
  if1046_end1969:
    set $P5027, $P5026
  if1045_end1967:
    set $P5028, $P5027
  if1044_end1965:
    goto lexotic_1961
  lexotic_1960:
    .get_results ($P5028)
  lexotic_1961:
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_346_1361964166.213") :anon :lex :outer("cuid_113_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3304
    .lex "$ops", $P101 
    .lex "$reg", $P102 
    .local pmc fb_tmp_285 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 3306
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
.annotate 'line', 3307
    find_dynamic_lex $P5006, "$*REGALLOC"
    unless_null $P5006, fallback1974
    nqp_get_sc_object $P5008, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5007, $P5008
    set fb_tmp_285, $P5007
    repr_defined $I5001, fb_tmp_285
    unless $I5001 goto if1049_else1975 
    set $P5009, fb_tmp_285["$REGALLOC"]
    set $P5011, $P5009
    goto if1049_end1976
  if1049_else1975:
    null $P5010
    set $P5011, $P5010
  if1049_end1976:
    unless_null $P5011, vivi_10501977
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_10501977:
    unless_null $P5011, vivi_10511978
    die "Contextual $*REGALLOC not found"
    box $P5013, "Contextual $*REGALLOC not found"
    set $P5011, $P5013
  vivi_10511978:
    set $P5006, $P5011
  fallback1974:
    find_lex $P5005, "$result"
    set $S5002, $P5005
    concat $S5001, "fresh_", $S5002
    $P5014 = $P5006.$S5001()
    set $P102, $P5014
.annotate 'line', 3308
    find_lex $P5015, "$post"
    $P101."push"($P5015)
.annotate 'line', 3309
    find_lex $P5016, "$post"
    $P101."push_pirop"("set", $P102, $P5016)
.annotate 'line', 3310
    $P101."result"($P102)
    find_lex $P5017, "RETURN"
    $P5018 = $P5017($P101)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_347_1361964166.213") :anon :lex :outer("cuid_113_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3313
    .lex "$hll", $P101 
    .local pmc fb_tmp_286 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_10581989
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*HLL"
    unless_null $P5003, fallback1983
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_286, $P5004
    repr_defined $I5001, fb_tmp_286
    unless $I5001 goto if1054_else1984 
    set $P5006, fb_tmp_286["$HLL"]
    set $P5008, $P5006
    goto if1054_end1985
  if1054_else1984:
    null $P5007
    set $P5008, $P5007
  if1054_end1985:
    unless_null $P5008, vivi_10551986
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_10551986:
    unless_null $P5008, vivi_10561987
    die "Contextual $*HLL not found"
    box $P5010, "Contextual $*HLL not found"
    set $P5008, $P5010
  vivi_10561987:
    set $P5003, $P5008
  fallback1983:
    set $P101, $P5003
    set $P5012, $P101
    pop_eh 
    goto skip_handler_10571988
  catch_handler_10581989:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_10571988
  skip_handler_10571988:
.annotate 'line', 3316
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    find_lex $P5016, "self"
    nqp_decontainerize $P5015, $P5016
    find_lex $P5017, "$result"
    set $S5002, $P5017
    downcase $S5001, $S5002
    find_lex $P5018, "$post"
    $P5019 = $P5014."box"($P5015, $P101, $S5001, $P5018)
    find_lex $P5013, "RETURN"
    $P5020 = $P5013($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_348_1361964166.213") :anon :lex :outer("cuid_113_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3318
    .lex "$hll", $P101 
    .local pmc fb_tmp_287 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    box $P5002, ""
    set $P101, $P5002
    new $P5011, 'ExceptionHandler'
    set_label $P5011, catch_handler_10652000
    $P5011.'handle_types_except'(.CONTROL_ALL)
    push_eh $P5011
    find_dynamic_lex $P5003, "$*HLL"
    unless_null $P5003, fallback1994
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set fb_tmp_287, $P5004
    repr_defined $I5001, fb_tmp_287
    unless $I5001 goto if1061_else1995 
    set $P5006, fb_tmp_287["$HLL"]
    set $P5008, $P5006
    goto if1061_end1996
  if1061_else1995:
    null $P5007
    set $P5008, $P5007
  if1061_end1996:
    unless_null $P5008, vivi_10621997
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5008, $P5009
  vivi_10621997:
    unless_null $P5008, vivi_10631998
    die "Contextual $*HLL not found"
    box $P5010, "Contextual $*HLL not found"
    set $P5008, $P5010
  vivi_10631998:
    set $P5003, $P5008
  fallback1994:
    set $P101, $P5003
    set $P5012, $P101
    pop_eh 
    goto skip_handler_10641999
  catch_handler_10652000:
    .get_results ($P5011) 
    set $I10001, 1
    set $P5011["handled"], $I10001
    nqp_get_sc_object $P10001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    finalize $P5011
    pop_upto_eh $P5011
    pop_eh 
    set $P5012, $P10001
    goto skip_handler_10641999
  skip_handler_10641999:
.annotate 'line', 3321
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    find_lex $P5016, "self"
    nqp_decontainerize $P5015, $P5016
    find_lex $P5017, "$desired"
    set $S5002, $P5017
    downcase $S5001, $S5002
    find_lex $P5018, "$post"
    $P5019 = $P5014."unbox"($P5015, $P101, $S5001, $P5018)
    find_lex $P5013, "RETURN"
    $P5020 = $P5013($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_349_1361964166.213") :anon :lex :outer("cuid_113_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3323
    .lex "$ops", $P101 
    .lex "$rtype", $P102 
    .lex "$reg", $P103 
    .local pmc fb_tmp_288 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 3325
    nqp_get_sc_object $P5004, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5005 = $P5004."new"()
    set $P101, $P5005
    find_lex $P5006, "$desired"
    set $S5002, $P5006
    downcase $S5001, $S5002
    box $P5007, $S5001
    set $P102, $P5007
.annotate 'line', 3327
    find_dynamic_lex $P5008, "$*REGALLOC"
    unless_null $P5008, fallback2005
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5009, $P5010
    set fb_tmp_288, $P5009
    repr_defined $I5001, fb_tmp_288
    unless $I5001 goto if1068_else2006 
    set $P5011, fb_tmp_288["$REGALLOC"]
    set $P5013, $P5011
    goto if1068_end2007
  if1068_else2006:
    null $P5012
    set $P5013, $P5012
  if1068_end2007:
    unless_null $P5013, vivi_10692008
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_10692008:
    unless_null $P5013, vivi_10702009
    die "Contextual $*REGALLOC not found"
    box $P5015, "Contextual $*REGALLOC not found"
    set $P5013, $P5015
  vivi_10702009:
    set $P5008, $P5013
  fallback2005:
    set $S5004, $P102
    concat $S5003, "fresh_", $S5004
    $P5016 = $P5008.$S5003()
    set $P103, $P5016
.annotate 'line', 3328
    find_lex $P5017, "$post"
    $P101."push"($P5017)
.annotate 'line', 3329
    find_lex $P5018, "$post"
    $P101."push_pirop"("set", $P103, $P5018)
.annotate 'line', 3330
    $P101."result"($P103)
    find_lex $P5019, "RETURN"
    $P5020 = $P5019($P101)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "infer_type" :subid("cuid_114_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3338
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5026 = 'cuid_350_1361964166.213' 
    capture_lex $P5026 
    .lex "self", _lex_param_0 
    .lex "$inferee", _lex_param_1 
    .local pmc fb_tmp_289 
    set $S5002, _lex_param_1
    substr $S5001, $S5002, 0, 1
    iseq $I5001, $S5001, "$"
    unless $I5001 goto if1071_else2010 
.annotate 'line', 3339
    set $S5004, _lex_param_1
    substr $S5003, $S5004, 1, 1
    box $P5025, $S5003
    set $P5024, $P5025
    goto if1071_end2011
  if1071_else2010:
.annotate 'line', 3342
    find_dynamic_lex $P5001, "$*BLOCK"
    unless_null $P5001, fallback2014
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5002, $P5003
    set fb_tmp_289, $P5002
    repr_defined $I5002, fb_tmp_289
    unless $I5002 goto if1073_else2015 
    set $P5004, fb_tmp_289["$BLOCK"]
    set $P5006, $P5004
    goto if1073_end2016
  if1073_else2015:
    null $P5005
    set $P5006, $P5005
  if1073_end2016:
    unless_null $P5006, vivi_10742017
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5006, $P5007
  vivi_10742017:
    unless_null $P5006, vivi_10752018
    die "Contextual $*BLOCK not found"
    box $P5008, "Contextual $*BLOCK not found"
    set $P5006, $P5008
  vivi_10752018:
    set $P5001, $P5006
  fallback2014:
    $P5009 = $P5001."reg_type"(_lex_param_1)
    unless $P5009 goto if1072_else2012 
    .const 'Sub' $P5010 = 'cuid_350_1361964166.213' 
    capture_lex $P5010
    $P5011 = $P5010($P5009)
    set $P5023, $P5011
    goto if1072_end2013
  if1072_else2012:
    set $S5006, _lex_param_1
    substr $S5005, $S5006, 0, 1
    iseq $I5003, $S5005, "\""
    set $I5005, $I5003
    if $I5003 goto unless1079_end2026 
    set $S5008, _lex_param_1
    substr $S5007, $S5008, 0, 6
    iseq $I5004, $S5007, "utf8:\""
    set $I5005, $I5004
  unless1079_end2026:
    set $I5007, $I5005
    if $I5005 goto unless1078_end2024 
    set $S5010, _lex_param_1
    substr $S5009, $S5010, 0, 6
    iseq $I5006, $S5009, "ucs4:\""
    set $I5007, $I5006
  unless1078_end2024:
    set $I5009, $I5007
    if $I5007 goto unless1077_end2022 
    set $S5012, _lex_param_1
    substr $S5011, $S5012, 0, 9
    iseq $I5008, $S5011, "unicode:\""
    set $I5009, $I5008
  unless1077_end2022:
    unless $I5009 goto if1076_else2019 
.annotate 'line', 3348

    box $P5022, "s"
    set $P5021, $P5022
    goto if1076_end2020
  if1076_else2019:
    set $S5014, _lex_param_1
    substr $S5013, $S5014, 0, 6
    iseq $I5010, $S5013, ".const"
    unless $I5010 goto if1080_else2027 
.annotate 'line', 3351

    box $P5020, "P"
    set $P5019, $P5020
    goto if1080_end2028
  if1080_else2027:
    set $S5016, _lex_param_1
    substr $S5015, $S5016, 0, 1
    iseq $I5011, $S5015, "."
    unless $I5011 goto if1081_else2029 
.annotate 'line', 3354

    box $P5018, "i"
    set $P5017, $P5018
    goto if1081_end2030
  if1081_else2029:
    set $S5017, _lex_param_1
    index $I5013, $S5017, ".", 0
    set $N5001, $I5013
    set $N5002, 0
    isgt $I5012, $N5001, $N5002
    unless $I5012 goto if1082_else2031 
.annotate 'line', 3357

    box $P5016, "n"
    set $P5015, $P5016
    goto if1082_end2032
  if1082_else2031:
    set $N5003, _lex_param_1
    set $S5018, $N5003
    set $S5019, _lex_param_1
    iseq $I5014, $S5018, $S5019
    unless $I5014 goto if1083_else2033 
.annotate 'line', 3360

    box $P5014, "i"
    set $P5013, $P5014
    goto if1083_end2034
  if1083_else2033:
.annotate 'line', 3363
    set $S5022, _lex_param_1
    concat $S5021, "Cannot infer type from '", $S5022
    concat $S5020, $S5021, "'"
    box $P5012, $S5020
    die $P5012
    set $P5013, $P5012
  if1083_end2034:
    set $P5015, $P5013
  if1082_end2032:
    set $P5017, $P5015
  if1081_end2030:
    set $P5019, $P5017
  if1080_end2028:
    set $P5021, $P5019
  if1076_end2020:
    set $P5023, $P5021
  if1072_end2013:
    set $P5024, $P5023
  if1071_end2011:
    .return ($P5024) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_350_1361964166.213") :anon :lex :outer("cuid_114_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3342
    .param pmc _lex_param_0 
    .lex "$type", _lex_param_0 
    set $S5002, _lex_param_0
    downcase $S5001, $S5002
    .return ($S5001) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_115_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3368
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_32 :opt_flag 
    .const 'Sub' $P5484 = 'cuid_351_1361964166.213' 
    capture_lex $P5484 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "%*REG", $P103 
    .lex "$reglist", $P104 
    .lex "$startlabel", $P105 
    .lex "$donelabel", $P106 
    .lex "$restartlabel", $P107 
    .lex "$faillabel", $P108 
    .lex "$jumplabel", $P109 
    .lex "$cutlabel", $P110 
    .lex "$cstacklabel", $P111 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .lex "$want", _lex_param_2 
    .local pmc fb_tmp_290 
    .local pmc pkg_viv_tmp_7 
    .local pmc fb_tmp_292 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc pkg_viv_tmp_10 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_299 
    .local pmc fb_tmp_300 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    .local pmc pkg_viv_tmp_14 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_305 
    .local pmc fb_tmp_306 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc pkg_viv_tmp_18 
    .local pmc fb_tmp_311 
    .local pmc fb_tmp_312 
    .local pmc pkg_viv_tmp_19 
    .local pmc fb_tmp_313 
    .local pmc fb_tmp_314 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_315 
    .local pmc fb_tmp_316 
    .local pmc pkg_viv_tmp_21 
    .local pmc fb_tmp_317 
    .local pmc fb_tmp_318 
    .local pmc pkg_viv_tmp_22 
    .local pmc fb_tmp_319 
    .local pmc fb_tmp_320 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_321 
    .local pmc fb_tmp_322 
    .local pmc pkg_viv_tmp_24 
    .local pmc fb_tmp_323 
    .local pmc fb_tmp_324 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_325 
    .local pmc fb_tmp_326 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_327 
    .local pmc fb_tmp_328 
    .local pmc pkg_viv_tmp_27 
    .local pmc fb_tmp_329 
    .local pmc fb_tmp_330 
    .local pmc pkg_viv_tmp_28 
    .local pmc fb_tmp_331 
    .local pmc fb_tmp_332 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_333 
    .local pmc fb_tmp_334 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_335 
    .local pmc fb_tmp_336 
    .local pmc pkg_viv_tmp_31 
    .local pmc fb_tmp_337 
    .local pmc fb_tmp_338 
    .local pmc pkg_viv_tmp_32 
    .local pmc fb_tmp_339 
    .local pmc fb_tmp_340 
    .local pmc pkg_viv_tmp_33 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc pkg_viv_tmp_34 
    .local pmc fb_tmp_343 
    .local pmc fb_tmp_344 
    .local pmc pkg_viv_tmp_35 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    .local pmc pkg_viv_tmp_36 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    .local pmc pkg_viv_tmp_37 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    .local pmc pkg_viv_tmp_38 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
    .local pmc pkg_viv_tmp_39 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_354 
    .local pmc pkg_viv_tmp_40 
    .local pmc fb_tmp_355 
    .local pmc fb_tmp_356 
    .local pmc pkg_viv_tmp_41 
    .local pmc fb_tmp_357 
    .local pmc fb_tmp_358 
    .local pmc pkg_viv_tmp_42 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    .local pmc pkg_viv_tmp_43 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    .local pmc pkg_viv_tmp_44 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_364 
    .local pmc pkg_viv_tmp_45 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    .local pmc pkg_viv_tmp_46 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc pkg_viv_tmp_47 
    .local pmc fb_tmp_369 
    .local pmc fb_tmp_370 
    .local pmc pkg_viv_tmp_48 
    if haz_param_32, default2369
    nqp_get_sc_object $P5483, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5483
  default2369:
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    new $P5003, 'Hash'
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P110, $P5010
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P111, $P5011
.annotate 'line', 3369
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."post_new"("Ops")
    set $P101, $P5013
.annotate 'line', 3370
    $P5014 = _lex_param_1."node"()
    unless $P5014 goto if1084_end2036 
    $P5015 = _lex_param_1."node"()
    $P5016 = $P101."node"($P5015)
  if1084_end2036:
.annotate 'line', 3371
    nqp_decontainerize $P5017, _lex_param_0
    $P5018 = $P5017."unique"("rx")
    set $S5002, $P5018
    concat $S5001, $S5002, "_"
    box $P5019, $S5001
    set $P102, $P5019
    split $P5027, " ", "start pmc tgt string pos int off int eos int rep int cur pmc curclass pmc bstack pmc cstack pmc"
    set $P104, $P5027
  while1088_test2042:
    set $P5030, $P104
    unless $P104 goto while1088_done2046 
  while1088_redo2044:
    .const 'Sub' $P5028 = 'cuid_351_1361964166.213' 
    capture_lex $P5028
    $P5029 = $P5028()
    set $P5030, $P5029
    goto while1088_test2042 
  while1088_done2046:
.annotate 'line', 3383
    nqp_decontainerize $P5031, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "start"
    $P5032 = $P5031."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5032
.annotate 'line', 3384
    nqp_decontainerize $P5033, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "done"
    $P5034 = $P5033."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5034
.annotate 'line', 3385
    nqp_decontainerize $P5035, _lex_param_0
    set $S5008, $P102
    concat $S5007, $S5008, "restart"
    $P5036 = $P5035."post_new"("Label", $S5007 :named("name"))
    set $P107, $P5036
.annotate 'line', 3386
    nqp_decontainerize $P5037, _lex_param_0
    set $S5010, $P102
    concat $S5009, $S5010, "fail"
    $P5038 = $P5037."post_new"("Label", $S5009 :named("name"))
    set $P108, $P5038
.annotate 'line', 3387
    nqp_decontainerize $P5039, _lex_param_0
    set $S5012, $P102
    concat $S5011, $S5012, "jump"
    $P5040 = $P5039."post_new"("Label", $S5011 :named("name"))
    set $P109, $P5040
.annotate 'line', 3388
    nqp_decontainerize $P5041, _lex_param_0
    set $S5014, $P102
    concat $S5013, $S5014, "cut"
    $P5042 = $P5041."post_new"("Label", $S5013 :named("name"))
    set $P110, $P5042
.annotate 'line', 3389
    nqp_decontainerize $P5043, _lex_param_0
    set $S5016, $P102
    concat $S5015, $S5016, "cstack_done"
    $P5044 = $P5043."post_new"("Label", $S5015 :named("name"))
    set $P111, $P5044
    unless_null $P103, fallback2052
    nqp_get_sc_object $P5046, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5045, $P5046
    set pkg_viv_tmp_9, $P5045
    set fb_tmp_292, pkg_viv_tmp_9
    repr_defined $I5002, fb_tmp_292
    unless $I5002 goto if1092_else2053 
    set $P5047, fb_tmp_292["%REG"]
    set $P5049, $P5047
    goto if1092_end2054
  if1092_else2053:
    null $P5048
    set $P5049, $P5048
  if1092_end2054:
    unless_null $P5049, vivi_10932055
    new $P5050, 'Hash'
    set pkg_viv_tmp_9["%REG"], $P5050
    set $P5049, $P5050
  vivi_10932055:
    unless_null $P5049, vivi_10942056
    die "Contextual %*REG not found"
    box $P5051, "Contextual %*REG not found"
    set $P5049, $P5051
  vivi_10942056:
    set $P103, $P5049
  fallback2052:
    set $P103["fail"], $P108
.annotate 'line', 3393
    unless_null $P103, fallback2059
    nqp_get_sc_object $P5053, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5052, $P5053
    set pkg_viv_tmp_10, $P5052
    set fb_tmp_294, pkg_viv_tmp_10
    repr_defined $I5004, fb_tmp_294
    unless $I5004 goto if1096_else2060 
    set $P5054, fb_tmp_294["%REG"]
    set $P5056, $P5054
    goto if1096_end2061
  if1096_else2060:
    null $P5055
    set $P5056, $P5055
  if1096_end2061:
    unless_null $P5056, vivi_10972062
    new $P5057, 'Hash'
    set pkg_viv_tmp_10["%REG"], $P5057
    set $P5056, $P5057
  vivi_10972062:
    unless_null $P5056, vivi_10982063
    die "Contextual %*REG not found"
    box $P5058, "Contextual %*REG not found"
    set $P5056, $P5058
  vivi_10982063:
    set $P103, $P5056
  fallback2059:
    set fb_tmp_293, $P103
    repr_defined $I5003, fb_tmp_293
    unless $I5003 goto if1095_else2057 
    set $P5059, fb_tmp_293["start"]
    set $P5061, $P5059
    goto if1095_end2058
  if1095_else2057:
    null $P5060
    set $P5061, $P5060
  if1095_end2058:
    unless_null $P5061, vivi_10992064
    nqp_get_sc_object $P5062, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5061, $P5062
  vivi_10992064:
    $P101."push_pirop"("callmethod", "\"!cursor_start_all\"", "self", $P5061 :named("result"))
.annotate 'line', 3394
    unless_null $P103, fallback2067
    nqp_get_sc_object $P5064, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_11, $P5063
    set fb_tmp_296, pkg_viv_tmp_11
    repr_defined $I5006, fb_tmp_296
    unless $I5006 goto if1101_else2068 
    set $P5065, fb_tmp_296["%REG"]
    set $P5067, $P5065
    goto if1101_end2069
  if1101_else2068:
    null $P5066
    set $P5067, $P5066
  if1101_end2069:
    unless_null $P5067, vivi_11022070
    new $P5068, 'Hash'
    set pkg_viv_tmp_11["%REG"], $P5068
    set $P5067, $P5068
  vivi_11022070:
    unless_null $P5067, vivi_11032071
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_11032071:
    set $P103, $P5067
  fallback2067:
    set fb_tmp_295, $P103
    repr_defined $I5005, fb_tmp_295
    unless $I5005 goto if1100_else2065 
    set $P5070, fb_tmp_295["cur"]
    set $P5072, $P5070
    goto if1100_end2066
  if1100_else2065:
    null $P5071
    set $P5072, $P5071
  if1100_end2066:
    unless_null $P5072, vivi_11042072
    nqp_get_sc_object $P5073, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5072, $P5073
  vivi_11042072:
    unless_null $P103, fallback2075
    nqp_get_sc_object $P5075, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_12, $P5074
    set fb_tmp_298, pkg_viv_tmp_12
    repr_defined $I5008, fb_tmp_298
    unless $I5008 goto if1106_else2076 
    set $P5076, fb_tmp_298["%REG"]
    set $P5078, $P5076
    goto if1106_end2077
  if1106_else2076:
    null $P5077
    set $P5078, $P5077
  if1106_end2077:
    unless_null $P5078, vivi_11072078
    new $P5079, 'Hash'
    set pkg_viv_tmp_12["%REG"], $P5079
    set $P5078, $P5079
  vivi_11072078:
    unless_null $P5078, vivi_11082079
    die "Contextual %*REG not found"
    box $P5080, "Contextual %*REG not found"
    set $P5078, $P5080
  vivi_11082079:
    set $P103, $P5078
  fallback2075:
    set fb_tmp_297, $P103
    repr_defined $I5007, fb_tmp_297
    unless $I5007 goto if1105_else2073 
    set $P5081, fb_tmp_297["start"]
    set $P5083, $P5081
    goto if1105_end2074
  if1105_else2073:
    null $P5082
    set $P5083, $P5082
  if1105_end2074:
    unless_null $P5083, vivi_11092080
    nqp_get_sc_object $P5084, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5083, $P5084
  vivi_11092080:
    set $S5018, $P5083
    concat $S5017, $S5018, "[0]"
    $P101."push_pirop"("set", $P5072, $S5017)
.annotate 'line', 3395
    unless_null $P103, fallback2083
    nqp_get_sc_object $P5086, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5085, $P5086
    set pkg_viv_tmp_13, $P5085
    set fb_tmp_300, pkg_viv_tmp_13
    repr_defined $I5010, fb_tmp_300
    unless $I5010 goto if1111_else2084 
    set $P5087, fb_tmp_300["%REG"]
    set $P5089, $P5087
    goto if1111_end2085
  if1111_else2084:
    null $P5088
    set $P5089, $P5088
  if1111_end2085:
    unless_null $P5089, vivi_11122086
    new $P5090, 'Hash'
    set pkg_viv_tmp_13["%REG"], $P5090
    set $P5089, $P5090
  vivi_11122086:
    unless_null $P5089, vivi_11132087
    die "Contextual %*REG not found"
    box $P5091, "Contextual %*REG not found"
    set $P5089, $P5091
  vivi_11132087:
    set $P103, $P5089
  fallback2083:
    set fb_tmp_299, $P103
    repr_defined $I5009, fb_tmp_299
    unless $I5009 goto if1110_else2081 
    set $P5092, fb_tmp_299["tgt"]
    set $P5094, $P5092
    goto if1110_end2082
  if1110_else2081:
    null $P5093
    set $P5094, $P5093
  if1110_end2082:
    unless_null $P5094, vivi_11142088
    nqp_get_sc_object $P5095, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5094, $P5095
  vivi_11142088:
    unless_null $P103, fallback2091
    nqp_get_sc_object $P5097, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5096, $P5097
    set pkg_viv_tmp_14, $P5096
    set fb_tmp_302, pkg_viv_tmp_14
    repr_defined $I5012, fb_tmp_302
    unless $I5012 goto if1116_else2092 
    set $P5098, fb_tmp_302["%REG"]
    set $P5100, $P5098
    goto if1116_end2093
  if1116_else2092:
    null $P5099
    set $P5100, $P5099
  if1116_end2093:
    unless_null $P5100, vivi_11172094
    new $P5101, 'Hash'
    set pkg_viv_tmp_14["%REG"], $P5101
    set $P5100, $P5101
  vivi_11172094:
    unless_null $P5100, vivi_11182095
    die "Contextual %*REG not found"
    box $P5102, "Contextual %*REG not found"
    set $P5100, $P5102
  vivi_11182095:
    set $P103, $P5100
  fallback2091:
    set fb_tmp_301, $P103
    repr_defined $I5011, fb_tmp_301
    unless $I5011 goto if1115_else2089 
    set $P5103, fb_tmp_301["start"]
    set $P5105, $P5103
    goto if1115_end2090
  if1115_else2089:
    null $P5104
    set $P5105, $P5104
  if1115_end2090:
    unless_null $P5105, vivi_11192096
    nqp_get_sc_object $P5106, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5105, $P5106
  vivi_11192096:
    set $S5020, $P5105
    concat $S5019, $S5020, "[1]"
    $P101."push_pirop"("set", $P5094, $S5019)
.annotate 'line', 3396
    unless_null $P103, fallback2099
    nqp_get_sc_object $P5108, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5107, $P5108
    set pkg_viv_tmp_15, $P5107
    set fb_tmp_304, pkg_viv_tmp_15
    repr_defined $I5014, fb_tmp_304
    unless $I5014 goto if1121_else2100 
    set $P5109, fb_tmp_304["%REG"]
    set $P5111, $P5109
    goto if1121_end2101
  if1121_else2100:
    null $P5110
    set $P5111, $P5110
  if1121_end2101:
    unless_null $P5111, vivi_11222102
    new $P5112, 'Hash'
    set pkg_viv_tmp_15["%REG"], $P5112
    set $P5111, $P5112
  vivi_11222102:
    unless_null $P5111, vivi_11232103
    die "Contextual %*REG not found"
    box $P5113, "Contextual %*REG not found"
    set $P5111, $P5113
  vivi_11232103:
    set $P103, $P5111
  fallback2099:
    set fb_tmp_303, $P103
    repr_defined $I5013, fb_tmp_303
    unless $I5013 goto if1120_else2097 
    set $P5114, fb_tmp_303["pos"]
    set $P5116, $P5114
    goto if1120_end2098
  if1120_else2097:
    null $P5115
    set $P5116, $P5115
  if1120_end2098:
    unless_null $P5116, vivi_11242104
    nqp_get_sc_object $P5117, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5116, $P5117
  vivi_11242104:
    unless_null $P103, fallback2107
    nqp_get_sc_object $P5119, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5118, $P5119
    set pkg_viv_tmp_16, $P5118
    set fb_tmp_306, pkg_viv_tmp_16
    repr_defined $I5016, fb_tmp_306
    unless $I5016 goto if1126_else2108 
    set $P5120, fb_tmp_306["%REG"]
    set $P5122, $P5120
    goto if1126_end2109
  if1126_else2108:
    null $P5121
    set $P5122, $P5121
  if1126_end2109:
    unless_null $P5122, vivi_11272110
    new $P5123, 'Hash'
    set pkg_viv_tmp_16["%REG"], $P5123
    set $P5122, $P5123
  vivi_11272110:
    unless_null $P5122, vivi_11282111
    die "Contextual %*REG not found"
    box $P5124, "Contextual %*REG not found"
    set $P5122, $P5124
  vivi_11282111:
    set $P103, $P5122
  fallback2107:
    set fb_tmp_305, $P103
    repr_defined $I5015, fb_tmp_305
    unless $I5015 goto if1125_else2105 
    set $P5125, fb_tmp_305["start"]
    set $P5127, $P5125
    goto if1125_end2106
  if1125_else2105:
    null $P5126
    set $P5127, $P5126
  if1125_end2106:
    unless_null $P5127, vivi_11292112
    nqp_get_sc_object $P5128, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5127, $P5128
  vivi_11292112:
    set $S5022, $P5127
    concat $S5021, $S5022, "[2]"
    $P101."push_pirop"("set", $P5116, $S5021)
.annotate 'line', 3397
    unless_null $P103, fallback2115
    nqp_get_sc_object $P5130, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5129, $P5130
    set pkg_viv_tmp_17, $P5129
    set fb_tmp_308, pkg_viv_tmp_17
    repr_defined $I5018, fb_tmp_308
    unless $I5018 goto if1131_else2116 
    set $P5131, fb_tmp_308["%REG"]
    set $P5133, $P5131
    goto if1131_end2117
  if1131_else2116:
    null $P5132
    set $P5133, $P5132
  if1131_end2117:
    unless_null $P5133, vivi_11322118
    new $P5134, 'Hash'
    set pkg_viv_tmp_17["%REG"], $P5134
    set $P5133, $P5134
  vivi_11322118:
    unless_null $P5133, vivi_11332119
    die "Contextual %*REG not found"
    box $P5135, "Contextual %*REG not found"
    set $P5133, $P5135
  vivi_11332119:
    set $P103, $P5133
  fallback2115:
    set fb_tmp_307, $P103
    repr_defined $I5017, fb_tmp_307
    unless $I5017 goto if1130_else2113 
    set $P5136, fb_tmp_307["curclass"]
    set $P5138, $P5136
    goto if1130_end2114
  if1130_else2113:
    null $P5137
    set $P5138, $P5137
  if1130_end2114:
    unless_null $P5138, vivi_11342120
    nqp_get_sc_object $P5139, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5138, $P5139
  vivi_11342120:
    unless_null $P103, fallback2123
    nqp_get_sc_object $P5141, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5140, $P5141
    set pkg_viv_tmp_18, $P5140
    set fb_tmp_310, pkg_viv_tmp_18
    repr_defined $I5020, fb_tmp_310
    unless $I5020 goto if1136_else2124 
    set $P5142, fb_tmp_310["%REG"]
    set $P5144, $P5142
    goto if1136_end2125
  if1136_else2124:
    null $P5143
    set $P5144, $P5143
  if1136_end2125:
    unless_null $P5144, vivi_11372126
    new $P5145, 'Hash'
    set pkg_viv_tmp_18["%REG"], $P5145
    set $P5144, $P5145
  vivi_11372126:
    unless_null $P5144, vivi_11382127
    die "Contextual %*REG not found"
    box $P5146, "Contextual %*REG not found"
    set $P5144, $P5146
  vivi_11382127:
    set $P103, $P5144
  fallback2123:
    set fb_tmp_309, $P103
    repr_defined $I5019, fb_tmp_309
    unless $I5019 goto if1135_else2121 
    set $P5147, fb_tmp_309["start"]
    set $P5149, $P5147
    goto if1135_end2122
  if1135_else2121:
    null $P5148
    set $P5149, $P5148
  if1135_end2122:
    unless_null $P5149, vivi_11392128
    nqp_get_sc_object $P5150, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5149, $P5150
  vivi_11392128:
    set $S5024, $P5149
    concat $S5023, $S5024, "[3]"
    $P101."push_pirop"("set", $P5138, $S5023)
.annotate 'line', 3398
    unless_null $P103, fallback2131
    nqp_get_sc_object $P5152, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5151, $P5152
    set pkg_viv_tmp_19, $P5151
    set fb_tmp_312, pkg_viv_tmp_19
    repr_defined $I5022, fb_tmp_312
    unless $I5022 goto if1141_else2132 
    set $P5153, fb_tmp_312["%REG"]
    set $P5155, $P5153
    goto if1141_end2133
  if1141_else2132:
    null $P5154
    set $P5155, $P5154
  if1141_end2133:
    unless_null $P5155, vivi_11422134
    new $P5156, 'Hash'
    set pkg_viv_tmp_19["%REG"], $P5156
    set $P5155, $P5156
  vivi_11422134:
    unless_null $P5155, vivi_11432135
    die "Contextual %*REG not found"
    box $P5157, "Contextual %*REG not found"
    set $P5155, $P5157
  vivi_11432135:
    set $P103, $P5155
  fallback2131:
    set fb_tmp_311, $P103
    repr_defined $I5021, fb_tmp_311
    unless $I5021 goto if1140_else2129 
    set $P5158, fb_tmp_311["bstack"]
    set $P5160, $P5158
    goto if1140_end2130
  if1140_else2129:
    null $P5159
    set $P5160, $P5159
  if1140_end2130:
    unless_null $P5160, vivi_11442136
    nqp_get_sc_object $P5161, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5160, $P5161
  vivi_11442136:
    unless_null $P103, fallback2139
    nqp_get_sc_object $P5163, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5162, $P5163
    set pkg_viv_tmp_20, $P5162
    set fb_tmp_314, pkg_viv_tmp_20
    repr_defined $I5024, fb_tmp_314
    unless $I5024 goto if1146_else2140 
    set $P5164, fb_tmp_314["%REG"]
    set $P5166, $P5164
    goto if1146_end2141
  if1146_else2140:
    null $P5165
    set $P5166, $P5165
  if1146_end2141:
    unless_null $P5166, vivi_11472142
    new $P5167, 'Hash'
    set pkg_viv_tmp_20["%REG"], $P5167
    set $P5166, $P5167
  vivi_11472142:
    unless_null $P5166, vivi_11482143
    die "Contextual %*REG not found"
    box $P5168, "Contextual %*REG not found"
    set $P5166, $P5168
  vivi_11482143:
    set $P103, $P5166
  fallback2139:
    set fb_tmp_313, $P103
    repr_defined $I5023, fb_tmp_313
    unless $I5023 goto if1145_else2137 
    set $P5169, fb_tmp_313["start"]
    set $P5171, $P5169
    goto if1145_end2138
  if1145_else2137:
    null $P5170
    set $P5171, $P5170
  if1145_end2138:
    unless_null $P5171, vivi_11492144
    nqp_get_sc_object $P5172, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5171, $P5172
  vivi_11492144:
    set $S5026, $P5171
    concat $S5025, $S5026, "[4]"
    $P101."push_pirop"("set", $P5160, $S5025)
.annotate 'line', 3399
    unless_null $P103, fallback2147
    nqp_get_sc_object $P5174, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5173, $P5174
    set pkg_viv_tmp_21, $P5173
    set fb_tmp_316, pkg_viv_tmp_21
    repr_defined $I5026, fb_tmp_316
    unless $I5026 goto if1151_else2148 
    set $P5175, fb_tmp_316["%REG"]
    set $P5177, $P5175
    goto if1151_end2149
  if1151_else2148:
    null $P5176
    set $P5177, $P5176
  if1151_end2149:
    unless_null $P5177, vivi_11522150
    new $P5178, 'Hash'
    set pkg_viv_tmp_21["%REG"], $P5178
    set $P5177, $P5178
  vivi_11522150:
    unless_null $P5177, vivi_11532151
    die "Contextual %*REG not found"
    box $P5179, "Contextual %*REG not found"
    set $P5177, $P5179
  vivi_11532151:
    set $P103, $P5177
  fallback2147:
    set fb_tmp_315, $P103
    repr_defined $I5025, fb_tmp_315
    unless $I5025 goto if1150_else2145 
    set $P5180, fb_tmp_315["start"]
    set $P5182, $P5180
    goto if1150_end2146
  if1150_else2145:
    null $P5181
    set $P5182, $P5181
  if1150_end2146:
    unless_null $P5182, vivi_11542152
    nqp_get_sc_object $P5183, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5182, $P5183
  vivi_11542152:
    set $S5028, $P5182
    concat $S5027, $S5028, "[5]"
    $P101."push_pirop"("set", "$I19", $S5027)
.annotate 'line', 3400
    unless_null $P103, fallback2155
    nqp_get_sc_object $P5185, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5184, $P5185
    set pkg_viv_tmp_22, $P5184
    set fb_tmp_318, pkg_viv_tmp_22
    repr_defined $I5028, fb_tmp_318
    unless $I5028 goto if1156_else2156 
    set $P5186, fb_tmp_318["%REG"]
    set $P5188, $P5186
    goto if1156_end2157
  if1156_else2156:
    null $P5187
    set $P5188, $P5187
  if1156_end2157:
    unless_null $P5188, vivi_11572158
    new $P5189, 'Hash'
    set pkg_viv_tmp_22["%REG"], $P5189
    set $P5188, $P5189
  vivi_11572158:
    unless_null $P5188, vivi_11582159
    die "Contextual %*REG not found"
    box $P5190, "Contextual %*REG not found"
    set $P5188, $P5190
  vivi_11582159:
    set $P103, $P5188
  fallback2155:
    set fb_tmp_317, $P103
    repr_defined $I5027, fb_tmp_317
    unless $I5027 goto if1155_else2153 
    set $P5191, fb_tmp_317["cur"]
    set $P5193, $P5191
    goto if1155_end2154
  if1155_else2153:
    null $P5192
    set $P5193, $P5192
  if1155_end2154:
    unless_null $P5193, vivi_11592160
    nqp_get_sc_object $P5194, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5193, $P5194
  vivi_11592160:
    $P101."push_pirop"("store_lex", utf8:"unicode:\"$\\x{a2}\"", $P5193)
.annotate 'line', 3401
    unless_null $P103, fallback2163
    nqp_get_sc_object $P5196, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5195, $P5196
    set pkg_viv_tmp_23, $P5195
    set fb_tmp_320, pkg_viv_tmp_23
    repr_defined $I5030, fb_tmp_320
    unless $I5030 goto if1161_else2164 
    set $P5197, fb_tmp_320["%REG"]
    set $P5199, $P5197
    goto if1161_end2165
  if1161_else2164:
    null $P5198
    set $P5199, $P5198
  if1161_end2165:
    unless_null $P5199, vivi_11622166
    new $P5200, 'Hash'
    set pkg_viv_tmp_23["%REG"], $P5200
    set $P5199, $P5200
  vivi_11622166:
    unless_null $P5199, vivi_11632167
    die "Contextual %*REG not found"
    box $P5201, "Contextual %*REG not found"
    set $P5199, $P5201
  vivi_11632167:
    set $P103, $P5199
  fallback2163:
    set fb_tmp_319, $P103
    repr_defined $I5029, fb_tmp_319
    unless $I5029 goto if1160_else2161 
    set $P5202, fb_tmp_319["eos"]
    set $P5204, $P5202
    goto if1160_end2162
  if1160_else2161:
    null $P5203
    set $P5204, $P5203
  if1160_end2162:
    unless_null $P5204, vivi_11642168
    nqp_get_sc_object $P5205, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5204, $P5205
  vivi_11642168:
    unless_null $P103, fallback2171
    nqp_get_sc_object $P5207, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5206, $P5207
    set pkg_viv_tmp_24, $P5206
    set fb_tmp_322, pkg_viv_tmp_24
    repr_defined $I5032, fb_tmp_322
    unless $I5032 goto if1166_else2172 
    set $P5208, fb_tmp_322["%REG"]
    set $P5210, $P5208
    goto if1166_end2173
  if1166_else2172:
    null $P5209
    set $P5210, $P5209
  if1166_end2173:
    unless_null $P5210, vivi_11672174
    new $P5211, 'Hash'
    set pkg_viv_tmp_24["%REG"], $P5211
    set $P5210, $P5211
  vivi_11672174:
    unless_null $P5210, vivi_11682175
    die "Contextual %*REG not found"
    box $P5212, "Contextual %*REG not found"
    set $P5210, $P5212
  vivi_11682175:
    set $P103, $P5210
  fallback2171:
    set fb_tmp_321, $P103
    repr_defined $I5031, fb_tmp_321
    unless $I5031 goto if1165_else2169 
    set $P5213, fb_tmp_321["tgt"]
    set $P5215, $P5213
    goto if1165_end2170
  if1165_else2169:
    null $P5214
    set $P5215, $P5214
  if1165_end2170:
    unless_null $P5215, vivi_11692176
    nqp_get_sc_object $P5216, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5215, $P5216
  vivi_11692176:
    $P101."push_pirop"("length", $P5204, $P5215)
.annotate 'line', 3402
    $P101."push_pirop"("eq", "$I19", 1, $P107)
.annotate 'line', 3403
    unless_null $P103, fallback2179
    nqp_get_sc_object $P5218, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5217, $P5218
    set pkg_viv_tmp_25, $P5217
    set fb_tmp_324, pkg_viv_tmp_25
    repr_defined $I5034, fb_tmp_324
    unless $I5034 goto if1171_else2180 
    set $P5219, fb_tmp_324["%REG"]
    set $P5221, $P5219
    goto if1171_end2181
  if1171_else2180:
    null $P5220
    set $P5221, $P5220
  if1171_end2181:
    unless_null $P5221, vivi_11722182
    new $P5222, 'Hash'
    set pkg_viv_tmp_25["%REG"], $P5222
    set $P5221, $P5222
  vivi_11722182:
    unless_null $P5221, vivi_11732183
    die "Contextual %*REG not found"
    box $P5223, "Contextual %*REG not found"
    set $P5221, $P5223
  vivi_11732183:
    set $P103, $P5221
  fallback2179:
    set fb_tmp_323, $P103
    repr_defined $I5033, fb_tmp_323
    unless $I5033 goto if1170_else2177 
    set $P5224, fb_tmp_323["pos"]
    set $P5226, $P5224
    goto if1170_end2178
  if1170_else2177:
    null $P5225
    set $P5226, $P5225
  if1170_end2178:
    unless_null $P5226, vivi_11742184
    nqp_get_sc_object $P5227, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5226, $P5227
  vivi_11742184:
    unless_null $P103, fallback2187
    nqp_get_sc_object $P5229, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5228, $P5229
    set pkg_viv_tmp_26, $P5228
    set fb_tmp_326, pkg_viv_tmp_26
    repr_defined $I5036, fb_tmp_326
    unless $I5036 goto if1176_else2188 
    set $P5230, fb_tmp_326["%REG"]
    set $P5232, $P5230
    goto if1176_end2189
  if1176_else2188:
    null $P5231
    set $P5232, $P5231
  if1176_end2189:
    unless_null $P5232, vivi_11772190
    new $P5233, 'Hash'
    set pkg_viv_tmp_26["%REG"], $P5233
    set $P5232, $P5233
  vivi_11772190:
    unless_null $P5232, vivi_11782191
    die "Contextual %*REG not found"
    box $P5234, "Contextual %*REG not found"
    set $P5232, $P5234
  vivi_11782191:
    set $P103, $P5232
  fallback2187:
    set fb_tmp_325, $P103
    repr_defined $I5035, fb_tmp_325
    unless $I5035 goto if1175_else2185 
    set $P5235, fb_tmp_325["eos"]
    set $P5237, $P5235
    goto if1175_end2186
  if1175_else2185:
    null $P5236
    set $P5237, $P5236
  if1175_end2186:
    unless_null $P5237, vivi_11792192
    nqp_get_sc_object $P5238, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5237, $P5238
  vivi_11792192:
    unless_null $P103, fallback2195
    nqp_get_sc_object $P5240, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5239, $P5240
    set pkg_viv_tmp_27, $P5239
    set fb_tmp_328, pkg_viv_tmp_27
    repr_defined $I5038, fb_tmp_328
    unless $I5038 goto if1181_else2196 
    set $P5241, fb_tmp_328["%REG"]
    set $P5243, $P5241
    goto if1181_end2197
  if1181_else2196:
    null $P5242
    set $P5243, $P5242
  if1181_end2197:
    unless_null $P5243, vivi_11822198
    new $P5244, 'Hash'
    set pkg_viv_tmp_27["%REG"], $P5244
    set $P5243, $P5244
  vivi_11822198:
    unless_null $P5243, vivi_11832199
    die "Contextual %*REG not found"
    box $P5245, "Contextual %*REG not found"
    set $P5243, $P5245
  vivi_11832199:
    set $P103, $P5243
  fallback2195:
    set fb_tmp_327, $P103
    repr_defined $I5037, fb_tmp_327
    unless $I5037 goto if1180_else2193 
    set $P5246, fb_tmp_327["fail"]
    set $P5248, $P5246
    goto if1180_end2194
  if1180_else2193:
    null $P5247
    set $P5248, $P5247
  if1180_end2194:
    unless_null $P5248, vivi_11842200
    nqp_get_sc_object $P5249, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5248, $P5249
  vivi_11842200:
    $P101."push_pirop"("gt", $P5226, $P5237, $P5248)
.annotate 'line', 3404
    nqp_decontainerize $P5250, _lex_param_0
    $P5251 = $P5250."regex_post"(_lex_param_1)
    $P101."push"($P5251)
.annotate 'line', 3405
    $P101."push"($P107)
.annotate 'line', 3406
    unless_null $P103, fallback2203
    nqp_get_sc_object $P5253, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5252, $P5253
    set pkg_viv_tmp_28, $P5252
    set fb_tmp_330, pkg_viv_tmp_28
    repr_defined $I5040, fb_tmp_330
    unless $I5040 goto if1186_else2204 
    set $P5254, fb_tmp_330["%REG"]
    set $P5256, $P5254
    goto if1186_end2205
  if1186_else2204:
    null $P5255
    set $P5256, $P5255
  if1186_end2205:
    unless_null $P5256, vivi_11872206
    new $P5257, 'Hash'
    set pkg_viv_tmp_28["%REG"], $P5257
    set $P5256, $P5257
  vivi_11872206:
    unless_null $P5256, vivi_11882207
    die "Contextual %*REG not found"
    box $P5258, "Contextual %*REG not found"
    set $P5256, $P5258
  vivi_11882207:
    set $P103, $P5256
  fallback2203:
    set fb_tmp_329, $P103
    repr_defined $I5039, fb_tmp_329
    unless $I5039 goto if1185_else2201 
    set $P5259, fb_tmp_329["cstack"]
    set $P5261, $P5259
    goto if1185_end2202
  if1185_else2201:
    null $P5260
    set $P5261, $P5260
  if1185_end2202:
    unless_null $P5261, vivi_11892208
    nqp_get_sc_object $P5262, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5261, $P5262
  vivi_11892208:
    unless_null $P103, fallback2211
    nqp_get_sc_object $P5264, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5263, $P5264
    set pkg_viv_tmp_29, $P5263
    set fb_tmp_332, pkg_viv_tmp_29
    repr_defined $I5042, fb_tmp_332
    unless $I5042 goto if1191_else2212 
    set $P5265, fb_tmp_332["%REG"]
    set $P5267, $P5265
    goto if1191_end2213
  if1191_else2212:
    null $P5266
    set $P5267, $P5266
  if1191_end2213:
    unless_null $P5267, vivi_11922214
    new $P5268, 'Hash'
    set pkg_viv_tmp_29["%REG"], $P5268
    set $P5267, $P5268
  vivi_11922214:
    unless_null $P5267, vivi_11932215
    die "Contextual %*REG not found"
    box $P5269, "Contextual %*REG not found"
    set $P5267, $P5269
  vivi_11932215:
    set $P103, $P5267
  fallback2211:
    set fb_tmp_331, $P103
    repr_defined $I5041, fb_tmp_331
    unless $I5041 goto if1190_else2209 
    set $P5270, fb_tmp_331["cur"]
    set $P5272, $P5270
    goto if1190_end2210
  if1190_else2209:
    null $P5271
    set $P5272, $P5271
  if1190_end2210:
    unless_null $P5272, vivi_11942216
    nqp_get_sc_object $P5273, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5272, $P5273
  vivi_11942216:
    unless_null $P103, fallback2219
    nqp_get_sc_object $P5275, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5274, $P5275
    set pkg_viv_tmp_30, $P5274
    set fb_tmp_334, pkg_viv_tmp_30
    repr_defined $I5044, fb_tmp_334
    unless $I5044 goto if1196_else2220 
    set $P5276, fb_tmp_334["%REG"]
    set $P5278, $P5276
    goto if1196_end2221
  if1196_else2220:
    null $P5277
    set $P5278, $P5277
  if1196_end2221:
    unless_null $P5278, vivi_11972222
    new $P5279, 'Hash'
    set pkg_viv_tmp_30["%REG"], $P5279
    set $P5278, $P5279
  vivi_11972222:
    unless_null $P5278, vivi_11982223
    die "Contextual %*REG not found"
    box $P5280, "Contextual %*REG not found"
    set $P5278, $P5280
  vivi_11982223:
    set $P103, $P5278
  fallback2219:
    set fb_tmp_333, $P103
    repr_defined $I5043, fb_tmp_333
    unless $I5043 goto if1195_else2217 
    set $P5281, fb_tmp_333["curclass"]
    set $P5283, $P5281
    goto if1195_end2218
  if1195_else2217:
    null $P5282
    set $P5283, $P5282
  if1195_end2218:
    unless_null $P5283, vivi_11992224
    nqp_get_sc_object $P5284, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5283, $P5284
  vivi_11992224:
    $P101."push_pirop"("repr_get_attr_obj", $P5261, $P5272, $P5283, "\"$!cstack\"")
.annotate 'line', 3407
    $P101."push"($P108)
.annotate 'line', 3408
    unless_null $P103, fallback2227
    nqp_get_sc_object $P5286, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5285, $P5286
    set pkg_viv_tmp_31, $P5285
    set fb_tmp_336, pkg_viv_tmp_31
    repr_defined $I5046, fb_tmp_336
    unless $I5046 goto if1201_else2228 
    set $P5287, fb_tmp_336["%REG"]
    set $P5289, $P5287
    goto if1201_end2229
  if1201_else2228:
    null $P5288
    set $P5289, $P5288
  if1201_end2229:
    unless_null $P5289, vivi_12022230
    new $P5290, 'Hash'
    set pkg_viv_tmp_31["%REG"], $P5290
    set $P5289, $P5290
  vivi_12022230:
    unless_null $P5289, vivi_12032231
    die "Contextual %*REG not found"
    box $P5291, "Contextual %*REG not found"
    set $P5289, $P5291
  vivi_12032231:
    set $P103, $P5289
  fallback2227:
    set fb_tmp_335, $P103
    repr_defined $I5045, fb_tmp_335
    unless $I5045 goto if1200_else2225 
    set $P5292, fb_tmp_335["bstack"]
    set $P5294, $P5292
    goto if1200_end2226
  if1200_else2225:
    null $P5293
    set $P5294, $P5293
  if1200_end2226:
    unless_null $P5294, vivi_12042232
    nqp_get_sc_object $P5295, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5294, $P5295
  vivi_12042232:
    $P101."push_pirop"("unless", $P5294, $P106)
.annotate 'line', 3409
    unless_null $P103, fallback2235
    nqp_get_sc_object $P5297, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5296, $P5297
    set pkg_viv_tmp_32, $P5296
    set fb_tmp_338, pkg_viv_tmp_32
    repr_defined $I5048, fb_tmp_338
    unless $I5048 goto if1206_else2236 
    set $P5298, fb_tmp_338["%REG"]
    set $P5300, $P5298
    goto if1206_end2237
  if1206_else2236:
    null $P5299
    set $P5300, $P5299
  if1206_end2237:
    unless_null $P5300, vivi_12072238
    new $P5301, 'Hash'
    set pkg_viv_tmp_32["%REG"], $P5301
    set $P5300, $P5301
  vivi_12072238:
    unless_null $P5300, vivi_12082239
    die "Contextual %*REG not found"
    box $P5302, "Contextual %*REG not found"
    set $P5300, $P5302
  vivi_12082239:
    set $P103, $P5300
  fallback2235:
    set fb_tmp_337, $P103
    repr_defined $I5047, fb_tmp_337
    unless $I5047 goto if1205_else2233 
    set $P5303, fb_tmp_337["bstack"]
    set $P5305, $P5303
    goto if1205_end2234
  if1205_else2233:
    null $P5304
    set $P5305, $P5304
  if1205_end2234:
    unless_null $P5305, vivi_12092240
    nqp_get_sc_object $P5306, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5305, $P5306
  vivi_12092240:
    $P101."push_pirop"("pop", "$I19", $P5305)
.annotate 'line', 3410
    unless_null $P103, fallback2243
    nqp_get_sc_object $P5308, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5307, $P5308
    set pkg_viv_tmp_33, $P5307
    set fb_tmp_340, pkg_viv_tmp_33
    repr_defined $I5050, fb_tmp_340
    unless $I5050 goto if1211_else2244 
    set $P5309, fb_tmp_340["%REG"]
    set $P5311, $P5309
    goto if1211_end2245
  if1211_else2244:
    null $P5310
    set $P5311, $P5310
  if1211_end2245:
    unless_null $P5311, vivi_12122246
    new $P5312, 'Hash'
    set pkg_viv_tmp_33["%REG"], $P5312
    set $P5311, $P5312
  vivi_12122246:
    unless_null $P5311, vivi_12132247
    die "Contextual %*REG not found"
    box $P5313, "Contextual %*REG not found"
    set $P5311, $P5313
  vivi_12132247:
    set $P103, $P5311
  fallback2243:
    set fb_tmp_339, $P103
    repr_defined $I5049, fb_tmp_339
    unless $I5049 goto if1210_else2241 
    set $P5314, fb_tmp_339["cstack"]
    set $P5316, $P5314
    goto if1210_end2242
  if1210_else2241:
    null $P5315
    set $P5316, $P5315
  if1210_end2242:
    unless_null $P5316, vivi_12142248
    nqp_get_sc_object $P5317, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5316, $P5317
  vivi_12142248:
    $P101."push_pirop"("if_null", $P5316, $P111)
.annotate 'line', 3411
    unless_null $P103, fallback2251
    nqp_get_sc_object $P5319, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5318, $P5319
    set pkg_viv_tmp_34, $P5318
    set fb_tmp_342, pkg_viv_tmp_34
    repr_defined $I5052, fb_tmp_342
    unless $I5052 goto if1216_else2252 
    set $P5320, fb_tmp_342["%REG"]
    set $P5322, $P5320
    goto if1216_end2253
  if1216_else2252:
    null $P5321
    set $P5322, $P5321
  if1216_end2253:
    unless_null $P5322, vivi_12172254
    new $P5323, 'Hash'
    set pkg_viv_tmp_34["%REG"], $P5323
    set $P5322, $P5323
  vivi_12172254:
    unless_null $P5322, vivi_12182255
    die "Contextual %*REG not found"
    box $P5324, "Contextual %*REG not found"
    set $P5322, $P5324
  vivi_12182255:
    set $P103, $P5322
  fallback2251:
    set fb_tmp_341, $P103
    repr_defined $I5051, fb_tmp_341
    unless $I5051 goto if1215_else2249 
    set $P5325, fb_tmp_341["cstack"]
    set $P5327, $P5325
    goto if1215_end2250
  if1215_else2249:
    null $P5326
    set $P5327, $P5326
  if1215_end2250:
    unless_null $P5327, vivi_12192256
    nqp_get_sc_object $P5328, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5327, $P5328
  vivi_12192256:
    $P101."push_pirop"("unless", $P5327, $P111)
.annotate 'line', 3412
    $P101."push_pirop"("dec", "$I19")
.annotate 'line', 3413
    unless_null $P103, fallback2259
    nqp_get_sc_object $P5330, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5329, $P5330
    set pkg_viv_tmp_35, $P5329
    set fb_tmp_344, pkg_viv_tmp_35
    repr_defined $I5054, fb_tmp_344
    unless $I5054 goto if1221_else2260 
    set $P5331, fb_tmp_344["%REG"]
    set $P5333, $P5331
    goto if1221_end2261
  if1221_else2260:
    null $P5332
    set $P5333, $P5332
  if1221_end2261:
    unless_null $P5333, vivi_12222262
    new $P5334, 'Hash'
    set pkg_viv_tmp_35["%REG"], $P5334
    set $P5333, $P5334
  vivi_12222262:
    unless_null $P5333, vivi_12232263
    die "Contextual %*REG not found"
    box $P5335, "Contextual %*REG not found"
    set $P5333, $P5335
  vivi_12232263:
    set $P103, $P5333
  fallback2259:
    set fb_tmp_343, $P103
    repr_defined $I5053, fb_tmp_343
    unless $I5053 goto if1220_else2257 
    set $P5336, fb_tmp_343["cstack"]
    set $P5338, $P5336
    goto if1220_end2258
  if1220_else2257:
    null $P5337
    set $P5338, $P5337
  if1220_end2258:
    unless_null $P5338, vivi_12242264
    nqp_get_sc_object $P5339, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5338, $P5339
  vivi_12242264:
    set $S5030, $P5338
    concat $S5029, $S5030, "[$I19]"
    $P101."push_pirop"("set", "$P11", $S5029)
.annotate 'line', 3414
    $P101."push"($P111)
.annotate 'line', 3415
    unless_null $P103, fallback2267
    nqp_get_sc_object $P5341, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5340, $P5341
    set pkg_viv_tmp_36, $P5340
    set fb_tmp_346, pkg_viv_tmp_36
    repr_defined $I5056, fb_tmp_346
    unless $I5056 goto if1226_else2268 
    set $P5342, fb_tmp_346["%REG"]
    set $P5344, $P5342
    goto if1226_end2269
  if1226_else2268:
    null $P5343
    set $P5344, $P5343
  if1226_end2269:
    unless_null $P5344, vivi_12272270
    new $P5345, 'Hash'
    set pkg_viv_tmp_36["%REG"], $P5345
    set $P5344, $P5345
  vivi_12272270:
    unless_null $P5344, vivi_12282271
    die "Contextual %*REG not found"
    box $P5346, "Contextual %*REG not found"
    set $P5344, $P5346
  vivi_12282271:
    set $P103, $P5344
  fallback2267:
    set fb_tmp_345, $P103
    repr_defined $I5055, fb_tmp_345
    unless $I5055 goto if1225_else2265 
    set $P5347, fb_tmp_345["rep"]
    set $P5349, $P5347
    goto if1225_end2266
  if1225_else2265:
    null $P5348
    set $P5349, $P5348
  if1225_end2266:
    unless_null $P5349, vivi_12292272
    nqp_get_sc_object $P5350, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5349, $P5350
  vivi_12292272:
    unless_null $P103, fallback2275
    nqp_get_sc_object $P5352, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5351, $P5352
    set pkg_viv_tmp_37, $P5351
    set fb_tmp_348, pkg_viv_tmp_37
    repr_defined $I5058, fb_tmp_348
    unless $I5058 goto if1231_else2276 
    set $P5353, fb_tmp_348["%REG"]
    set $P5355, $P5353
    goto if1231_end2277
  if1231_else2276:
    null $P5354
    set $P5355, $P5354
  if1231_end2277:
    unless_null $P5355, vivi_12322278
    new $P5356, 'Hash'
    set pkg_viv_tmp_37["%REG"], $P5356
    set $P5355, $P5356
  vivi_12322278:
    unless_null $P5355, vivi_12332279
    die "Contextual %*REG not found"
    box $P5357, "Contextual %*REG not found"
    set $P5355, $P5357
  vivi_12332279:
    set $P103, $P5355
  fallback2275:
    set fb_tmp_347, $P103
    repr_defined $I5057, fb_tmp_347
    unless $I5057 goto if1230_else2273 
    set $P5358, fb_tmp_347["bstack"]
    set $P5360, $P5358
    goto if1230_end2274
  if1230_else2273:
    null $P5359
    set $P5360, $P5359
  if1230_end2274:
    unless_null $P5360, vivi_12342280
    nqp_get_sc_object $P5361, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5360, $P5361
  vivi_12342280:
    $P101."push_pirop"("pop", $P5349, $P5360)
.annotate 'line', 3416
    unless_null $P103, fallback2283
    nqp_get_sc_object $P5363, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5362, $P5363
    set pkg_viv_tmp_38, $P5362
    set fb_tmp_350, pkg_viv_tmp_38
    repr_defined $I5060, fb_tmp_350
    unless $I5060 goto if1236_else2284 
    set $P5364, fb_tmp_350["%REG"]
    set $P5366, $P5364
    goto if1236_end2285
  if1236_else2284:
    null $P5365
    set $P5366, $P5365
  if1236_end2285:
    unless_null $P5366, vivi_12372286
    new $P5367, 'Hash'
    set pkg_viv_tmp_38["%REG"], $P5367
    set $P5366, $P5367
  vivi_12372286:
    unless_null $P5366, vivi_12382287
    die "Contextual %*REG not found"
    box $P5368, "Contextual %*REG not found"
    set $P5366, $P5368
  vivi_12382287:
    set $P103, $P5366
  fallback2283:
    set fb_tmp_349, $P103
    repr_defined $I5059, fb_tmp_349
    unless $I5059 goto if1235_else2281 
    set $P5369, fb_tmp_349["pos"]
    set $P5371, $P5369
    goto if1235_end2282
  if1235_else2281:
    null $P5370
    set $P5371, $P5370
  if1235_end2282:
    unless_null $P5371, vivi_12392288
    nqp_get_sc_object $P5372, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5371, $P5372
  vivi_12392288:
    unless_null $P103, fallback2291
    nqp_get_sc_object $P5374, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5373, $P5374
    set pkg_viv_tmp_39, $P5373
    set fb_tmp_352, pkg_viv_tmp_39
    repr_defined $I5062, fb_tmp_352
    unless $I5062 goto if1241_else2292 
    set $P5375, fb_tmp_352["%REG"]
    set $P5377, $P5375
    goto if1241_end2293
  if1241_else2292:
    null $P5376
    set $P5377, $P5376
  if1241_end2293:
    unless_null $P5377, vivi_12422294
    new $P5378, 'Hash'
    set pkg_viv_tmp_39["%REG"], $P5378
    set $P5377, $P5378
  vivi_12422294:
    unless_null $P5377, vivi_12432295
    die "Contextual %*REG not found"
    box $P5379, "Contextual %*REG not found"
    set $P5377, $P5379
  vivi_12432295:
    set $P103, $P5377
  fallback2291:
    set fb_tmp_351, $P103
    repr_defined $I5061, fb_tmp_351
    unless $I5061 goto if1240_else2289 
    set $P5380, fb_tmp_351["bstack"]
    set $P5382, $P5380
    goto if1240_end2290
  if1240_else2289:
    null $P5381
    set $P5382, $P5381
  if1240_end2290:
    unless_null $P5382, vivi_12442296
    nqp_get_sc_object $P5383, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5382, $P5383
  vivi_12442296:
    $P101."push_pirop"("pop", $P5371, $P5382)
.annotate 'line', 3417
    unless_null $P103, fallback2299
    nqp_get_sc_object $P5385, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5384, $P5385
    set pkg_viv_tmp_40, $P5384
    set fb_tmp_354, pkg_viv_tmp_40
    repr_defined $I5064, fb_tmp_354
    unless $I5064 goto if1246_else2300 
    set $P5386, fb_tmp_354["%REG"]
    set $P5388, $P5386
    goto if1246_end2301
  if1246_else2300:
    null $P5387
    set $P5388, $P5387
  if1246_end2301:
    unless_null $P5388, vivi_12472302
    new $P5389, 'Hash'
    set pkg_viv_tmp_40["%REG"], $P5389
    set $P5388, $P5389
  vivi_12472302:
    unless_null $P5388, vivi_12482303
    die "Contextual %*REG not found"
    box $P5390, "Contextual %*REG not found"
    set $P5388, $P5390
  vivi_12482303:
    set $P103, $P5388
  fallback2299:
    set fb_tmp_353, $P103
    repr_defined $I5063, fb_tmp_353
    unless $I5063 goto if1245_else2297 
    set $P5391, fb_tmp_353["bstack"]
    set $P5393, $P5391
    goto if1245_end2298
  if1245_else2297:
    null $P5392
    set $P5393, $P5392
  if1245_end2298:
    unless_null $P5393, vivi_12492304
    nqp_get_sc_object $P5394, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5393, $P5394
  vivi_12492304:
    $P101."push_pirop"("pop", "$I19", $P5393)
.annotate 'line', 3418
    unless_null $P103, fallback2307
    nqp_get_sc_object $P5396, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5395, $P5396
    set pkg_viv_tmp_41, $P5395
    set fb_tmp_356, pkg_viv_tmp_41
    repr_defined $I5066, fb_tmp_356
    unless $I5066 goto if1251_else2308 
    set $P5397, fb_tmp_356["%REG"]
    set $P5399, $P5397
    goto if1251_end2309
  if1251_else2308:
    null $P5398
    set $P5399, $P5398
  if1251_end2309:
    unless_null $P5399, vivi_12522310
    new $P5400, 'Hash'
    set pkg_viv_tmp_41["%REG"], $P5400
    set $P5399, $P5400
  vivi_12522310:
    unless_null $P5399, vivi_12532311
    die "Contextual %*REG not found"
    box $P5401, "Contextual %*REG not found"
    set $P5399, $P5401
  vivi_12532311:
    set $P103, $P5399
  fallback2307:
    set fb_tmp_355, $P103
    repr_defined $I5065, fb_tmp_355
    unless $I5065 goto if1250_else2305 
    set $P5402, fb_tmp_355["pos"]
    set $P5404, $P5402
    goto if1250_end2306
  if1250_else2305:
    null $P5403
    set $P5404, $P5403
  if1250_end2306:
    unless_null $P5404, vivi_12542312
    nqp_get_sc_object $P5405, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5404, $P5405
  vivi_12542312:
    $P101."push_pirop"("lt", $P5404, -1, $P106)
.annotate 'line', 3419
    unless_null $P103, fallback2315
    nqp_get_sc_object $P5407, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5406, $P5407
    set pkg_viv_tmp_42, $P5406
    set fb_tmp_358, pkg_viv_tmp_42
    repr_defined $I5068, fb_tmp_358
    unless $I5068 goto if1256_else2316 
    set $P5408, fb_tmp_358["%REG"]
    set $P5410, $P5408
    goto if1256_end2317
  if1256_else2316:
    null $P5409
    set $P5410, $P5409
  if1256_end2317:
    unless_null $P5410, vivi_12572318
    new $P5411, 'Hash'
    set pkg_viv_tmp_42["%REG"], $P5411
    set $P5410, $P5411
  vivi_12572318:
    unless_null $P5410, vivi_12582319
    die "Contextual %*REG not found"
    box $P5412, "Contextual %*REG not found"
    set $P5410, $P5412
  vivi_12582319:
    set $P103, $P5410
  fallback2315:
    set fb_tmp_357, $P103
    repr_defined $I5067, fb_tmp_357
    unless $I5067 goto if1255_else2313 
    set $P5413, fb_tmp_357["pos"]
    set $P5415, $P5413
    goto if1255_end2314
  if1255_else2313:
    null $P5414
    set $P5415, $P5414
  if1255_end2314:
    unless_null $P5415, vivi_12592320
    nqp_get_sc_object $P5416, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5415, $P5416
  vivi_12592320:
    $P101."push_pirop"("lt", $P5415, 0, $P108)
.annotate 'line', 3420
    $P101."push_pirop"("eq", "$I19", 0, $P108)
.annotate 'line', 3422
    unless_null $P103, fallback2323
    nqp_get_sc_object $P5418, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5417, $P5418
    set pkg_viv_tmp_43, $P5417
    set fb_tmp_360, pkg_viv_tmp_43
    repr_defined $I5070, fb_tmp_360
    unless $I5070 goto if1261_else2324 
    set $P5419, fb_tmp_360["%REG"]
    set $P5421, $P5419
    goto if1261_end2325
  if1261_else2324:
    null $P5420
    set $P5421, $P5420
  if1261_end2325:
    unless_null $P5421, vivi_12622326
    new $P5422, 'Hash'
    set pkg_viv_tmp_43["%REG"], $P5422
    set $P5421, $P5422
  vivi_12622326:
    unless_null $P5421, vivi_12632327
    die "Contextual %*REG not found"
    box $P5423, "Contextual %*REG not found"
    set $P5421, $P5423
  vivi_12632327:
    set $P103, $P5421
  fallback2323:
    set fb_tmp_359, $P103
    repr_defined $I5069, fb_tmp_359
    unless $I5069 goto if1260_else2321 
    set $P5424, fb_tmp_359["cstack"]
    set $P5426, $P5424
    goto if1260_end2322
  if1260_else2321:
    null $P5425
    set $P5426, $P5425
  if1260_end2322:
    unless_null $P5426, vivi_12642328
    nqp_get_sc_object $P5427, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5426, $P5427
  vivi_12642328:
    $P101."push_pirop"("nqp_islist", "$I20", $P5426)
.annotate 'line', 3423
    $P101."push_pirop"("unless", "$I20", $P109)
.annotate 'line', 3424
    unless_null $P103, fallback2331
    nqp_get_sc_object $P5429, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5428, $P5429
    set pkg_viv_tmp_44, $P5428
    set fb_tmp_362, pkg_viv_tmp_44
    repr_defined $I5072, fb_tmp_362
    unless $I5072 goto if1266_else2332 
    set $P5430, fb_tmp_362["%REG"]
    set $P5432, $P5430
    goto if1266_end2333
  if1266_else2332:
    null $P5431
    set $P5432, $P5431
  if1266_end2333:
    unless_null $P5432, vivi_12672334
    new $P5433, 'Hash'
    set pkg_viv_tmp_44["%REG"], $P5433
    set $P5432, $P5433
  vivi_12672334:
    unless_null $P5432, vivi_12682335
    die "Contextual %*REG not found"
    box $P5434, "Contextual %*REG not found"
    set $P5432, $P5434
  vivi_12682335:
    set $P103, $P5432
  fallback2331:
    set fb_tmp_361, $P103
    repr_defined $I5071, fb_tmp_361
    unless $I5071 goto if1265_else2329 
    set $P5435, fb_tmp_361["bstack"]
    set $P5437, $P5435
    goto if1265_end2330
  if1265_else2329:
    null $P5436
    set $P5437, $P5436
  if1265_end2330:
    unless_null $P5437, vivi_12692336
    nqp_get_sc_object $P5438, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5437, $P5438
  vivi_12692336:
    $P101."push_pirop"("elements", "$I18", $P5437)
.annotate 'line', 3425
    $P101."push_pirop"("le", "$I18", 0, $P110)
.annotate 'line', 3426
    $P101."push_pirop"("dec", "$I18")
.annotate 'line', 3427
    unless_null $P103, fallback2339
    nqp_get_sc_object $P5440, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5439, $P5440
    set pkg_viv_tmp_45, $P5439
    set fb_tmp_364, pkg_viv_tmp_45
    repr_defined $I5074, fb_tmp_364
    unless $I5074 goto if1271_else2340 
    set $P5441, fb_tmp_364["%REG"]
    set $P5443, $P5441
    goto if1271_end2341
  if1271_else2340:
    null $P5442
    set $P5443, $P5442
  if1271_end2341:
    unless_null $P5443, vivi_12722342
    new $P5444, 'Hash'
    set pkg_viv_tmp_45["%REG"], $P5444
    set $P5443, $P5444
  vivi_12722342:
    unless_null $P5443, vivi_12732343
    die "Contextual %*REG not found"
    box $P5445, "Contextual %*REG not found"
    set $P5443, $P5445
  vivi_12732343:
    set $P103, $P5443
  fallback2339:
    set fb_tmp_363, $P103
    repr_defined $I5073, fb_tmp_363
    unless $I5073 goto if1270_else2337 
    set $P5446, fb_tmp_363["bstack"]
    set $P5448, $P5446
    goto if1270_end2338
  if1270_else2337:
    null $P5447
    set $P5448, $P5447
  if1270_end2338:
    unless_null $P5448, vivi_12742344
    nqp_get_sc_object $P5449, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5448, $P5449
  vivi_12742344:
    set $S5032, $P5448
    concat $S5031, $S5032, "[$I18]"
    $P101."push_pirop"("set", "$I18", $S5031)
.annotate 'line', 3428
    $P101."push"($P110)
.annotate 'line', 3429
    unless_null $P103, fallback2347
    nqp_get_sc_object $P5451, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5450, $P5451
    set pkg_viv_tmp_46, $P5450
    set fb_tmp_366, pkg_viv_tmp_46
    repr_defined $I5076, fb_tmp_366
    unless $I5076 goto if1276_else2348 
    set $P5452, fb_tmp_366["%REG"]
    set $P5454, $P5452
    goto if1276_end2349
  if1276_else2348:
    null $P5453
    set $P5454, $P5453
  if1276_end2349:
    unless_null $P5454, vivi_12772350
    new $P5455, 'Hash'
    set pkg_viv_tmp_46["%REG"], $P5455
    set $P5454, $P5455
  vivi_12772350:
    unless_null $P5454, vivi_12782351
    die "Contextual %*REG not found"
    box $P5456, "Contextual %*REG not found"
    set $P5454, $P5456
  vivi_12782351:
    set $P103, $P5454
  fallback2347:
    set fb_tmp_365, $P103
    repr_defined $I5075, fb_tmp_365
    unless $I5075 goto if1275_else2345 
    set $P5457, fb_tmp_365["cstack"]
    set $P5459, $P5457
    goto if1275_end2346
  if1275_else2345:
    null $P5458
    set $P5459, $P5458
  if1275_end2346:
    unless_null $P5459, vivi_12792352
    nqp_get_sc_object $P5460, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5459, $P5460
  vivi_12792352:
    $P101."push_pirop"("assign", $P5459, "$I18")
.annotate 'line', 3430
    $P101."push"($P109)
.annotate 'line', 3431
    $P101."push_pirop"("jump", "$I19")
.annotate 'line', 3432
    $P101."push"($P106)
.annotate 'line', 3433
    unless_null $P103, fallback2355
    nqp_get_sc_object $P5462, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5461, $P5462
    set pkg_viv_tmp_47, $P5461
    set fb_tmp_368, pkg_viv_tmp_47
    repr_defined $I5078, fb_tmp_368
    unless $I5078 goto if1281_else2356 
    set $P5463, fb_tmp_368["%REG"]
    set $P5465, $P5463
    goto if1281_end2357
  if1281_else2356:
    null $P5464
    set $P5465, $P5464
  if1281_end2357:
    unless_null $P5465, vivi_12822358
    new $P5466, 'Hash'
    set pkg_viv_tmp_47["%REG"], $P5466
    set $P5465, $P5466
  vivi_12822358:
    unless_null $P5465, vivi_12832359
    die "Contextual %*REG not found"
    box $P5467, "Contextual %*REG not found"
    set $P5465, $P5467
  vivi_12832359:
    set $P103, $P5465
  fallback2355:
    set fb_tmp_367, $P103
    repr_defined $I5077, fb_tmp_367
    unless $I5077 goto if1280_else2353 
    set $P5468, fb_tmp_367["cur"]
    set $P5470, $P5468
    goto if1280_end2354
  if1280_else2353:
    null $P5469
    set $P5470, $P5469
  if1280_end2354:
    unless_null $P5470, vivi_12842360
    nqp_get_sc_object $P5471, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5470, $P5471
  vivi_12842360:
    $P101."push_pirop"("callmethod", "\"!cursor_fail\"", $P5470)
.annotate 'line', 3435
    unless_null $P103, fallback2363
    nqp_get_sc_object $P5473, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5472, $P5473
    set pkg_viv_tmp_48, $P5472
    set fb_tmp_370, pkg_viv_tmp_48
    repr_defined $I5080, fb_tmp_370
    unless $I5080 goto if1286_else2364 
    set $P5474, fb_tmp_370["%REG"]
    set $P5476, $P5474
    goto if1286_end2365
  if1286_else2364:
    null $P5475
    set $P5476, $P5475
  if1286_end2365:
    unless_null $P5476, vivi_12872366
    new $P5477, 'Hash'
    set pkg_viv_tmp_48["%REG"], $P5477
    set $P5476, $P5477
  vivi_12872366:
    unless_null $P5476, vivi_12882367
    die "Contextual %*REG not found"
    box $P5478, "Contextual %*REG not found"
    set $P5476, $P5478
  vivi_12882367:
    set $P103, $P5476
  fallback2363:
    set fb_tmp_369, $P103
    repr_defined $I5079, fb_tmp_369
    unless $I5079 goto if1285_else2361 
    set $P5479, fb_tmp_369["cur"]
    set $P5481, $P5479
    goto if1285_end2362
  if1285_else2361:
    null $P5480
    set $P5481, $P5480
  if1285_end2362:
    unless_null $P5481, vivi_12892368
    nqp_get_sc_object $P5482, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5481, $P5482
  vivi_12892368:
    $P101."result"($P5481)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_351_1361964166.213") :anon :lex :outer("cuid_115_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3376
    .lex "$reg", $P101 
    .lex "$name", $P102 
    .local pmc fb_tmp_291 
    .local pmc pkg_viv_tmp_8 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    find_lex $P5004, "$reglist"
    shift $P5003, $P5004
    set $P101, $P5003
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2047
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_8, $P5006
    set fb_tmp_291, pkg_viv_tmp_8
    repr_defined $I5001, fb_tmp_291
    unless $I5001 goto if1089_else2048 
    set $P5008, fb_tmp_291["%REG"]
    set $P5010, $P5008
    goto if1089_end2049
  if1089_else2048:
    null $P5009
    set $P5010, $P5009
  if1089_end2049:
    unless_null $P5010, vivi_10902050
    new $P5011, 'Hash'
    set pkg_viv_tmp_8["%REG"], $P5011
    set $P5010, $P5011
  vivi_10902050:
    unless_null $P5010, vivi_10912051
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_10912051:
    set $P5005, $P5010
  fallback2047:
    set $S5001, $P101
    find_lex $P5013, "$prefix"
    set $S5003, $P5013
    set $S5004, $P101
    concat $S5002, $S5003, $S5004
    box $P5014, $S5002
    set $P5005[$S5001], $P5014
    set $P102, $P5014
.annotate 'line', 3379
    find_lex $P5015, "$ops"
    find_lex $P5017, "$reglist"
    shift $P5016, $P5017
    set $S5006, $P5016
    concat $S5005, ".local ", $S5006
    $P5018 = $P5015."push_pirop"($S5005, $P102)
    .return ($P5018) 
.end
.HLL "nqp"
.namespace []
.sub "children" :subid("cuid_116_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3439
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5013 = 'cuid_352_1361964166.213' 
    capture_lex $P5013 
    .lex "$posts", $P101 
    .lex "@results", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
.annotate 'line', 3440
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5004 = $P5003."new"()
    set $P101, $P5004
    $P5008 = _lex_param_1."list"()
    set $P5005, $P5008
    iter $P5007, $P5008
  for_next2370:
    unless $P5007, for_done2372
    shift $P5010, $P5007
  for_redo2371:
    .const 'Sub' $P5009 = 'cuid_352_1361964166.213' 
    capture_lex $P5009
    $P5005 = $P5009($P5010)
    goto for_next2370
  for_done2372:
    new $P5011, 'ResizablePMCArray'
    push $P5011, $P101
    push $P5011, $P102
    new $P5012, 'ResizablePMCArray'
    push $P5011, $P5012
    .return ($P5011) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_352_1361964166.213") :anon :lex :outer("cuid_116_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3442
    .param pmc _lex_param_0 
    .lex "$post", $P101 
    .lex "$_", _lex_param_0 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3443
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."as_post"(_lex_param_0)
    set $P101, $P5004
.annotate 'line', 3444
    find_lex $P5005, "$posts"
    $P5005."push"($P101)
.annotate 'line', 3445
    find_lex $P5006, "@results"
    $P5007 = $P101."result"()
    $P5008 = $P5006."push"($P5007)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "regex_post" :subid("cuid_117_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3450
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$rxtype", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3451
    $P5002 = _lex_param_1."rxtype"()
    set $P5003, $P5002
    if $P5002 goto unless1290_end2374 
    box $P5004, "concat"
    set $P5003, $P5004
  unless1290_end2374:
    set $P101, $P5003
.annotate 'line', 3452
    nqp_decontainerize $P5005, _lex_param_0
    set $S5001, $P101
    $P5006 = $P5005.$S5001(_lex_param_1)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "post_new" :subid("cuid_118_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3455
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :slurpy 
    .param pmc _lex_param_3 :slurpy :named 
    .lex "self", _lex_param_0 
    .lex "$type", _lex_param_1 
    .lex "@args", _lex_param_2 
    .lex "%options", _lex_param_3 
    .local pmc fb_tmp_371 
    .local pmc fb_tmp_372 
.annotate 'line', 3456
    find_lex $P5003, "$?PACKAGE"
    get_who $P5002, $P5003
    set fb_tmp_372, $P5002
    repr_defined $I5002, fb_tmp_372
    unless $I5002 goto if1292_else2377 
    set $P5004, fb_tmp_372["PIRT"]
    set $P5006, $P5004
    goto if1292_end2378
  if1292_else2377:
    null $P5005
    set $P5006, $P5005
  if1292_end2378:
    unless_null $P5006, vivi_12942380
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set $P5007, $P5008["PIRT"]
    unless_null $P5007, vivi_12932379
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5007, $P5010
  vivi_12932379:
    set $P5006, $P5007
  vivi_12942380:
    get_who $P5001, $P5006
    set fb_tmp_371, $P5001
    repr_defined $I5001, fb_tmp_371
    unless $I5001 goto if1291_else2375 
    set $S5001, _lex_param_1
    set $P5011, fb_tmp_371[$S5001]
    set $P5013, $P5011
    goto if1291_end2376
  if1291_else2375:
    null $P5012
    set $P5013, $P5012
  if1291_end2376:
    unless_null $P5013, vivi_12952381
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_12952381:
    $P5015 = $P5013."new"(_lex_param_2 :flat, _lex_param_3 :flat :named)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "alt" :subid("cuid_119_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3459
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5083 = 'cuid_353_1361964166.213' 
    capture_lex $P5083 
    .lex "$prefix", $P101 
    .lex "$endlabel", $P102 
    .lex "$label_list_ops", $P103 
    .lex "$ops", $P104 
    .lex "$altcount", $P105 
    .lex "$iter", $P106 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_374 
    .local pmc pkg_viv_tmp_49 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    .local pmc pkg_viv_tmp_50 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc pkg_viv_tmp_51 
    .local pmc fb_tmp_379 
    .local pmc fb_tmp_380 
    .local pmc pkg_viv_tmp_52 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    root_new $P107, ['parrot';'Continuation']
    set_label $P107, lexotic_2382
    .lex "RETURN", $P107
.annotate 'line', 3460
    $P5007 = _lex_param_1."name"()
    if $P5007 goto unless1296_end2385 
.annotate 'line', 3461
    nqp_decontainerize $P5009, _lex_param_0
    $P5010 = $P5009."altseq"(_lex_param_1)
    find_lex $P5008, "RETURN"
    $P5011 = $P5008($P5010)
  unless1296_end2385:
.annotate 'line', 3466
    nqp_decontainerize $P5012, _lex_param_0
    $P5013 = $P5012."unique"("alt")
    set $S5002, $P5013
    concat $S5001, $S5002, "_"
    box $P5014, $S5001
    set $P101, $P5014
.annotate 'line', 3467
    nqp_decontainerize $P5015, _lex_param_0
    set $S5004, $P101
    concat $S5003, $S5004, "end"
    $P5016 = $P5015."post_new"("Label", $S5003 :named("name"))
    set $P102, $P5016
.annotate 'line', 3468
    nqp_decontainerize $P5017, _lex_param_0
    $P5018 = $P5017."post_new"("Ops", "$P11" :named("result"))
    set $P103, $P5018
.annotate 'line', 3469
    $P103."push_pirop"("new", "$P11", "\"ResizableIntegerArray\"")
.annotate 'line', 3470
    nqp_decontainerize $P5019, _lex_param_0
    find_dynamic_lex $P5020, "%*REG"
    unless_null $P5020, fallback2388
    nqp_get_sc_object $P5022, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_49, $P5021
    set fb_tmp_374, pkg_viv_tmp_49
    repr_defined $I5002, fb_tmp_374
    unless $I5002 goto if1298_else2389 
    set $P5023, fb_tmp_374["%REG"]
    set $P5025, $P5023
    goto if1298_end2390
  if1298_else2389:
    null $P5024
    set $P5025, $P5024
  if1298_end2390:
    unless_null $P5025, vivi_12992391
    new $P5026, 'Hash'
    set pkg_viv_tmp_49["%REG"], $P5026
    set $P5025, $P5026
  vivi_12992391:
    unless_null $P5025, vivi_13002392
    die "Contextual %*REG not found"
    box $P5027, "Contextual %*REG not found"
    set $P5025, $P5027
  vivi_13002392:
    set $P5020, $P5025
  fallback2388:
    set fb_tmp_373, $P5020
    repr_defined $I5001, fb_tmp_373
    unless $I5001 goto if1297_else2386 
    set $P5028, fb_tmp_373["cur"]
    set $P5030, $P5028
    goto if1297_end2387
  if1297_else2386:
    null $P5029
    set $P5030, $P5029
  if1297_end2387:
    unless_null $P5030, vivi_13012393
    nqp_get_sc_object $P5031, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5030, $P5031
  vivi_13012393:
    $P5032 = $P5019."post_new"("Ops", $P5030 :named("result"))
    set $P104, $P5032
.annotate 'line', 3471
    $P104."push"($P103)
.annotate 'line', 3472
    nqp_decontainerize $P5033, _lex_param_0
    $P5033."regex_mark"($P104, $P102, -1, 0)
.annotate 'line', 3473
    find_dynamic_lex $P5034, "%*REG"
    unless_null $P5034, fallback2396
    nqp_get_sc_object $P5036, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5035, $P5036
    set pkg_viv_tmp_50, $P5035
    set fb_tmp_376, pkg_viv_tmp_50
    repr_defined $I5004, fb_tmp_376
    unless $I5004 goto if1303_else2397 
    set $P5037, fb_tmp_376["%REG"]
    set $P5039, $P5037
    goto if1303_end2398
  if1303_else2397:
    null $P5038
    set $P5039, $P5038
  if1303_end2398:
    unless_null $P5039, vivi_13042399
    new $P5040, 'Hash'
    set pkg_viv_tmp_50["%REG"], $P5040
    set $P5039, $P5040
  vivi_13042399:
    unless_null $P5039, vivi_13052400
    die "Contextual %*REG not found"
    box $P5041, "Contextual %*REG not found"
    set $P5039, $P5041
  vivi_13052400:
    set $P5034, $P5039
  fallback2396:
    set fb_tmp_375, $P5034
    repr_defined $I5003, fb_tmp_375
    unless $I5003 goto if1302_else2394 
    set $P5042, fb_tmp_375["cur"]
    set $P5044, $P5042
    goto if1302_end2395
  if1302_else2394:
    null $P5043
    set $P5044, $P5043
  if1302_end2395:
    unless_null $P5044, vivi_13062401
    nqp_get_sc_object $P5045, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5044, $P5045
  vivi_13062401:
    find_dynamic_lex $P5046, "%*REG"
    unless_null $P5046, fallback2404
    nqp_get_sc_object $P5048, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_51, $P5047
    set fb_tmp_378, pkg_viv_tmp_51
    repr_defined $I5006, fb_tmp_378
    unless $I5006 goto if1308_else2405 
    set $P5049, fb_tmp_378["%REG"]
    set $P5051, $P5049
    goto if1308_end2406
  if1308_else2405:
    null $P5050
    set $P5051, $P5050
  if1308_end2406:
    unless_null $P5051, vivi_13092407
    new $P5052, 'Hash'
    set pkg_viv_tmp_51["%REG"], $P5052
    set $P5051, $P5052
  vivi_13092407:
    unless_null $P5051, vivi_13102408
    die "Contextual %*REG not found"
    box $P5053, "Contextual %*REG not found"
    set $P5051, $P5053
  vivi_13102408:
    set $P5046, $P5051
  fallback2404:
    set fb_tmp_377, $P5046
    repr_defined $I5005, fb_tmp_377
    unless $I5005 goto if1307_else2402 
    set $P5054, fb_tmp_377["pos"]
    set $P5056, $P5054
    goto if1307_end2403
  if1307_else2402:
    null $P5055
    set $P5056, $P5055
  if1307_end2403:
    unless_null $P5056, vivi_13112409
    nqp_get_sc_object $P5057, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5056, $P5057
  vivi_13112409:
.annotate 'line', 3474
    nqp_decontainerize $P5058, _lex_param_0
    $P5059 = _lex_param_1."name"()
    $P5060 = $P5058."escape"($P5059)
    $P5061 = $P103."result"()
    $P104."push_pirop"("callmethod", "\"!alt\"", $P5044, $P5056, $P5060, $P5061)
.annotate 'line', 3475
    find_dynamic_lex $P5062, "%*REG"
    unless_null $P5062, fallback2412
    nqp_get_sc_object $P5064, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_52, $P5063
    set fb_tmp_380, pkg_viv_tmp_52
    repr_defined $I5008, fb_tmp_380
    unless $I5008 goto if1313_else2413 
    set $P5065, fb_tmp_380["%REG"]
    set $P5067, $P5065
    goto if1313_end2414
  if1313_else2413:
    null $P5066
    set $P5067, $P5066
  if1313_end2414:
    unless_null $P5067, vivi_13142415
    new $P5068, 'Hash'
    set pkg_viv_tmp_52["%REG"], $P5068
    set $P5067, $P5068
  vivi_13142415:
    unless_null $P5067, vivi_13152416
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_13152416:
    set $P5062, $P5067
  fallback2412:
    set fb_tmp_379, $P5062
    repr_defined $I5007, fb_tmp_379
    unless $I5007 goto if1312_else2410 
    set $P5070, fb_tmp_379["fail"]
    set $P5072, $P5070
    goto if1312_end2411
  if1312_else2410:
    null $P5071
    set $P5072, $P5071
  if1312_end2411:
    unless_null $P5072, vivi_13162417
    nqp_get_sc_object $P5073, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5072, $P5073
  vivi_13162417:
    $P104."push_pirop"("goto", $P5072)
    box $P5074, 0
    set $P105, $P5074
.annotate 'line', 3479
    $P5076 = _lex_param_1."list"()
    iter $P5075, $P5076
    set $P106, $P5075
  while1317_test2418:
    set $P5079, $P106
    unless $P106 goto while1317_done2422 
  while1317_redo2420:
    .const 'Sub' $P5077 = 'cuid_353_1361964166.213' 
    capture_lex $P5077
    $P5078 = $P5077()
    set $P5079, $P5078
    goto while1317_test2418 
  while1317_done2422:
.annotate 'line', 3489
    $P104."push"($P102)
.annotate 'line', 3490
    $P5080 = _lex_param_1."backtrack"()
    set $S5005, $P5080
    iseq $I5009, $S5005, "r"
    unless $I5009 goto if1318_end2424 
    nqp_decontainerize $P5081, _lex_param_0
    $P5082 = $P5081."regex_commit"($P104, $P102)
  if1318_end2424:
    goto lexotic_2383
  lexotic_2382:
    .get_results ($P104)
  lexotic_2383:
    .return ($P104) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_353_1361964166.213") :anon :lex :outer("cuid_119_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3480
    .lex "$altlabel", $P101 
    .lex "$apost", $P102 
    .local pmc tmp_3 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 3481
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$prefix"
    set $S5002, $P5005
    find_lex $P5006, "$altcount"
    set $S5003, $P5006
    concat $S5001, $S5002, $S5003
    $P5007 = $P5003."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5007
.annotate 'line', 3482
    find_lex $P5009, "self"
    nqp_decontainerize $P5008, $P5009
    find_lex $P5011, "$iter"
    shift $P5010, $P5011
    $P5012 = $P5008."regex_post"($P5010)
    set $P102, $P5012
.annotate 'line', 3483
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3484
    find_lex $P5014, "$ops"
    $P5014."push"($P102)
.annotate 'line', 3485
    find_lex $P5015, "$ops"
    find_lex $P5016, "$endlabel"
    $P5015."push_pirop"("goto", $P5016)
.annotate 'line', 3486
    find_lex $P5017, "$label_list_ops"
    find_lex $P5018, "$label_list_ops"
    $P5019 = $P5018."result"()
    $P5020 = $P101."result"()
    $P5017."push_pirop"("nqp_push_label", $P5019, $P5020)
    find_lex $P5021, "$altcount"
    set tmp_3, $P5021
    set $N5002, tmp_3
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5022, $N5001
    store_lex "$altcount", $P5022
    .return (tmp_3) 
.end
.HLL "nqp"
.namespace []
.sub "altseq" :subid("cuid_120_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3494
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$altcount", $P103 
    .lex "$iter", $P104 
    .lex "$endlabel", $P105 
    .lex "$altlabel", $P106 
    .lex "$apost", $P107 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc pkg_viv_tmp_53 
    .local pmc tmp_4 
    .local pmc fb_tmp_383 
    .local pmc fb_tmp_384 
    .local pmc pkg_viv_tmp_54 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
.annotate 'line', 3495
    nqp_decontainerize $P5008, _lex_param_0
    find_dynamic_lex $P5009, "%*REG"
    unless_null $P5009, fallback2427
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_53, $P5010
    set fb_tmp_382, pkg_viv_tmp_53
    repr_defined $I5002, fb_tmp_382
    unless $I5002 goto if1320_else2428 
    set $P5012, fb_tmp_382["%REG"]
    set $P5014, $P5012
    goto if1320_end2429
  if1320_else2428:
    null $P5013
    set $P5014, $P5013
  if1320_end2429:
    unless_null $P5014, vivi_13212430
    new $P5015, 'Hash'
    set pkg_viv_tmp_53["%REG"], $P5015
    set $P5014, $P5015
  vivi_13212430:
    unless_null $P5014, vivi_13222431
    die "Contextual %*REG not found"
    box $P5016, "Contextual %*REG not found"
    set $P5014, $P5016
  vivi_13222431:
    set $P5009, $P5014
  fallback2427:
    set fb_tmp_381, $P5009
    repr_defined $I5001, fb_tmp_381
    unless $I5001 goto if1319_else2425 
    set $P5017, fb_tmp_381["cur"]
    set $P5019, $P5017
    goto if1319_end2426
  if1319_else2425:
    null $P5018
    set $P5019, $P5018
  if1319_end2426:
    unless_null $P5019, vivi_13232432
    nqp_get_sc_object $P5020, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5019, $P5020
  vivi_13232432:
    $P5021 = $P5008."post_new"("Ops", $P5019 :named("result"))
    set $P101, $P5021
.annotate 'line', 3496
    nqp_decontainerize $P5022, _lex_param_0
    $P5023 = $P5022."unique"("alt")
    set $S5002, $P5023
    concat $S5001, $S5002, "_"
    box $P5024, $S5001
    set $P102, $P5024
    box $P5025, 0
    set $P103, $P5025
.annotate 'line', 3498
    $P5027 = _lex_param_1."list"()
    iter $P5026, $P5027
    set $P104, $P5026
.annotate 'line', 3499
    nqp_decontainerize $P5028, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "end"
    $P5029 = $P5028."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5029
.annotate 'line', 3500
    nqp_decontainerize $P5030, _lex_param_0
    set $S5006, $P102
    set $S5007, $P103
    concat $S5005, $S5006, $S5007
    $P5031 = $P5030."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5031
.annotate 'line', 3501
    nqp_decontainerize $P5032, _lex_param_0
    shift $P5033, $P104
    $P5034 = $P5032."regex_post"($P5033)
    set $P107, $P5034
  while1324_test2433:
    set $P5053, $P104
    unless $P104 goto while1324_done2437 
  while1324_redo2435:
.annotate 'line', 3502
.annotate 'line', 3503
    $P101."push"($P106)
    set tmp_4, $P103
    set $N5002, tmp_4
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5035, $N5001
    set $P103, $P5035
.annotate 'line', 3505
    nqp_decontainerize $P5035, _lex_param_0
    set $S5009, $P102
    set $S5010, $P103
    concat $S5008, $S5009, $S5010
    $P5036 = $P5035."post_new"("Label", $S5008 :named("name"))
    set $P106, $P5036
.annotate 'line', 3506
    nqp_decontainerize $P5037, _lex_param_0
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback2440
    nqp_get_sc_object $P5040, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_54, $P5039
    set fb_tmp_384, pkg_viv_tmp_54
    repr_defined $I5004, fb_tmp_384
    unless $I5004 goto if1326_else2441 
    set $P5041, fb_tmp_384["%REG"]
    set $P5043, $P5041
    goto if1326_end2442
  if1326_else2441:
    null $P5042
    set $P5043, $P5042
  if1326_end2442:
    unless_null $P5043, vivi_13272443
    new $P5044, 'Hash'
    set pkg_viv_tmp_54["%REG"], $P5044
    set $P5043, $P5044
  vivi_13272443:
    unless_null $P5043, vivi_13282444
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_13282444:
    set $P5038, $P5043
  fallback2440:
    set fb_tmp_383, $P5038
    repr_defined $I5003, fb_tmp_383
    unless $I5003 goto if1325_else2438 
    set $P5046, fb_tmp_383["pos"]
    set $P5048, $P5046
    goto if1325_end2439
  if1325_else2438:
    null $P5047
    set $P5048, $P5047
  if1325_end2439:
    unless_null $P5048, vivi_13292445
    nqp_get_sc_object $P5049, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5048, $P5049
  vivi_13292445:
    $P5037."regex_mark"($P101, $P106, $P5048, 0)
.annotate 'line', 3507
    $P101."push"($P107)
.annotate 'line', 3508
    $P101."push_pirop"("goto", $P105)
.annotate 'line', 3509
    nqp_decontainerize $P5050, _lex_param_0
    shift $P5051, $P104
    $P5052 = $P5050."regex_post"($P5051)
    set $P107, $P5052
    set $P5053, $P107
    goto while1324_test2433 
  while1324_done2437:
.annotate 'line', 3511
    $P101."push"($P106)
.annotate 'line', 3512
    $P101."push"($P107)
.annotate 'line', 3513
    $P101."push"($P105)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "anchor" :subid("cuid_121_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3517
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$subtype", $P102 
    .lex "$donelabel", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_385 
    .local pmc fb_tmp_386 
    .local pmc pkg_viv_tmp_55 
    .local pmc fb_tmp_387 
    .local pmc fb_tmp_388 
    .local pmc pkg_viv_tmp_56 
    .local pmc fb_tmp_389 
    .local pmc fb_tmp_390 
    .local pmc pkg_viv_tmp_57 
    .local pmc fb_tmp_391 
    .local pmc fb_tmp_392 
    .local pmc pkg_viv_tmp_58 
    .local pmc fb_tmp_393 
    .local pmc fb_tmp_394 
    .local pmc pkg_viv_tmp_59 
    .local pmc fb_tmp_395 
    .local pmc fb_tmp_396 
    .local pmc pkg_viv_tmp_60 
    .local pmc fb_tmp_397 
    .local pmc fb_tmp_398 
    .local pmc pkg_viv_tmp_61 
    .local pmc fb_tmp_399 
    .local pmc fb_tmp_400 
    .local pmc pkg_viv_tmp_62 
    .local pmc fb_tmp_401 
    .local pmc fb_tmp_402 
    .local pmc pkg_viv_tmp_63 
    .local pmc fb_tmp_403 
    .local pmc fb_tmp_404 
    .local pmc pkg_viv_tmp_64 
    .local pmc fb_tmp_405 
    .local pmc fb_tmp_406 
    .local pmc pkg_viv_tmp_65 
    .local pmc fb_tmp_407 
    .local pmc fb_tmp_408 
    .local pmc pkg_viv_tmp_66 
    .local pmc fb_tmp_409 
    .local pmc fb_tmp_410 
    .local pmc pkg_viv_tmp_67 
    .local pmc fb_tmp_411 
    .local pmc fb_tmp_412 
    .local pmc pkg_viv_tmp_68 
    .local pmc fb_tmp_413 
    .local pmc fb_tmp_414 
    .local pmc pkg_viv_tmp_69 
    .local pmc fb_tmp_415 
    .local pmc fb_tmp_416 
    .local pmc pkg_viv_tmp_70 
    .local pmc fb_tmp_417 
    .local pmc fb_tmp_418 
    .local pmc pkg_viv_tmp_71 
    .local pmc fb_tmp_419 
    .local pmc fb_tmp_420 
    .local pmc pkg_viv_tmp_72 
    .local pmc fb_tmp_421 
    .local pmc fb_tmp_422 
    .local pmc pkg_viv_tmp_73 
    .local pmc fb_tmp_423 
    .local pmc fb_tmp_424 
    .local pmc pkg_viv_tmp_74 
    .local pmc fb_tmp_425 
    .local pmc fb_tmp_426 
    .local pmc pkg_viv_tmp_75 
    .local pmc fb_tmp_427 
    .local pmc fb_tmp_428 
    .local pmc pkg_viv_tmp_76 
    .local pmc fb_tmp_429 
    .local pmc fb_tmp_430 
    .local pmc pkg_viv_tmp_77 
    .local pmc fb_tmp_431 
    .local pmc fb_tmp_432 
    .local pmc pkg_viv_tmp_78 
    .local pmc fb_tmp_433 
    .local pmc fb_tmp_434 
    .local pmc pkg_viv_tmp_79 
    .local pmc fb_tmp_435 
    .local pmc fb_tmp_436 
    .local pmc pkg_viv_tmp_80 
    .local pmc fb_tmp_437 
    .local pmc fb_tmp_438 
    .local pmc pkg_viv_tmp_81 
    .local pmc fb_tmp_439 
    .local pmc fb_tmp_440 
    .local pmc pkg_viv_tmp_82 
    .local pmc fb_tmp_441 
    .local pmc fb_tmp_442 
    .local pmc pkg_viv_tmp_83 
    .local pmc fb_tmp_443 
    .local pmc fb_tmp_444 
    .local pmc pkg_viv_tmp_84 
    .local pmc fb_tmp_445 
    .local pmc fb_tmp_446 
    .local pmc pkg_viv_tmp_85 
    .local pmc fb_tmp_447 
    .local pmc fb_tmp_448 
    .local pmc pkg_viv_tmp_86 
    .local pmc fb_tmp_449 
    .local pmc fb_tmp_450 
    .local pmc pkg_viv_tmp_87 
    .local pmc fb_tmp_451 
    .local pmc fb_tmp_452 
    .local pmc pkg_viv_tmp_88 
    .local pmc fb_tmp_453 
    .local pmc fb_tmp_454 
    .local pmc pkg_viv_tmp_89 
    .local pmc fb_tmp_455 
    .local pmc fb_tmp_456 
    .local pmc pkg_viv_tmp_90 
    .local pmc fb_tmp_457 
    .local pmc fb_tmp_458 
    .local pmc pkg_viv_tmp_91 
    .local pmc fb_tmp_459 
    .local pmc fb_tmp_460 
    .local pmc pkg_viv_tmp_92 
    .local pmc fb_tmp_461 
    .local pmc fb_tmp_462 
    .local pmc pkg_viv_tmp_93 
    .local pmc fb_tmp_463 
    .local pmc fb_tmp_464 
    .local pmc pkg_viv_tmp_94 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 3518
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2448
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_55, $P5006
    set fb_tmp_386, pkg_viv_tmp_55
    repr_defined $I5002, fb_tmp_386
    unless $I5002 goto if1331_else2449 
    set $P5008, fb_tmp_386["%REG"]
    set $P5010, $P5008
    goto if1331_end2450
  if1331_else2449:
    null $P5009
    set $P5010, $P5009
  if1331_end2450:
    unless_null $P5010, vivi_13322451
    new $P5011, 'Hash'
    set pkg_viv_tmp_55["%REG"], $P5011
    set $P5010, $P5011
  vivi_13322451:
    unless_null $P5010, vivi_13332452
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_13332452:
    set $P5005, $P5010
  fallback2448:
    set fb_tmp_385, $P5005
    repr_defined $I5001, fb_tmp_385
    unless $I5001 goto if1330_else2446 
    set $P5013, fb_tmp_385["cur"]
    set $P5015, $P5013
    goto if1330_end2447
  if1330_else2446:
    null $P5014
    set $P5015, $P5014
  if1330_end2447:
    unless_null $P5015, vivi_13342453
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_13342453:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3519
    $P5018 = _lex_param_1."subtype"()
    set $P102, $P5018
.annotate 'line', 3520
    nqp_decontainerize $P5019, _lex_param_0
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxanchor")
    set $S5002, $P5021
    concat $S5001, $S5002, "_done"
    $P5022 = $P5019."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5022
    set $S5003, $P102
    iseq $I5003, $S5003, "bos"
    unless $I5003 goto if1335_else2454 
.annotate 'line', 3521
.annotate 'line', 3522
    find_dynamic_lex $P5023, "%*REG"
    unless_null $P5023, fallback2458
    nqp_get_sc_object $P5025, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_56, $P5024
    set fb_tmp_388, pkg_viv_tmp_56
    repr_defined $I5005, fb_tmp_388
    unless $I5005 goto if1337_else2459 
    set $P5026, fb_tmp_388["%REG"]
    set $P5028, $P5026
    goto if1337_end2460
  if1337_else2459:
    null $P5027
    set $P5028, $P5027
  if1337_end2460:
    unless_null $P5028, vivi_13382461
    new $P5029, 'Hash'
    set pkg_viv_tmp_56["%REG"], $P5029
    set $P5028, $P5029
  vivi_13382461:
    unless_null $P5028, vivi_13392462
    die "Contextual %*REG not found"
    box $P5030, "Contextual %*REG not found"
    set $P5028, $P5030
  vivi_13392462:
    set $P5023, $P5028
  fallback2458:
    set fb_tmp_387, $P5023
    repr_defined $I5004, fb_tmp_387
    unless $I5004 goto if1336_else2456 
    set $P5031, fb_tmp_387["pos"]
    set $P5033, $P5031
    goto if1336_end2457
  if1336_else2456:
    null $P5032
    set $P5033, $P5032
  if1336_end2457:
    unless_null $P5033, vivi_13402463
    nqp_get_sc_object $P5034, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5033, $P5034
  vivi_13402463:
    find_dynamic_lex $P5035, "%*REG"
    unless_null $P5035, fallback2466
    nqp_get_sc_object $P5037, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_57, $P5036
    set fb_tmp_390, pkg_viv_tmp_57
    repr_defined $I5007, fb_tmp_390
    unless $I5007 goto if1342_else2467 
    set $P5038, fb_tmp_390["%REG"]
    set $P5040, $P5038
    goto if1342_end2468
  if1342_else2467:
    null $P5039
    set $P5040, $P5039
  if1342_end2468:
    unless_null $P5040, vivi_13432469
    new $P5041, 'Hash'
    set pkg_viv_tmp_57["%REG"], $P5041
    set $P5040, $P5041
  vivi_13432469:
    unless_null $P5040, vivi_13442470
    die "Contextual %*REG not found"
    box $P5042, "Contextual %*REG not found"
    set $P5040, $P5042
  vivi_13442470:
    set $P5035, $P5040
  fallback2466:
    set fb_tmp_389, $P5035
    repr_defined $I5006, fb_tmp_389
    unless $I5006 goto if1341_else2464 
    set $P5043, fb_tmp_389["fail"]
    set $P5045, $P5043
    goto if1341_end2465
  if1341_else2464:
    null $P5044
    set $P5045, $P5044
  if1341_end2465:
    unless_null $P5045, vivi_13452471
    nqp_get_sc_object $P5046, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5045, $P5046
  vivi_13452471:
    $P5047 = $P101."push_pirop"("ne", $P5033, 0, $P5045)
    goto if1335_end2455
  if1335_else2454:
    set $S5004, $P102
    iseq $I5008, $S5004, "eos"
    unless $I5008 goto if1346_else2472 
.annotate 'line', 3524
.annotate 'line', 3525
    find_dynamic_lex $P5048, "%*REG"
    unless_null $P5048, fallback2476
    nqp_get_sc_object $P5050, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5049, $P5050
    set pkg_viv_tmp_58, $P5049
    set fb_tmp_392, pkg_viv_tmp_58
    repr_defined $I5010, fb_tmp_392
    unless $I5010 goto if1348_else2477 
    set $P5051, fb_tmp_392["%REG"]
    set $P5053, $P5051
    goto if1348_end2478
  if1348_else2477:
    null $P5052
    set $P5053, $P5052
  if1348_end2478:
    unless_null $P5053, vivi_13492479
    new $P5054, 'Hash'
    set pkg_viv_tmp_58["%REG"], $P5054
    set $P5053, $P5054
  vivi_13492479:
    unless_null $P5053, vivi_13502480
    die "Contextual %*REG not found"
    box $P5055, "Contextual %*REG not found"
    set $P5053, $P5055
  vivi_13502480:
    set $P5048, $P5053
  fallback2476:
    set fb_tmp_391, $P5048
    repr_defined $I5009, fb_tmp_391
    unless $I5009 goto if1347_else2474 
    set $P5056, fb_tmp_391["pos"]
    set $P5058, $P5056
    goto if1347_end2475
  if1347_else2474:
    null $P5057
    set $P5058, $P5057
  if1347_end2475:
    unless_null $P5058, vivi_13512481
    nqp_get_sc_object $P5059, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5058, $P5059
  vivi_13512481:
    find_dynamic_lex $P5060, "%*REG"
    unless_null $P5060, fallback2484
    nqp_get_sc_object $P5062, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5061, $P5062
    set pkg_viv_tmp_59, $P5061
    set fb_tmp_394, pkg_viv_tmp_59
    repr_defined $I5012, fb_tmp_394
    unless $I5012 goto if1353_else2485 
    set $P5063, fb_tmp_394["%REG"]
    set $P5065, $P5063
    goto if1353_end2486
  if1353_else2485:
    null $P5064
    set $P5065, $P5064
  if1353_end2486:
    unless_null $P5065, vivi_13542487
    new $P5066, 'Hash'
    set pkg_viv_tmp_59["%REG"], $P5066
    set $P5065, $P5066
  vivi_13542487:
    unless_null $P5065, vivi_13552488
    die "Contextual %*REG not found"
    box $P5067, "Contextual %*REG not found"
    set $P5065, $P5067
  vivi_13552488:
    set $P5060, $P5065
  fallback2484:
    set fb_tmp_393, $P5060
    repr_defined $I5011, fb_tmp_393
    unless $I5011 goto if1352_else2482 
    set $P5068, fb_tmp_393["eos"]
    set $P5070, $P5068
    goto if1352_end2483
  if1352_else2482:
    null $P5069
    set $P5070, $P5069
  if1352_end2483:
    unless_null $P5070, vivi_13562489
    nqp_get_sc_object $P5071, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5070, $P5071
  vivi_13562489:
    find_dynamic_lex $P5072, "%*REG"
    unless_null $P5072, fallback2492
    nqp_get_sc_object $P5074, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_60, $P5073
    set fb_tmp_396, pkg_viv_tmp_60
    repr_defined $I5014, fb_tmp_396
    unless $I5014 goto if1358_else2493 
    set $P5075, fb_tmp_396["%REG"]
    set $P5077, $P5075
    goto if1358_end2494
  if1358_else2493:
    null $P5076
    set $P5077, $P5076
  if1358_end2494:
    unless_null $P5077, vivi_13592495
    new $P5078, 'Hash'
    set pkg_viv_tmp_60["%REG"], $P5078
    set $P5077, $P5078
  vivi_13592495:
    unless_null $P5077, vivi_13602496
    die "Contextual %*REG not found"
    box $P5079, "Contextual %*REG not found"
    set $P5077, $P5079
  vivi_13602496:
    set $P5072, $P5077
  fallback2492:
    set fb_tmp_395, $P5072
    repr_defined $I5013, fb_tmp_395
    unless $I5013 goto if1357_else2490 
    set $P5080, fb_tmp_395["fail"]
    set $P5082, $P5080
    goto if1357_end2491
  if1357_else2490:
    null $P5081
    set $P5082, $P5081
  if1357_end2491:
    unless_null $P5082, vivi_13612497
    nqp_get_sc_object $P5083, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5082, $P5083
  vivi_13612497:
    $P5084 = $P101."push_pirop"("lt", $P5058, $P5070, $P5082)
    set $P5504, $P5084
    goto if1346_end2473
  if1346_else2472:
    set $S5005, $P102
    iseq $I5015, $S5005, "lwb"
    unless $I5015 goto if1362_else2498 
.annotate 'line', 3527
.annotate 'line', 3528
    find_dynamic_lex $P5085, "%*REG"
    unless_null $P5085, fallback2502
    nqp_get_sc_object $P5087, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5086, $P5087
    set pkg_viv_tmp_61, $P5086
    set fb_tmp_398, pkg_viv_tmp_61
    repr_defined $I5017, fb_tmp_398
    unless $I5017 goto if1364_else2503 
    set $P5088, fb_tmp_398["%REG"]
    set $P5090, $P5088
    goto if1364_end2504
  if1364_else2503:
    null $P5089
    set $P5090, $P5089
  if1364_end2504:
    unless_null $P5090, vivi_13652505
    new $P5091, 'Hash'
    set pkg_viv_tmp_61["%REG"], $P5091
    set $P5090, $P5091
  vivi_13652505:
    unless_null $P5090, vivi_13662506
    die "Contextual %*REG not found"
    box $P5092, "Contextual %*REG not found"
    set $P5090, $P5092
  vivi_13662506:
    set $P5085, $P5090
  fallback2502:
    set fb_tmp_397, $P5085
    repr_defined $I5016, fb_tmp_397
    unless $I5016 goto if1363_else2500 
    set $P5093, fb_tmp_397["pos"]
    set $P5095, $P5093
    goto if1363_end2501
  if1363_else2500:
    null $P5094
    set $P5095, $P5094
  if1363_end2501:
    unless_null $P5095, vivi_13672507
    nqp_get_sc_object $P5096, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5095, $P5096
  vivi_13672507:
    find_dynamic_lex $P5097, "%*REG"
    unless_null $P5097, fallback2510
    nqp_get_sc_object $P5099, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_62, $P5098
    set fb_tmp_400, pkg_viv_tmp_62
    repr_defined $I5019, fb_tmp_400
    unless $I5019 goto if1369_else2511 
    set $P5100, fb_tmp_400["%REG"]
    set $P5102, $P5100
    goto if1369_end2512
  if1369_else2511:
    null $P5101
    set $P5102, $P5101
  if1369_end2512:
    unless_null $P5102, vivi_13702513
    new $P5103, 'Hash'
    set pkg_viv_tmp_62["%REG"], $P5103
    set $P5102, $P5103
  vivi_13702513:
    unless_null $P5102, vivi_13712514
    die "Contextual %*REG not found"
    box $P5104, "Contextual %*REG not found"
    set $P5102, $P5104
  vivi_13712514:
    set $P5097, $P5102
  fallback2510:
    set fb_tmp_399, $P5097
    repr_defined $I5018, fb_tmp_399
    unless $I5018 goto if1368_else2508 
    set $P5105, fb_tmp_399["eos"]
    set $P5107, $P5105
    goto if1368_end2509
  if1368_else2508:
    null $P5106
    set $P5107, $P5106
  if1368_end2509:
    unless_null $P5107, vivi_13722515
    nqp_get_sc_object $P5108, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5107, $P5108
  vivi_13722515:
    find_dynamic_lex $P5109, "%*REG"
    unless_null $P5109, fallback2518
    nqp_get_sc_object $P5111, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_63, $P5110
    set fb_tmp_402, pkg_viv_tmp_63
    repr_defined $I5021, fb_tmp_402
    unless $I5021 goto if1374_else2519 
    set $P5112, fb_tmp_402["%REG"]
    set $P5114, $P5112
    goto if1374_end2520
  if1374_else2519:
    null $P5113
    set $P5114, $P5113
  if1374_end2520:
    unless_null $P5114, vivi_13752521
    new $P5115, 'Hash'
    set pkg_viv_tmp_63["%REG"], $P5115
    set $P5114, $P5115
  vivi_13752521:
    unless_null $P5114, vivi_13762522
    die "Contextual %*REG not found"
    box $P5116, "Contextual %*REG not found"
    set $P5114, $P5116
  vivi_13762522:
    set $P5109, $P5114
  fallback2518:
    set fb_tmp_401, $P5109
    repr_defined $I5020, fb_tmp_401
    unless $I5020 goto if1373_else2516 
    set $P5117, fb_tmp_401["fail"]
    set $P5119, $P5117
    goto if1373_end2517
  if1373_else2516:
    null $P5118
    set $P5119, $P5118
  if1373_end2517:
    unless_null $P5119, vivi_13772523
    nqp_get_sc_object $P5120, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5119, $P5120
  vivi_13772523:
    $P101."push_pirop"("ge", $P5095, $P5107, $P5119)
.annotate 'line', 3529
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback2526
    nqp_get_sc_object $P5123, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_64, $P5122
    set fb_tmp_404, pkg_viv_tmp_64
    repr_defined $I5023, fb_tmp_404
    unless $I5023 goto if1379_else2527 
    set $P5124, fb_tmp_404["%REG"]
    set $P5126, $P5124
    goto if1379_end2528
  if1379_else2527:
    null $P5125
    set $P5126, $P5125
  if1379_end2528:
    unless_null $P5126, vivi_13802529
    new $P5127, 'Hash'
    set pkg_viv_tmp_64["%REG"], $P5127
    set $P5126, $P5127
  vivi_13802529:
    unless_null $P5126, vivi_13812530
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_13812530:
    set $P5121, $P5126
  fallback2526:
    set fb_tmp_403, $P5121
    repr_defined $I5022, fb_tmp_403
    unless $I5022 goto if1378_else2524 
    set $P5129, fb_tmp_403["tgt"]
    set $P5131, $P5129
    goto if1378_end2525
  if1378_else2524:
    null $P5130
    set $P5131, $P5130
  if1378_end2525:
    unless_null $P5131, vivi_13822531
    nqp_get_sc_object $P5132, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5131, $P5132
  vivi_13822531:
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback2534
    nqp_get_sc_object $P5135, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_65, $P5134
    set fb_tmp_406, pkg_viv_tmp_65
    repr_defined $I5025, fb_tmp_406
    unless $I5025 goto if1384_else2535 
    set $P5136, fb_tmp_406["%REG"]
    set $P5138, $P5136
    goto if1384_end2536
  if1384_else2535:
    null $P5137
    set $P5138, $P5137
  if1384_end2536:
    unless_null $P5138, vivi_13852537
    new $P5139, 'Hash'
    set pkg_viv_tmp_65["%REG"], $P5139
    set $P5138, $P5139
  vivi_13852537:
    unless_null $P5138, vivi_13862538
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_13862538:
    set $P5133, $P5138
  fallback2534:
    set fb_tmp_405, $P5133
    repr_defined $I5024, fb_tmp_405
    unless $I5024 goto if1383_else2532 
    set $P5141, fb_tmp_405["pos"]
    set $P5143, $P5141
    goto if1383_end2533
  if1383_else2532:
    null $P5142
    set $P5143, $P5142
  if1383_end2533:
    unless_null $P5143, vivi_13872539
    nqp_get_sc_object $P5144, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5143, $P5144
  vivi_13872539:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5131, $P5143)
.annotate 'line', 3530
    find_dynamic_lex $P5145, "%*REG"
    unless_null $P5145, fallback2542
    nqp_get_sc_object $P5147, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5146, $P5147
    set pkg_viv_tmp_66, $P5146
    set fb_tmp_408, pkg_viv_tmp_66
    repr_defined $I5027, fb_tmp_408
    unless $I5027 goto if1389_else2543 
    set $P5148, fb_tmp_408["%REG"]
    set $P5150, $P5148
    goto if1389_end2544
  if1389_else2543:
    null $P5149
    set $P5150, $P5149
  if1389_end2544:
    unless_null $P5150, vivi_13902545
    new $P5151, 'Hash'
    set pkg_viv_tmp_66["%REG"], $P5151
    set $P5150, $P5151
  vivi_13902545:
    unless_null $P5150, vivi_13912546
    die "Contextual %*REG not found"
    box $P5152, "Contextual %*REG not found"
    set $P5150, $P5152
  vivi_13912546:
    set $P5145, $P5150
  fallback2542:
    set fb_tmp_407, $P5145
    repr_defined $I5026, fb_tmp_407
    unless $I5026 goto if1388_else2540 
    set $P5153, fb_tmp_407["fail"]
    set $P5155, $P5153
    goto if1388_end2541
  if1388_else2540:
    null $P5154
    set $P5155, $P5154
  if1388_end2541:
    unless_null $P5155, vivi_13922547
    nqp_get_sc_object $P5156, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5155, $P5156
  vivi_13922547:
    $P101."push_pirop"("unless", "$I11", $P5155)
.annotate 'line', 3531
    find_dynamic_lex $P5157, "%*REG"
    unless_null $P5157, fallback2550
    nqp_get_sc_object $P5159, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5158, $P5159
    set pkg_viv_tmp_67, $P5158
    set fb_tmp_410, pkg_viv_tmp_67
    repr_defined $I5029, fb_tmp_410
    unless $I5029 goto if1394_else2551 
    set $P5160, fb_tmp_410["%REG"]
    set $P5162, $P5160
    goto if1394_end2552
  if1394_else2551:
    null $P5161
    set $P5162, $P5161
  if1394_end2552:
    unless_null $P5162, vivi_13952553
    new $P5163, 'Hash'
    set pkg_viv_tmp_67["%REG"], $P5163
    set $P5162, $P5163
  vivi_13952553:
    unless_null $P5162, vivi_13962554
    die "Contextual %*REG not found"
    box $P5164, "Contextual %*REG not found"
    set $P5162, $P5164
  vivi_13962554:
    set $P5157, $P5162
  fallback2550:
    set fb_tmp_409, $P5157
    repr_defined $I5028, fb_tmp_409
    unless $I5028 goto if1393_else2548 
    set $P5165, fb_tmp_409["pos"]
    set $P5167, $P5165
    goto if1393_end2549
  if1393_else2548:
    null $P5166
    set $P5167, $P5166
  if1393_end2549:
    unless_null $P5167, vivi_13972555
    nqp_get_sc_object $P5168, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5167, $P5168
  vivi_13972555:
    $P101."push_pirop"("sub", "$I11", $P5167, 1)
.annotate 'line', 3532
    find_dynamic_lex $P5169, "%*REG"
    unless_null $P5169, fallback2558
    nqp_get_sc_object $P5171, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5170, $P5171
    set pkg_viv_tmp_68, $P5170
    set fb_tmp_412, pkg_viv_tmp_68
    repr_defined $I5031, fb_tmp_412
    unless $I5031 goto if1399_else2559 
    set $P5172, fb_tmp_412["%REG"]
    set $P5174, $P5172
    goto if1399_end2560
  if1399_else2559:
    null $P5173
    set $P5174, $P5173
  if1399_end2560:
    unless_null $P5174, vivi_14002561
    new $P5175, 'Hash'
    set pkg_viv_tmp_68["%REG"], $P5175
    set $P5174, $P5175
  vivi_14002561:
    unless_null $P5174, vivi_14012562
    die "Contextual %*REG not found"
    box $P5176, "Contextual %*REG not found"
    set $P5174, $P5176
  vivi_14012562:
    set $P5169, $P5174
  fallback2558:
    set fb_tmp_411, $P5169
    repr_defined $I5030, fb_tmp_411
    unless $I5030 goto if1398_else2556 
    set $P5177, fb_tmp_411["tgt"]
    set $P5179, $P5177
    goto if1398_end2557
  if1398_else2556:
    null $P5178
    set $P5179, $P5178
  if1398_end2557:
    unless_null $P5179, vivi_14022563
    nqp_get_sc_object $P5180, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5179, $P5180
  vivi_14022563:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5179, "$I11")
.annotate 'line', 3533
    find_dynamic_lex $P5181, "%*REG"
    unless_null $P5181, fallback2566
    nqp_get_sc_object $P5183, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5182, $P5183
    set pkg_viv_tmp_69, $P5182
    set fb_tmp_414, pkg_viv_tmp_69
    repr_defined $I5033, fb_tmp_414
    unless $I5033 goto if1404_else2567 
    set $P5184, fb_tmp_414["%REG"]
    set $P5186, $P5184
    goto if1404_end2568
  if1404_else2567:
    null $P5185
    set $P5186, $P5185
  if1404_end2568:
    unless_null $P5186, vivi_14052569
    new $P5187, 'Hash'
    set pkg_viv_tmp_69["%REG"], $P5187
    set $P5186, $P5187
  vivi_14052569:
    unless_null $P5186, vivi_14062570
    die "Contextual %*REG not found"
    box $P5188, "Contextual %*REG not found"
    set $P5186, $P5188
  vivi_14062570:
    set $P5181, $P5186
  fallback2566:
    set fb_tmp_413, $P5181
    repr_defined $I5032, fb_tmp_413
    unless $I5032 goto if1403_else2564 
    set $P5189, fb_tmp_413["fail"]
    set $P5191, $P5189
    goto if1403_end2565
  if1403_else2564:
    null $P5190
    set $P5191, $P5190
  if1403_end2565:
    unless_null $P5191, vivi_14072571
    nqp_get_sc_object $P5192, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5191, $P5192
  vivi_14072571:
    $P5193 = $P101."push_pirop"("if", "$I11", $P5191)
    set $P5503, $P5193
    goto if1362_end2499
  if1362_else2498:
    set $S5006, $P102
    iseq $I5034, $S5006, "rwb"
    unless $I5034 goto if1408_else2572 
.annotate 'line', 3535
.annotate 'line', 3536
    find_dynamic_lex $P5194, "%*REG"
    unless_null $P5194, fallback2576
    nqp_get_sc_object $P5196, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5195, $P5196
    set pkg_viv_tmp_70, $P5195
    set fb_tmp_416, pkg_viv_tmp_70
    repr_defined $I5036, fb_tmp_416
    unless $I5036 goto if1410_else2577 
    set $P5197, fb_tmp_416["%REG"]
    set $P5199, $P5197
    goto if1410_end2578
  if1410_else2577:
    null $P5198
    set $P5199, $P5198
  if1410_end2578:
    unless_null $P5199, vivi_14112579
    new $P5200, 'Hash'
    set pkg_viv_tmp_70["%REG"], $P5200
    set $P5199, $P5200
  vivi_14112579:
    unless_null $P5199, vivi_14122580
    die "Contextual %*REG not found"
    box $P5201, "Contextual %*REG not found"
    set $P5199, $P5201
  vivi_14122580:
    set $P5194, $P5199
  fallback2576:
    set fb_tmp_415, $P5194
    repr_defined $I5035, fb_tmp_415
    unless $I5035 goto if1409_else2574 
    set $P5202, fb_tmp_415["pos"]
    set $P5204, $P5202
    goto if1409_end2575
  if1409_else2574:
    null $P5203
    set $P5204, $P5203
  if1409_end2575:
    unless_null $P5204, vivi_14132581
    nqp_get_sc_object $P5205, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5204, $P5205
  vivi_14132581:
    find_dynamic_lex $P5206, "%*REG"
    unless_null $P5206, fallback2584
    nqp_get_sc_object $P5208, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5207, $P5208
    set pkg_viv_tmp_71, $P5207
    set fb_tmp_418, pkg_viv_tmp_71
    repr_defined $I5038, fb_tmp_418
    unless $I5038 goto if1415_else2585 
    set $P5209, fb_tmp_418["%REG"]
    set $P5211, $P5209
    goto if1415_end2586
  if1415_else2585:
    null $P5210
    set $P5211, $P5210
  if1415_end2586:
    unless_null $P5211, vivi_14162587
    new $P5212, 'Hash'
    set pkg_viv_tmp_71["%REG"], $P5212
    set $P5211, $P5212
  vivi_14162587:
    unless_null $P5211, vivi_14172588
    die "Contextual %*REG not found"
    box $P5213, "Contextual %*REG not found"
    set $P5211, $P5213
  vivi_14172588:
    set $P5206, $P5211
  fallback2584:
    set fb_tmp_417, $P5206
    repr_defined $I5037, fb_tmp_417
    unless $I5037 goto if1414_else2582 
    set $P5214, fb_tmp_417["fail"]
    set $P5216, $P5214
    goto if1414_end2583
  if1414_else2582:
    null $P5215
    set $P5216, $P5215
  if1414_end2583:
    unless_null $P5216, vivi_14182589
    nqp_get_sc_object $P5217, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5216, $P5217
  vivi_14182589:
    $P101."push_pirop"("le", $P5204, 0, $P5216)
.annotate 'line', 3537
    find_dynamic_lex $P5218, "%*REG"
    unless_null $P5218, fallback2592
    nqp_get_sc_object $P5220, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5219, $P5220
    set pkg_viv_tmp_72, $P5219
    set fb_tmp_420, pkg_viv_tmp_72
    repr_defined $I5040, fb_tmp_420
    unless $I5040 goto if1420_else2593 
    set $P5221, fb_tmp_420["%REG"]
    set $P5223, $P5221
    goto if1420_end2594
  if1420_else2593:
    null $P5222
    set $P5223, $P5222
  if1420_end2594:
    unless_null $P5223, vivi_14212595
    new $P5224, 'Hash'
    set pkg_viv_tmp_72["%REG"], $P5224
    set $P5223, $P5224
  vivi_14212595:
    unless_null $P5223, vivi_14222596
    die "Contextual %*REG not found"
    box $P5225, "Contextual %*REG not found"
    set $P5223, $P5225
  vivi_14222596:
    set $P5218, $P5223
  fallback2592:
    set fb_tmp_419, $P5218
    repr_defined $I5039, fb_tmp_419
    unless $I5039 goto if1419_else2590 
    set $P5226, fb_tmp_419["tgt"]
    set $P5228, $P5226
    goto if1419_end2591
  if1419_else2590:
    null $P5227
    set $P5228, $P5227
  if1419_end2591:
    unless_null $P5228, vivi_14232597
    nqp_get_sc_object $P5229, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5228, $P5229
  vivi_14232597:
    find_dynamic_lex $P5230, "%*REG"
    unless_null $P5230, fallback2600
    nqp_get_sc_object $P5232, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5231, $P5232
    set pkg_viv_tmp_73, $P5231
    set fb_tmp_422, pkg_viv_tmp_73
    repr_defined $I5042, fb_tmp_422
    unless $I5042 goto if1425_else2601 
    set $P5233, fb_tmp_422["%REG"]
    set $P5235, $P5233
    goto if1425_end2602
  if1425_else2601:
    null $P5234
    set $P5235, $P5234
  if1425_end2602:
    unless_null $P5235, vivi_14262603
    new $P5236, 'Hash'
    set pkg_viv_tmp_73["%REG"], $P5236
    set $P5235, $P5236
  vivi_14262603:
    unless_null $P5235, vivi_14272604
    die "Contextual %*REG not found"
    box $P5237, "Contextual %*REG not found"
    set $P5235, $P5237
  vivi_14272604:
    set $P5230, $P5235
  fallback2600:
    set fb_tmp_421, $P5230
    repr_defined $I5041, fb_tmp_421
    unless $I5041 goto if1424_else2598 
    set $P5238, fb_tmp_421["pos"]
    set $P5240, $P5238
    goto if1424_end2599
  if1424_else2598:
    null $P5239
    set $P5240, $P5239
  if1424_end2599:
    unless_null $P5240, vivi_14282605
    nqp_get_sc_object $P5241, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5240, $P5241
  vivi_14282605:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5228, $P5240)
.annotate 'line', 3538
    find_dynamic_lex $P5242, "%*REG"
    unless_null $P5242, fallback2608
    nqp_get_sc_object $P5244, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5243, $P5244
    set pkg_viv_tmp_74, $P5243
    set fb_tmp_424, pkg_viv_tmp_74
    repr_defined $I5044, fb_tmp_424
    unless $I5044 goto if1430_else2609 
    set $P5245, fb_tmp_424["%REG"]
    set $P5247, $P5245
    goto if1430_end2610
  if1430_else2609:
    null $P5246
    set $P5247, $P5246
  if1430_end2610:
    unless_null $P5247, vivi_14312611
    new $P5248, 'Hash'
    set pkg_viv_tmp_74["%REG"], $P5248
    set $P5247, $P5248
  vivi_14312611:
    unless_null $P5247, vivi_14322612
    die "Contextual %*REG not found"
    box $P5249, "Contextual %*REG not found"
    set $P5247, $P5249
  vivi_14322612:
    set $P5242, $P5247
  fallback2608:
    set fb_tmp_423, $P5242
    repr_defined $I5043, fb_tmp_423
    unless $I5043 goto if1429_else2606 
    set $P5250, fb_tmp_423["fail"]
    set $P5252, $P5250
    goto if1429_end2607
  if1429_else2606:
    null $P5251
    set $P5252, $P5251
  if1429_end2607:
    unless_null $P5252, vivi_14332613
    nqp_get_sc_object $P5253, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5252, $P5253
  vivi_14332613:
    $P101."push_pirop"("if", "$I11", $P5252)
.annotate 'line', 3539
    find_dynamic_lex $P5254, "%*REG"
    unless_null $P5254, fallback2616
    nqp_get_sc_object $P5256, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5255, $P5256
    set pkg_viv_tmp_75, $P5255
    set fb_tmp_426, pkg_viv_tmp_75
    repr_defined $I5046, fb_tmp_426
    unless $I5046 goto if1435_else2617 
    set $P5257, fb_tmp_426["%REG"]
    set $P5259, $P5257
    goto if1435_end2618
  if1435_else2617:
    null $P5258
    set $P5259, $P5258
  if1435_end2618:
    unless_null $P5259, vivi_14362619
    new $P5260, 'Hash'
    set pkg_viv_tmp_75["%REG"], $P5260
    set $P5259, $P5260
  vivi_14362619:
    unless_null $P5259, vivi_14372620
    die "Contextual %*REG not found"
    box $P5261, "Contextual %*REG not found"
    set $P5259, $P5261
  vivi_14372620:
    set $P5254, $P5259
  fallback2616:
    set fb_tmp_425, $P5254
    repr_defined $I5045, fb_tmp_425
    unless $I5045 goto if1434_else2614 
    set $P5262, fb_tmp_425["pos"]
    set $P5264, $P5262
    goto if1434_end2615
  if1434_else2614:
    null $P5263
    set $P5264, $P5263
  if1434_end2615:
    unless_null $P5264, vivi_14382621
    nqp_get_sc_object $P5265, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5264, $P5265
  vivi_14382621:
    $P101."push_pirop"("sub", "$I11", $P5264, 1)
.annotate 'line', 3540
    find_dynamic_lex $P5266, "%*REG"
    unless_null $P5266, fallback2624
    nqp_get_sc_object $P5268, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5267, $P5268
    set pkg_viv_tmp_76, $P5267
    set fb_tmp_428, pkg_viv_tmp_76
    repr_defined $I5048, fb_tmp_428
    unless $I5048 goto if1440_else2625 
    set $P5269, fb_tmp_428["%REG"]
    set $P5271, $P5269
    goto if1440_end2626
  if1440_else2625:
    null $P5270
    set $P5271, $P5270
  if1440_end2626:
    unless_null $P5271, vivi_14412627
    new $P5272, 'Hash'
    set pkg_viv_tmp_76["%REG"], $P5272
    set $P5271, $P5272
  vivi_14412627:
    unless_null $P5271, vivi_14422628
    die "Contextual %*REG not found"
    box $P5273, "Contextual %*REG not found"
    set $P5271, $P5273
  vivi_14422628:
    set $P5266, $P5271
  fallback2624:
    set fb_tmp_427, $P5266
    repr_defined $I5047, fb_tmp_427
    unless $I5047 goto if1439_else2622 
    set $P5274, fb_tmp_427["tgt"]
    set $P5276, $P5274
    goto if1439_end2623
  if1439_else2622:
    null $P5275
    set $P5276, $P5275
  if1439_end2623:
    unless_null $P5276, vivi_14432629
    nqp_get_sc_object $P5277, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5276, $P5277
  vivi_14432629:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_WORD", $P5276, "$I11")
.annotate 'line', 3541
    find_dynamic_lex $P5278, "%*REG"
    unless_null $P5278, fallback2632
    nqp_get_sc_object $P5280, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5279, $P5280
    set pkg_viv_tmp_77, $P5279
    set fb_tmp_430, pkg_viv_tmp_77
    repr_defined $I5050, fb_tmp_430
    unless $I5050 goto if1445_else2633 
    set $P5281, fb_tmp_430["%REG"]
    set $P5283, $P5281
    goto if1445_end2634
  if1445_else2633:
    null $P5282
    set $P5283, $P5282
  if1445_end2634:
    unless_null $P5283, vivi_14462635
    new $P5284, 'Hash'
    set pkg_viv_tmp_77["%REG"], $P5284
    set $P5283, $P5284
  vivi_14462635:
    unless_null $P5283, vivi_14472636
    die "Contextual %*REG not found"
    box $P5285, "Contextual %*REG not found"
    set $P5283, $P5285
  vivi_14472636:
    set $P5278, $P5283
  fallback2632:
    set fb_tmp_429, $P5278
    repr_defined $I5049, fb_tmp_429
    unless $I5049 goto if1444_else2630 
    set $P5286, fb_tmp_429["fail"]
    set $P5288, $P5286
    goto if1444_end2631
  if1444_else2630:
    null $P5287
    set $P5288, $P5287
  if1444_end2631:
    unless_null $P5288, vivi_14482637
    nqp_get_sc_object $P5289, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5288, $P5289
  vivi_14482637:
    $P5290 = $P101."push_pirop"("unless", "$I11", $P5288)
    set $P5502, $P5290
    goto if1408_end2573
  if1408_else2572:
    set $S5007, $P102
    iseq $I5051, $S5007, "bol"
    unless $I5051 goto if1449_else2638 
.annotate 'line', 3543
.annotate 'line', 3544
    find_dynamic_lex $P5291, "%*REG"
    unless_null $P5291, fallback2642
    nqp_get_sc_object $P5293, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5292, $P5293
    set pkg_viv_tmp_78, $P5292
    set fb_tmp_432, pkg_viv_tmp_78
    repr_defined $I5053, fb_tmp_432
    unless $I5053 goto if1451_else2643 
    set $P5294, fb_tmp_432["%REG"]
    set $P5296, $P5294
    goto if1451_end2644
  if1451_else2643:
    null $P5295
    set $P5296, $P5295
  if1451_end2644:
    unless_null $P5296, vivi_14522645
    new $P5297, 'Hash'
    set pkg_viv_tmp_78["%REG"], $P5297
    set $P5296, $P5297
  vivi_14522645:
    unless_null $P5296, vivi_14532646
    die "Contextual %*REG not found"
    box $P5298, "Contextual %*REG not found"
    set $P5296, $P5298
  vivi_14532646:
    set $P5291, $P5296
  fallback2642:
    set fb_tmp_431, $P5291
    repr_defined $I5052, fb_tmp_431
    unless $I5052 goto if1450_else2640 
    set $P5299, fb_tmp_431["pos"]
    set $P5301, $P5299
    goto if1450_end2641
  if1450_else2640:
    null $P5300
    set $P5301, $P5300
  if1450_end2641:
    unless_null $P5301, vivi_14542647
    nqp_get_sc_object $P5302, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5301, $P5302
  vivi_14542647:
    $P101."push_pirop"("eq", $P5301, 0, $P103)
.annotate 'line', 3545
    find_dynamic_lex $P5303, "%*REG"
    unless_null $P5303, fallback2650
    nqp_get_sc_object $P5305, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5304, $P5305
    set pkg_viv_tmp_79, $P5304
    set fb_tmp_434, pkg_viv_tmp_79
    repr_defined $I5055, fb_tmp_434
    unless $I5055 goto if1456_else2651 
    set $P5306, fb_tmp_434["%REG"]
    set $P5308, $P5306
    goto if1456_end2652
  if1456_else2651:
    null $P5307
    set $P5308, $P5307
  if1456_end2652:
    unless_null $P5308, vivi_14572653
    new $P5309, 'Hash'
    set pkg_viv_tmp_79["%REG"], $P5309
    set $P5308, $P5309
  vivi_14572653:
    unless_null $P5308, vivi_14582654
    die "Contextual %*REG not found"
    box $P5310, "Contextual %*REG not found"
    set $P5308, $P5310
  vivi_14582654:
    set $P5303, $P5308
  fallback2650:
    set fb_tmp_433, $P5303
    repr_defined $I5054, fb_tmp_433
    unless $I5054 goto if1455_else2648 
    set $P5311, fb_tmp_433["pos"]
    set $P5313, $P5311
    goto if1455_end2649
  if1455_else2648:
    null $P5312
    set $P5313, $P5312
  if1455_end2649:
    unless_null $P5313, vivi_14592655
    nqp_get_sc_object $P5314, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5313, $P5314
  vivi_14592655:
    find_dynamic_lex $P5315, "%*REG"
    unless_null $P5315, fallback2658
    nqp_get_sc_object $P5317, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5316, $P5317
    set pkg_viv_tmp_80, $P5316
    set fb_tmp_436, pkg_viv_tmp_80
    repr_defined $I5057, fb_tmp_436
    unless $I5057 goto if1461_else2659 
    set $P5318, fb_tmp_436["%REG"]
    set $P5320, $P5318
    goto if1461_end2660
  if1461_else2659:
    null $P5319
    set $P5320, $P5319
  if1461_end2660:
    unless_null $P5320, vivi_14622661
    new $P5321, 'Hash'
    set pkg_viv_tmp_80["%REG"], $P5321
    set $P5320, $P5321
  vivi_14622661:
    unless_null $P5320, vivi_14632662
    die "Contextual %*REG not found"
    box $P5322, "Contextual %*REG not found"
    set $P5320, $P5322
  vivi_14632662:
    set $P5315, $P5320
  fallback2658:
    set fb_tmp_435, $P5315
    repr_defined $I5056, fb_tmp_435
    unless $I5056 goto if1460_else2656 
    set $P5323, fb_tmp_435["eos"]
    set $P5325, $P5323
    goto if1460_end2657
  if1460_else2656:
    null $P5324
    set $P5325, $P5324
  if1460_end2657:
    unless_null $P5325, vivi_14642663
    nqp_get_sc_object $P5326, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5325, $P5326
  vivi_14642663:
    find_dynamic_lex $P5327, "%*REG"
    unless_null $P5327, fallback2666
    nqp_get_sc_object $P5329, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5328, $P5329
    set pkg_viv_tmp_81, $P5328
    set fb_tmp_438, pkg_viv_tmp_81
    repr_defined $I5059, fb_tmp_438
    unless $I5059 goto if1466_else2667 
    set $P5330, fb_tmp_438["%REG"]
    set $P5332, $P5330
    goto if1466_end2668
  if1466_else2667:
    null $P5331
    set $P5332, $P5331
  if1466_end2668:
    unless_null $P5332, vivi_14672669
    new $P5333, 'Hash'
    set pkg_viv_tmp_81["%REG"], $P5333
    set $P5332, $P5333
  vivi_14672669:
    unless_null $P5332, vivi_14682670
    die "Contextual %*REG not found"
    box $P5334, "Contextual %*REG not found"
    set $P5332, $P5334
  vivi_14682670:
    set $P5327, $P5332
  fallback2666:
    set fb_tmp_437, $P5327
    repr_defined $I5058, fb_tmp_437
    unless $I5058 goto if1465_else2664 
    set $P5335, fb_tmp_437["fail"]
    set $P5337, $P5335
    goto if1465_end2665
  if1465_else2664:
    null $P5336
    set $P5337, $P5336
  if1465_end2665:
    unless_null $P5337, vivi_14692671
    nqp_get_sc_object $P5338, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5337, $P5338
  vivi_14692671:
    $P101."push_pirop"("ge", $P5313, $P5325, $P5337)
.annotate 'line', 3546
    find_dynamic_lex $P5339, "%*REG"
    unless_null $P5339, fallback2674
    nqp_get_sc_object $P5341, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5340, $P5341
    set pkg_viv_tmp_82, $P5340
    set fb_tmp_440, pkg_viv_tmp_82
    repr_defined $I5061, fb_tmp_440
    unless $I5061 goto if1471_else2675 
    set $P5342, fb_tmp_440["%REG"]
    set $P5344, $P5342
    goto if1471_end2676
  if1471_else2675:
    null $P5343
    set $P5344, $P5343
  if1471_end2676:
    unless_null $P5344, vivi_14722677
    new $P5345, 'Hash'
    set pkg_viv_tmp_82["%REG"], $P5345
    set $P5344, $P5345
  vivi_14722677:
    unless_null $P5344, vivi_14732678
    die "Contextual %*REG not found"
    box $P5346, "Contextual %*REG not found"
    set $P5344, $P5346
  vivi_14732678:
    set $P5339, $P5344
  fallback2674:
    set fb_tmp_439, $P5339
    repr_defined $I5060, fb_tmp_439
    unless $I5060 goto if1470_else2672 
    set $P5347, fb_tmp_439["pos"]
    set $P5349, $P5347
    goto if1470_end2673
  if1470_else2672:
    null $P5348
    set $P5349, $P5348
  if1470_end2673:
    unless_null $P5349, vivi_14742679
    nqp_get_sc_object $P5350, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5349, $P5350
  vivi_14742679:
    $P101."push_pirop"("sub", "$I11", $P5349, 1)
.annotate 'line', 3547
    find_dynamic_lex $P5351, "%*REG"
    unless_null $P5351, fallback2682
    nqp_get_sc_object $P5353, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5352, $P5353
    set pkg_viv_tmp_83, $P5352
    set fb_tmp_442, pkg_viv_tmp_83
    repr_defined $I5063, fb_tmp_442
    unless $I5063 goto if1476_else2683 
    set $P5354, fb_tmp_442["%REG"]
    set $P5356, $P5354
    goto if1476_end2684
  if1476_else2683:
    null $P5355
    set $P5356, $P5355
  if1476_end2684:
    unless_null $P5356, vivi_14772685
    new $P5357, 'Hash'
    set pkg_viv_tmp_83["%REG"], $P5357
    set $P5356, $P5357
  vivi_14772685:
    unless_null $P5356, vivi_14782686
    die "Contextual %*REG not found"
    box $P5358, "Contextual %*REG not found"
    set $P5356, $P5358
  vivi_14782686:
    set $P5351, $P5356
  fallback2682:
    set fb_tmp_441, $P5351
    repr_defined $I5062, fb_tmp_441
    unless $I5062 goto if1475_else2680 
    set $P5359, fb_tmp_441["tgt"]
    set $P5361, $P5359
    goto if1475_end2681
  if1475_else2680:
    null $P5360
    set $P5361, $P5360
  if1475_end2681:
    unless_null $P5361, vivi_14792687
    nqp_get_sc_object $P5362, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5361, $P5362
  vivi_14792687:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5361, "$I11")
.annotate 'line', 3548
    find_dynamic_lex $P5363, "%*REG"
    unless_null $P5363, fallback2690
    nqp_get_sc_object $P5365, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5364, $P5365
    set pkg_viv_tmp_84, $P5364
    set fb_tmp_444, pkg_viv_tmp_84
    repr_defined $I5065, fb_tmp_444
    unless $I5065 goto if1481_else2691 
    set $P5366, fb_tmp_444["%REG"]
    set $P5368, $P5366
    goto if1481_end2692
  if1481_else2691:
    null $P5367
    set $P5368, $P5367
  if1481_end2692:
    unless_null $P5368, vivi_14822693
    new $P5369, 'Hash'
    set pkg_viv_tmp_84["%REG"], $P5369
    set $P5368, $P5369
  vivi_14822693:
    unless_null $P5368, vivi_14832694
    die "Contextual %*REG not found"
    box $P5370, "Contextual %*REG not found"
    set $P5368, $P5370
  vivi_14832694:
    set $P5363, $P5368
  fallback2690:
    set fb_tmp_443, $P5363
    repr_defined $I5064, fb_tmp_443
    unless $I5064 goto if1480_else2688 
    set $P5371, fb_tmp_443["fail"]
    set $P5373, $P5371
    goto if1480_end2689
  if1480_else2688:
    null $P5372
    set $P5373, $P5372
  if1480_end2689:
    unless_null $P5373, vivi_14842695
    nqp_get_sc_object $P5374, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5373, $P5374
  vivi_14842695:
    $P101."push_pirop"("unless", "$I11", $P5373)
.annotate 'line', 3549
    $P5375 = $P101."push"($P103)
    set $P5501, $P5375
    goto if1449_end2639
  if1449_else2638:
    set $S5008, $P102
    iseq $I5066, $S5008, "eol"
    unless $I5066 goto if1485_else2696 
.annotate 'line', 3551
.annotate 'line', 3552
    find_dynamic_lex $P5376, "%*REG"
    unless_null $P5376, fallback2700
    nqp_get_sc_object $P5378, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5377, $P5378
    set pkg_viv_tmp_85, $P5377
    set fb_tmp_446, pkg_viv_tmp_85
    repr_defined $I5068, fb_tmp_446
    unless $I5068 goto if1487_else2701 
    set $P5379, fb_tmp_446["%REG"]
    set $P5381, $P5379
    goto if1487_end2702
  if1487_else2701:
    null $P5380
    set $P5381, $P5380
  if1487_end2702:
    unless_null $P5381, vivi_14882703
    new $P5382, 'Hash'
    set pkg_viv_tmp_85["%REG"], $P5382
    set $P5381, $P5382
  vivi_14882703:
    unless_null $P5381, vivi_14892704
    die "Contextual %*REG not found"
    box $P5383, "Contextual %*REG not found"
    set $P5381, $P5383
  vivi_14892704:
    set $P5376, $P5381
  fallback2700:
    set fb_tmp_445, $P5376
    repr_defined $I5067, fb_tmp_445
    unless $I5067 goto if1486_else2698 
    set $P5384, fb_tmp_445["tgt"]
    set $P5386, $P5384
    goto if1486_end2699
  if1486_else2698:
    null $P5385
    set $P5386, $P5385
  if1486_end2699:
    unless_null $P5386, vivi_14902705
    nqp_get_sc_object $P5387, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5386, $P5387
  vivi_14902705:
    find_dynamic_lex $P5388, "%*REG"
    unless_null $P5388, fallback2708
    nqp_get_sc_object $P5390, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5389, $P5390
    set pkg_viv_tmp_86, $P5389
    set fb_tmp_448, pkg_viv_tmp_86
    repr_defined $I5070, fb_tmp_448
    unless $I5070 goto if1492_else2709 
    set $P5391, fb_tmp_448["%REG"]
    set $P5393, $P5391
    goto if1492_end2710
  if1492_else2709:
    null $P5392
    set $P5393, $P5392
  if1492_end2710:
    unless_null $P5393, vivi_14932711
    new $P5394, 'Hash'
    set pkg_viv_tmp_86["%REG"], $P5394
    set $P5393, $P5394
  vivi_14932711:
    unless_null $P5393, vivi_14942712
    die "Contextual %*REG not found"
    box $P5395, "Contextual %*REG not found"
    set $P5393, $P5395
  vivi_14942712:
    set $P5388, $P5393
  fallback2708:
    set fb_tmp_447, $P5388
    repr_defined $I5069, fb_tmp_447
    unless $I5069 goto if1491_else2706 
    set $P5396, fb_tmp_447["pos"]
    set $P5398, $P5396
    goto if1491_end2707
  if1491_else2706:
    null $P5397
    set $P5398, $P5397
  if1491_end2707:
    unless_null $P5398, vivi_14952713
    nqp_get_sc_object $P5399, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5398, $P5399
  vivi_14952713:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5386, $P5398)
.annotate 'line', 3553
    $P101."push_pirop"("if", "$I11", $P103)
.annotate 'line', 3554
    find_dynamic_lex $P5400, "%*REG"
    unless_null $P5400, fallback2716
    nqp_get_sc_object $P5402, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5401, $P5402
    set pkg_viv_tmp_87, $P5401
    set fb_tmp_450, pkg_viv_tmp_87
    repr_defined $I5072, fb_tmp_450
    unless $I5072 goto if1497_else2717 
    set $P5403, fb_tmp_450["%REG"]
    set $P5405, $P5403
    goto if1497_end2718
  if1497_else2717:
    null $P5404
    set $P5405, $P5404
  if1497_end2718:
    unless_null $P5405, vivi_14982719
    new $P5406, 'Hash'
    set pkg_viv_tmp_87["%REG"], $P5406
    set $P5405, $P5406
  vivi_14982719:
    unless_null $P5405, vivi_14992720
    die "Contextual %*REG not found"
    box $P5407, "Contextual %*REG not found"
    set $P5405, $P5407
  vivi_14992720:
    set $P5400, $P5405
  fallback2716:
    set fb_tmp_449, $P5400
    repr_defined $I5071, fb_tmp_449
    unless $I5071 goto if1496_else2714 
    set $P5408, fb_tmp_449["pos"]
    set $P5410, $P5408
    goto if1496_end2715
  if1496_else2714:
    null $P5409
    set $P5410, $P5409
  if1496_end2715:
    unless_null $P5410, vivi_15002721
    nqp_get_sc_object $P5411, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5410, $P5411
  vivi_15002721:
    find_dynamic_lex $P5412, "%*REG"
    unless_null $P5412, fallback2724
    nqp_get_sc_object $P5414, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5413, $P5414
    set pkg_viv_tmp_88, $P5413
    set fb_tmp_452, pkg_viv_tmp_88
    repr_defined $I5074, fb_tmp_452
    unless $I5074 goto if1502_else2725 
    set $P5415, fb_tmp_452["%REG"]
    set $P5417, $P5415
    goto if1502_end2726
  if1502_else2725:
    null $P5416
    set $P5417, $P5416
  if1502_end2726:
    unless_null $P5417, vivi_15032727
    new $P5418, 'Hash'
    set pkg_viv_tmp_88["%REG"], $P5418
    set $P5417, $P5418
  vivi_15032727:
    unless_null $P5417, vivi_15042728
    die "Contextual %*REG not found"
    box $P5419, "Contextual %*REG not found"
    set $P5417, $P5419
  vivi_15042728:
    set $P5412, $P5417
  fallback2724:
    set fb_tmp_451, $P5412
    repr_defined $I5073, fb_tmp_451
    unless $I5073 goto if1501_else2722 
    set $P5420, fb_tmp_451["eos"]
    set $P5422, $P5420
    goto if1501_end2723
  if1501_else2722:
    null $P5421
    set $P5422, $P5421
  if1501_end2723:
    unless_null $P5422, vivi_15052729
    nqp_get_sc_object $P5423, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5422, $P5423
  vivi_15052729:
    find_dynamic_lex $P5424, "%*REG"
    unless_null $P5424, fallback2732
    nqp_get_sc_object $P5426, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5425, $P5426
    set pkg_viv_tmp_89, $P5425
    set fb_tmp_454, pkg_viv_tmp_89
    repr_defined $I5076, fb_tmp_454
    unless $I5076 goto if1507_else2733 
    set $P5427, fb_tmp_454["%REG"]
    set $P5429, $P5427
    goto if1507_end2734
  if1507_else2733:
    null $P5428
    set $P5429, $P5428
  if1507_end2734:
    unless_null $P5429, vivi_15082735
    new $P5430, 'Hash'
    set pkg_viv_tmp_89["%REG"], $P5430
    set $P5429, $P5430
  vivi_15082735:
    unless_null $P5429, vivi_15092736
    die "Contextual %*REG not found"
    box $P5431, "Contextual %*REG not found"
    set $P5429, $P5431
  vivi_15092736:
    set $P5424, $P5429
  fallback2732:
    set fb_tmp_453, $P5424
    repr_defined $I5075, fb_tmp_453
    unless $I5075 goto if1506_else2730 
    set $P5432, fb_tmp_453["fail"]
    set $P5434, $P5432
    goto if1506_end2731
  if1506_else2730:
    null $P5433
    set $P5434, $P5433
  if1506_end2731:
    unless_null $P5434, vivi_15102737
    nqp_get_sc_object $P5435, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5434, $P5435
  vivi_15102737:
    $P101."push_pirop"("ne", $P5410, $P5422, $P5434)
.annotate 'line', 3555
    find_dynamic_lex $P5436, "%*REG"
    unless_null $P5436, fallback2740
    nqp_get_sc_object $P5438, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5437, $P5438
    set pkg_viv_tmp_90, $P5437
    set fb_tmp_456, pkg_viv_tmp_90
    repr_defined $I5078, fb_tmp_456
    unless $I5078 goto if1512_else2741 
    set $P5439, fb_tmp_456["%REG"]
    set $P5441, $P5439
    goto if1512_end2742
  if1512_else2741:
    null $P5440
    set $P5441, $P5440
  if1512_end2742:
    unless_null $P5441, vivi_15132743
    new $P5442, 'Hash'
    set pkg_viv_tmp_90["%REG"], $P5442
    set $P5441, $P5442
  vivi_15132743:
    unless_null $P5441, vivi_15142744
    die "Contextual %*REG not found"
    box $P5443, "Contextual %*REG not found"
    set $P5441, $P5443
  vivi_15142744:
    set $P5436, $P5441
  fallback2740:
    set fb_tmp_455, $P5436
    repr_defined $I5077, fb_tmp_455
    unless $I5077 goto if1511_else2738 
    set $P5444, fb_tmp_455["pos"]
    set $P5446, $P5444
    goto if1511_end2739
  if1511_else2738:
    null $P5445
    set $P5446, $P5445
  if1511_end2739:
    unless_null $P5446, vivi_15152745
    nqp_get_sc_object $P5447, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5446, $P5447
  vivi_15152745:
    $P101."push_pirop"("eq", $P5446, 0, $P103)
.annotate 'line', 3556
    find_dynamic_lex $P5448, "%*REG"
    unless_null $P5448, fallback2748
    nqp_get_sc_object $P5450, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5449, $P5450
    set pkg_viv_tmp_91, $P5449
    set fb_tmp_458, pkg_viv_tmp_91
    repr_defined $I5080, fb_tmp_458
    unless $I5080 goto if1517_else2749 
    set $P5451, fb_tmp_458["%REG"]
    set $P5453, $P5451
    goto if1517_end2750
  if1517_else2749:
    null $P5452
    set $P5453, $P5452
  if1517_end2750:
    unless_null $P5453, vivi_15182751
    new $P5454, 'Hash'
    set pkg_viv_tmp_91["%REG"], $P5454
    set $P5453, $P5454
  vivi_15182751:
    unless_null $P5453, vivi_15192752
    die "Contextual %*REG not found"
    box $P5455, "Contextual %*REG not found"
    set $P5453, $P5455
  vivi_15192752:
    set $P5448, $P5453
  fallback2748:
    set fb_tmp_457, $P5448
    repr_defined $I5079, fb_tmp_457
    unless $I5079 goto if1516_else2746 
    set $P5456, fb_tmp_457["pos"]
    set $P5458, $P5456
    goto if1516_end2747
  if1516_else2746:
    null $P5457
    set $P5458, $P5457
  if1516_end2747:
    unless_null $P5458, vivi_15202753
    nqp_get_sc_object $P5459, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5458, $P5459
  vivi_15202753:
    $P101."push_pirop"("sub", "$I11", $P5458, 1)
.annotate 'line', 3557
    find_dynamic_lex $P5460, "%*REG"
    unless_null $P5460, fallback2756
    nqp_get_sc_object $P5462, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5461, $P5462
    set pkg_viv_tmp_92, $P5461
    set fb_tmp_460, pkg_viv_tmp_92
    repr_defined $I5082, fb_tmp_460
    unless $I5082 goto if1522_else2757 
    set $P5463, fb_tmp_460["%REG"]
    set $P5465, $P5463
    goto if1522_end2758
  if1522_else2757:
    null $P5464
    set $P5465, $P5464
  if1522_end2758:
    unless_null $P5465, vivi_15232759
    new $P5466, 'Hash'
    set pkg_viv_tmp_92["%REG"], $P5466
    set $P5465, $P5466
  vivi_15232759:
    unless_null $P5465, vivi_15242760
    die "Contextual %*REG not found"
    box $P5467, "Contextual %*REG not found"
    set $P5465, $P5467
  vivi_15242760:
    set $P5460, $P5465
  fallback2756:
    set fb_tmp_459, $P5460
    repr_defined $I5081, fb_tmp_459
    unless $I5081 goto if1521_else2754 
    set $P5468, fb_tmp_459["tgt"]
    set $P5470, $P5468
    goto if1521_end2755
  if1521_else2754:
    null $P5469
    set $P5470, $P5469
  if1521_end2755:
    unless_null $P5470, vivi_15252761
    nqp_get_sc_object $P5471, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5470, $P5471
  vivi_15252761:
    $P101."push_pirop"("is_cclass", "$I11", ".CCLASS_NEWLINE", $P5470, "$I11")
.annotate 'line', 3558
    find_dynamic_lex $P5472, "%*REG"
    unless_null $P5472, fallback2764
    nqp_get_sc_object $P5474, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5473, $P5474
    set pkg_viv_tmp_93, $P5473
    set fb_tmp_462, pkg_viv_tmp_93
    repr_defined $I5084, fb_tmp_462
    unless $I5084 goto if1527_else2765 
    set $P5475, fb_tmp_462["%REG"]
    set $P5477, $P5475
    goto if1527_end2766
  if1527_else2765:
    null $P5476
    set $P5477, $P5476
  if1527_end2766:
    unless_null $P5477, vivi_15282767
    new $P5478, 'Hash'
    set pkg_viv_tmp_93["%REG"], $P5478
    set $P5477, $P5478
  vivi_15282767:
    unless_null $P5477, vivi_15292768
    die "Contextual %*REG not found"
    box $P5479, "Contextual %*REG not found"
    set $P5477, $P5479
  vivi_15292768:
    set $P5472, $P5477
  fallback2764:
    set fb_tmp_461, $P5472
    repr_defined $I5083, fb_tmp_461
    unless $I5083 goto if1526_else2762 
    set $P5480, fb_tmp_461["fail"]
    set $P5482, $P5480
    goto if1526_end2763
  if1526_else2762:
    null $P5481
    set $P5482, $P5481
  if1526_end2763:
    unless_null $P5482, vivi_15302769
    nqp_get_sc_object $P5483, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5482, $P5483
  vivi_15302769:
    $P101."push_pirop"("if", "$I11", $P5482)
.annotate 'line', 3559
    $P5484 = $P101."push"($P103)
    set $P5500, $P5484
    goto if1485_end2697
  if1485_else2696:
    set $S5009, $P102
    iseq $I5085, $S5009, "fail"
    box $P5499, $I5085
    set $P5498, $P5499
    unless $I5085 goto if1531_end2771 
.annotate 'line', 3561
.annotate 'line', 3562
    find_dynamic_lex $P5485, "%*REG"
    unless_null $P5485, fallback2774
    nqp_get_sc_object $P5487, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5486, $P5487
    set pkg_viv_tmp_94, $P5486
    set fb_tmp_464, pkg_viv_tmp_94
    repr_defined $I5087, fb_tmp_464
    unless $I5087 goto if1533_else2775 
    set $P5488, fb_tmp_464["%REG"]
    set $P5490, $P5488
    goto if1533_end2776
  if1533_else2775:
    null $P5489
    set $P5490, $P5489
  if1533_end2776:
    unless_null $P5490, vivi_15342777
    new $P5491, 'Hash'
    set pkg_viv_tmp_94["%REG"], $P5491
    set $P5490, $P5491
  vivi_15342777:
    unless_null $P5490, vivi_15352778
    die "Contextual %*REG not found"
    box $P5492, "Contextual %*REG not found"
    set $P5490, $P5492
  vivi_15352778:
    set $P5485, $P5490
  fallback2774:
    set fb_tmp_463, $P5485
    repr_defined $I5086, fb_tmp_463
    unless $I5086 goto if1532_else2772 
    set $P5493, fb_tmp_463["fail"]
    set $P5495, $P5493
    goto if1532_end2773
  if1532_else2772:
    null $P5494
    set $P5495, $P5494
  if1532_end2773:
    unless_null $P5495, vivi_15362779
    nqp_get_sc_object $P5496, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5495, $P5496
  vivi_15362779:
    $P5497 = $P101."push_pirop"("goto", $P5495)
    set $P5498, $P5497
  if1531_end2771:
    set $P5500, $P5498
  if1485_end2697:
    set $P5501, $P5500
  if1449_end2639:
    set $P5502, $P5501
  if1408_end2573:
    set $P5503, $P5502
  if1362_end2499:
    set $P5504, $P5503
  if1346_end2473:
  if1335_end2455:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "dba" :subid("cuid_122_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3568
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_465 
    .local pmc fb_tmp_466 
    .local pmc pkg_viv_tmp_95 
    .local pmc fb_tmp_467 
    .local pmc fb_tmp_468 
    .local pmc pkg_viv_tmp_96 
    .local pmc fb_tmp_469 
    .local pmc fb_tmp_470 
    .local pmc pkg_viv_tmp_97 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3569
    nqp_decontainerize $P5002, _lex_param_0
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback2782
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_95, $P5004
    set fb_tmp_466, pkg_viv_tmp_95
    repr_defined $I5002, fb_tmp_466
    unless $I5002 goto if1538_else2783 
    set $P5006, fb_tmp_466["%REG"]
    set $P5008, $P5006
    goto if1538_end2784
  if1538_else2783:
    null $P5007
    set $P5008, $P5007
  if1538_end2784:
    unless_null $P5008, vivi_15392785
    new $P5009, 'Hash'
    set pkg_viv_tmp_95["%REG"], $P5009
    set $P5008, $P5009
  vivi_15392785:
    unless_null $P5008, vivi_15402786
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_15402786:
    set $P5003, $P5008
  fallback2782:
    set fb_tmp_465, $P5003
    repr_defined $I5001, fb_tmp_465
    unless $I5001 goto if1537_else2780 
    set $P5011, fb_tmp_465["cur"]
    set $P5013, $P5011
    goto if1537_end2781
  if1537_else2780:
    null $P5012
    set $P5013, $P5012
  if1537_end2781:
    unless_null $P5013, vivi_15412787
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_15412787:
    $P5015 = $P5002."post_new"("Ops", $P5013 :named("result"))
    set $P101, $P5015
.annotate 'line', 3570
    find_dynamic_lex $P5016, "%*REG"
    unless_null $P5016, fallback2790
    nqp_get_sc_object $P5018, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5017, $P5018
    set pkg_viv_tmp_96, $P5017
    set fb_tmp_468, pkg_viv_tmp_96
    repr_defined $I5004, fb_tmp_468
    unless $I5004 goto if1543_else2791 
    set $P5019, fb_tmp_468["%REG"]
    set $P5021, $P5019
    goto if1543_end2792
  if1543_else2791:
    null $P5020
    set $P5021, $P5020
  if1543_end2792:
    unless_null $P5021, vivi_15442793
    new $P5022, 'Hash'
    set pkg_viv_tmp_96["%REG"], $P5022
    set $P5021, $P5022
  vivi_15442793:
    unless_null $P5021, vivi_15452794
    die "Contextual %*REG not found"
    box $P5023, "Contextual %*REG not found"
    set $P5021, $P5023
  vivi_15452794:
    set $P5016, $P5021
  fallback2790:
    set fb_tmp_467, $P5016
    repr_defined $I5003, fb_tmp_467
    unless $I5003 goto if1542_else2788 
    set $P5024, fb_tmp_467["cur"]
    set $P5026, $P5024
    goto if1542_end2789
  if1542_else2788:
    null $P5025
    set $P5026, $P5025
  if1542_end2789:
    unless_null $P5026, vivi_15462795
    nqp_get_sc_object $P5027, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5026, $P5027
  vivi_15462795:
    find_dynamic_lex $P5028, "%*REG"
    unless_null $P5028, fallback2798
    nqp_get_sc_object $P5030, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_97, $P5029
    set fb_tmp_470, pkg_viv_tmp_97
    repr_defined $I5006, fb_tmp_470
    unless $I5006 goto if1548_else2799 
    set $P5031, fb_tmp_470["%REG"]
    set $P5033, $P5031
    goto if1548_end2800
  if1548_else2799:
    null $P5032
    set $P5033, $P5032
  if1548_end2800:
    unless_null $P5033, vivi_15492801
    new $P5034, 'Hash'
    set pkg_viv_tmp_97["%REG"], $P5034
    set $P5033, $P5034
  vivi_15492801:
    unless_null $P5033, vivi_15502802
    die "Contextual %*REG not found"
    box $P5035, "Contextual %*REG not found"
    set $P5033, $P5035
  vivi_15502802:
    set $P5028, $P5033
  fallback2798:
    set fb_tmp_469, $P5028
    repr_defined $I5005, fb_tmp_469
    unless $I5005 goto if1547_else2796 
    set $P5036, fb_tmp_469["pos"]
    set $P5038, $P5036
    goto if1547_end2797
  if1547_else2796:
    null $P5037
    set $P5038, $P5037
  if1547_end2797:
    unless_null $P5038, vivi_15512803
    nqp_get_sc_object $P5039, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5038, $P5039
  vivi_15512803:
    nqp_decontainerize $P5040, _lex_param_0
    $P5041 = _lex_param_1."name"()
    $P5042 = $P5040."escape"($P5041)
    $P101."push_pirop"("callmethod", "\"!dba\"", $P5026, $P5038, $P5042)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "cclass" :subid("cuid_123_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3584
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5076 = 'cuid_354_1361964166.213' 
    capture_lex $P5076 
    .lex "$ops", $P101 
    .lex "$subtype", $P102 
    .lex "$cclass", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_471 
    .local pmc fb_tmp_472 
    .local pmc pkg_viv_tmp_98 
    .local pmc fb_tmp_473 
    .local pmc fb_tmp_474 
    .local pmc pkg_viv_tmp_99 
    .local pmc fb_tmp_475 
    .local pmc fb_tmp_476 
    .local pmc pkg_viv_tmp_100 
    .local pmc fb_tmp_477 
    .local pmc fb_tmp_478 
    .local pmc pkg_viv_tmp_101 
    .local pmc fb_tmp_479 
    .local pmc fb_tmp_492 
    .local pmc fb_tmp_493 
    .local pmc pkg_viv_tmp_108 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 3585
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2806
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_98, $P5006
    set fb_tmp_472, pkg_viv_tmp_98
    repr_defined $I5002, fb_tmp_472
    unless $I5002 goto if1553_else2807 
    set $P5008, fb_tmp_472["%REG"]
    set $P5010, $P5008
    goto if1553_end2808
  if1553_else2807:
    null $P5009
    set $P5010, $P5009
  if1553_end2808:
    unless_null $P5010, vivi_15542809
    new $P5011, 'Hash'
    set pkg_viv_tmp_98["%REG"], $P5011
    set $P5010, $P5011
  vivi_15542809:
    unless_null $P5010, vivi_15552810
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_15552810:
    set $P5005, $P5010
  fallback2806:
    set fb_tmp_471, $P5005
    repr_defined $I5001, fb_tmp_471
    unless $I5001 goto if1552_else2804 
    set $P5013, fb_tmp_471["cur"]
    set $P5015, $P5013
    goto if1552_end2805
  if1552_else2804:
    null $P5014
    set $P5015, $P5014
  if1552_end2805:
    unless_null $P5015, vivi_15562811
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_15562811:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3586
    $P5018 = _lex_param_1."subtype"()
    set $P102, $P5018
.annotate 'line', 3587
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback2814
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_99, $P5020
    set fb_tmp_474, pkg_viv_tmp_99
    repr_defined $I5004, fb_tmp_474
    unless $I5004 goto if1558_else2815 
    set $P5022, fb_tmp_474["%REG"]
    set $P5024, $P5022
    goto if1558_end2816
  if1558_else2815:
    null $P5023
    set $P5024, $P5023
  if1558_end2816:
    unless_null $P5024, vivi_15592817
    new $P5025, 'Hash'
    set pkg_viv_tmp_99["%REG"], $P5025
    set $P5024, $P5025
  vivi_15592817:
    unless_null $P5024, vivi_15602818
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_15602818:
    set $P5019, $P5024
  fallback2814:
    set fb_tmp_473, $P5019
    repr_defined $I5003, fb_tmp_473
    unless $I5003 goto if1557_else2812 
    set $P5027, fb_tmp_473["pos"]
    set $P5029, $P5027
    goto if1557_end2813
  if1557_else2812:
    null $P5028
    set $P5029, $P5028
  if1557_end2813:
    unless_null $P5029, vivi_15612819
    nqp_get_sc_object $P5030, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5029, $P5030
  vivi_15612819:
    find_dynamic_lex $P5031, "%*REG"
    unless_null $P5031, fallback2822
    nqp_get_sc_object $P5033, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5032, $P5033
    set pkg_viv_tmp_100, $P5032
    set fb_tmp_476, pkg_viv_tmp_100
    repr_defined $I5006, fb_tmp_476
    unless $I5006 goto if1563_else2823 
    set $P5034, fb_tmp_476["%REG"]
    set $P5036, $P5034
    goto if1563_end2824
  if1563_else2823:
    null $P5035
    set $P5036, $P5035
  if1563_end2824:
    unless_null $P5036, vivi_15642825
    new $P5037, 'Hash'
    set pkg_viv_tmp_100["%REG"], $P5037
    set $P5036, $P5037
  vivi_15642825:
    unless_null $P5036, vivi_15652826
    die "Contextual %*REG not found"
    box $P5038, "Contextual %*REG not found"
    set $P5036, $P5038
  vivi_15652826:
    set $P5031, $P5036
  fallback2822:
    set fb_tmp_475, $P5031
    repr_defined $I5005, fb_tmp_475
    unless $I5005 goto if1562_else2820 
    set $P5039, fb_tmp_475["eos"]
    set $P5041, $P5039
    goto if1562_end2821
  if1562_else2820:
    null $P5040
    set $P5041, $P5040
  if1562_end2821:
    unless_null $P5041, vivi_15662827
    nqp_get_sc_object $P5042, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5041, $P5042
  vivi_15662827:
    find_dynamic_lex $P5043, "%*REG"
    unless_null $P5043, fallback2830
    nqp_get_sc_object $P5045, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5044, $P5045
    set pkg_viv_tmp_101, $P5044
    set fb_tmp_478, pkg_viv_tmp_101
    repr_defined $I5008, fb_tmp_478
    unless $I5008 goto if1568_else2831 
    set $P5046, fb_tmp_478["%REG"]
    set $P5048, $P5046
    goto if1568_end2832
  if1568_else2831:
    null $P5047
    set $P5048, $P5047
  if1568_end2832:
    unless_null $P5048, vivi_15692833
    new $P5049, 'Hash'
    set pkg_viv_tmp_101["%REG"], $P5049
    set $P5048, $P5049
  vivi_15692833:
    unless_null $P5048, vivi_15702834
    die "Contextual %*REG not found"
    box $P5050, "Contextual %*REG not found"
    set $P5048, $P5050
  vivi_15702834:
    set $P5043, $P5048
  fallback2830:
    set fb_tmp_477, $P5043
    repr_defined $I5007, fb_tmp_477
    unless $I5007 goto if1567_else2828 
    set $P5051, fb_tmp_477["fail"]
    set $P5053, $P5051
    goto if1567_end2829
  if1567_else2828:
    null $P5052
    set $P5053, $P5052
  if1567_end2829:
    unless_null $P5053, vivi_15712835
    nqp_get_sc_object $P5054, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5053, $P5054
  vivi_15712835:
    $P101."push_pirop"("ge", $P5029, $P5041, $P5053)
    find_lex $P5055, "%cclass_code"
    set fb_tmp_479, $P5055
    repr_defined $I5009, fb_tmp_479
    unless $I5009 goto if1572_else2836 
    set $S5002, $P102
    downcase $S5001, $S5002
    set $P5056, fb_tmp_479[$S5001]
    set $P5058, $P5056
    goto if1572_end2837
  if1572_else2836:
    null $P5057
    set $P5058, $P5057
  if1572_end2837:
    unless_null $P5058, vivi_15732838
    nqp_get_sc_object $P5059, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5058, $P5059
  vivi_15732838:
    set $P103, $P5058
    if $P103 goto unless1574_end2840 
.annotate 'line', 3589
    nqp_decontainerize $P5060, _lex_param_0
    set $S5005, $P102
    concat $S5004, "Unrecognized subtype '", $S5005
    concat $S5003, $S5004, "' in QAST::Regex cclass"
    $P5061 = $P5060."panic"($S5003)
  unless1574_end2840:
    set $S5006, $P103
    isne $I5010, $S5006, ".CCLASS_ANY"
    unless $I5010 goto if1575_end2842 
    .const 'Sub' $P5062 = 'cuid_354_1361964166.213' 
    capture_lex $P5062
    $P5063 = $P5062()
  if1575_end2842:
.annotate 'line', 3601
    find_dynamic_lex $P5064, "%*REG"
    unless_null $P5064, fallback2897
    nqp_get_sc_object $P5066, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_108, $P5065
    set fb_tmp_493, pkg_viv_tmp_108
    repr_defined $I5012, fb_tmp_493
    unless $I5012 goto if1609_else2898 
    set $P5067, fb_tmp_493["%REG"]
    set $P5069, $P5067
    goto if1609_end2899
  if1609_else2898:
    null $P5068
    set $P5069, $P5068
  if1609_end2899:
    unless_null $P5069, vivi_16102900
    new $P5070, 'Hash'
    set pkg_viv_tmp_108["%REG"], $P5070
    set $P5069, $P5070
  vivi_16102900:
    unless_null $P5069, vivi_16112901
    die "Contextual %*REG not found"
    box $P5071, "Contextual %*REG not found"
    set $P5069, $P5071
  vivi_16112901:
    set $P5064, $P5069
  fallback2897:
    set fb_tmp_492, $P5064
    repr_defined $I5011, fb_tmp_492
    unless $I5011 goto if1608_else2895 
    set $P5072, fb_tmp_492["pos"]
    set $P5074, $P5072
    goto if1608_end2896
  if1608_else2895:
    null $P5073
    set $P5074, $P5073
  if1608_end2896:
    unless_null $P5074, vivi_16122902
    nqp_get_sc_object $P5075, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5074, $P5075
  vivi_16122902:
    $P101."push_pirop"("add", $P5074, 1)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_354_1361964166.213") :anon :lex :outer("cuid_123_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3591
    .lex "$testop", $P101 
    .local pmc fb_tmp_480 
    .local pmc fb_tmp_481 
    .local pmc pkg_viv_tmp_102 
    .local pmc fb_tmp_482 
    .local pmc fb_tmp_483 
    .local pmc pkg_viv_tmp_103 
    .local pmc fb_tmp_484 
    .local pmc fb_tmp_485 
    .local pmc pkg_viv_tmp_104 
    .local pmc fb_tmp_486 
    .local pmc fb_tmp_487 
    .local pmc pkg_viv_tmp_105 
    .local pmc fb_tmp_488 
    .local pmc fb_tmp_489 
    .local pmc pkg_viv_tmp_106 
    .local pmc fb_tmp_490 
    .local pmc fb_tmp_491 
    .local pmc pkg_viv_tmp_107 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3592
    find_lex $P5002, "$node"
    $P5003 = $P5002."negate"()
    unless $P5003 goto if1576_else2843 
    set $S5001, "if"
    goto if1576_end2844
  if1576_else2843:
    set $S5001, "unless"
  if1576_end2844:
    box $P5004, $S5001
    set $P101, $P5004
.annotate 'line', 3593
    find_lex $P5005, "$ops"
    find_lex $P5006, "$cclass"
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback2847
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_102, $P5008
    set fb_tmp_481, pkg_viv_tmp_102
    repr_defined $I5002, fb_tmp_481
    unless $I5002 goto if1578_else2848 
    set $P5010, fb_tmp_481["%REG"]
    set $P5012, $P5010
    goto if1578_end2849
  if1578_else2848:
    null $P5011
    set $P5012, $P5011
  if1578_end2849:
    unless_null $P5012, vivi_15792850
    new $P5013, 'Hash'
    set pkg_viv_tmp_102["%REG"], $P5013
    set $P5012, $P5013
  vivi_15792850:
    unless_null $P5012, vivi_15802851
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_15802851:
    set $P5007, $P5012
  fallback2847:
    set fb_tmp_480, $P5007
    repr_defined $I5001, fb_tmp_480
    unless $I5001 goto if1577_else2845 
    set $P5015, fb_tmp_480["tgt"]
    set $P5017, $P5015
    goto if1577_end2846
  if1577_else2845:
    null $P5016
    set $P5017, $P5016
  if1577_end2846:
    unless_null $P5017, vivi_15812852
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_15812852:
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback2855
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_103, $P5020
    set fb_tmp_483, pkg_viv_tmp_103
    repr_defined $I5004, fb_tmp_483
    unless $I5004 goto if1583_else2856 
    set $P5022, fb_tmp_483["%REG"]
    set $P5024, $P5022
    goto if1583_end2857
  if1583_else2856:
    null $P5023
    set $P5024, $P5023
  if1583_end2857:
    unless_null $P5024, vivi_15842858
    new $P5025, 'Hash'
    set pkg_viv_tmp_103["%REG"], $P5025
    set $P5024, $P5025
  vivi_15842858:
    unless_null $P5024, vivi_15852859
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_15852859:
    set $P5019, $P5024
  fallback2855:
    set fb_tmp_482, $P5019
    repr_defined $I5003, fb_tmp_482
    unless $I5003 goto if1582_else2853 
    set $P5027, fb_tmp_482["pos"]
    set $P5029, $P5027
    goto if1582_end2854
  if1582_else2853:
    null $P5028
    set $P5029, $P5028
  if1582_end2854:
    unless_null $P5029, vivi_15862860
    nqp_get_sc_object $P5030, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5029, $P5030
  vivi_15862860:
    $P5005."push_pirop"("is_cclass", "$I11", $P5006, $P5017, $P5029)
.annotate 'line', 3594
    find_lex $P5031, "$ops"
    find_dynamic_lex $P5032, "%*REG"
    unless_null $P5032, fallback2863
    nqp_get_sc_object $P5034, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5033, $P5034
    set pkg_viv_tmp_104, $P5033
    set fb_tmp_485, pkg_viv_tmp_104
    repr_defined $I5006, fb_tmp_485
    unless $I5006 goto if1588_else2864 
    set $P5035, fb_tmp_485["%REG"]
    set $P5037, $P5035
    goto if1588_end2865
  if1588_else2864:
    null $P5036
    set $P5037, $P5036
  if1588_end2865:
    unless_null $P5037, vivi_15892866
    new $P5038, 'Hash'
    set pkg_viv_tmp_104["%REG"], $P5038
    set $P5037, $P5038
  vivi_15892866:
    unless_null $P5037, vivi_15902867
    die "Contextual %*REG not found"
    box $P5039, "Contextual %*REG not found"
    set $P5037, $P5039
  vivi_15902867:
    set $P5032, $P5037
  fallback2863:
    set fb_tmp_484, $P5032
    repr_defined $I5005, fb_tmp_484
    unless $I5005 goto if1587_else2861 
    set $P5040, fb_tmp_484["fail"]
    set $P5042, $P5040
    goto if1587_end2862
  if1587_else2861:
    null $P5041
    set $P5042, $P5041
  if1587_end2862:
    unless_null $P5042, vivi_15912868
    nqp_get_sc_object $P5043, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5042, $P5043
  vivi_15912868:
    $P5031."push_pirop"($P101, "$I11", $P5042)
    find_lex $P5044, "$subtype"
    set $S5002, $P5044
    iseq $I5007, $S5002, "nl"
    box $P5086, $I5007
    set $P5085, $P5086
    unless $I5007 goto if1592_end2870 
.annotate 'line', 3595
.annotate 'line', 3596
    find_lex $P5045, "$ops"
    find_dynamic_lex $P5046, "%*REG"
    unless_null $P5046, fallback2873
    nqp_get_sc_object $P5048, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5047, $P5048
    set pkg_viv_tmp_105, $P5047
    set fb_tmp_487, pkg_viv_tmp_105
    repr_defined $I5009, fb_tmp_487
    unless $I5009 goto if1594_else2874 
    set $P5049, fb_tmp_487["%REG"]
    set $P5051, $P5049
    goto if1594_end2875
  if1594_else2874:
    null $P5050
    set $P5051, $P5050
  if1594_end2875:
    unless_null $P5051, vivi_15952876
    new $P5052, 'Hash'
    set pkg_viv_tmp_105["%REG"], $P5052
    set $P5051, $P5052
  vivi_15952876:
    unless_null $P5051, vivi_15962877
    die "Contextual %*REG not found"
    box $P5053, "Contextual %*REG not found"
    set $P5051, $P5053
  vivi_15962877:
    set $P5046, $P5051
  fallback2873:
    set fb_tmp_486, $P5046
    repr_defined $I5008, fb_tmp_486
    unless $I5008 goto if1593_else2871 
    set $P5054, fb_tmp_486["tgt"]
    set $P5056, $P5054
    goto if1593_end2872
  if1593_else2871:
    null $P5055
    set $P5056, $P5055
  if1593_end2872:
    unless_null $P5056, vivi_15972878
    nqp_get_sc_object $P5057, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5056, $P5057
  vivi_15972878:
    find_dynamic_lex $P5058, "%*REG"
    unless_null $P5058, fallback2881
    nqp_get_sc_object $P5060, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5059, $P5060
    set pkg_viv_tmp_106, $P5059
    set fb_tmp_489, pkg_viv_tmp_106
    repr_defined $I5011, fb_tmp_489
    unless $I5011 goto if1599_else2882 
    set $P5061, fb_tmp_489["%REG"]
    set $P5063, $P5061
    goto if1599_end2883
  if1599_else2882:
    null $P5062
    set $P5063, $P5062
  if1599_end2883:
    unless_null $P5063, vivi_16002884
    new $P5064, 'Hash'
    set pkg_viv_tmp_106["%REG"], $P5064
    set $P5063, $P5064
  vivi_16002884:
    unless_null $P5063, vivi_16012885
    die "Contextual %*REG not found"
    box $P5065, "Contextual %*REG not found"
    set $P5063, $P5065
  vivi_16012885:
    set $P5058, $P5063
  fallback2881:
    set fb_tmp_488, $P5058
    repr_defined $I5010, fb_tmp_488
    unless $I5010 goto if1598_else2879 
    set $P5066, fb_tmp_488["pos"]
    set $P5068, $P5066
    goto if1598_end2880
  if1598_else2879:
    null $P5067
    set $P5068, $P5067
  if1598_end2880:
    unless_null $P5068, vivi_16022886
    nqp_get_sc_object $P5069, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5068, $P5069
  vivi_16022886:
    $P5045."push_pirop"("substr", "$S10", $P5056, $P5068, 2)
.annotate 'line', 3597
    find_lex $P5070, "$ops"
    $P5070."push_pirop"("iseq", "$I11", "$S10", "\"\\r\\n\"")
.annotate 'line', 3598
    find_lex $P5071, "$ops"
    find_dynamic_lex $P5072, "%*REG"
    unless_null $P5072, fallback2889
    nqp_get_sc_object $P5074, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5073, $P5074
    set pkg_viv_tmp_107, $P5073
    set fb_tmp_491, pkg_viv_tmp_107
    repr_defined $I5013, fb_tmp_491
    unless $I5013 goto if1604_else2890 
    set $P5075, fb_tmp_491["%REG"]
    set $P5077, $P5075
    goto if1604_end2891
  if1604_else2890:
    null $P5076
    set $P5077, $P5076
  if1604_end2891:
    unless_null $P5077, vivi_16052892
    new $P5078, 'Hash'
    set pkg_viv_tmp_107["%REG"], $P5078
    set $P5077, $P5078
  vivi_16052892:
    unless_null $P5077, vivi_16062893
    die "Contextual %*REG not found"
    box $P5079, "Contextual %*REG not found"
    set $P5077, $P5079
  vivi_16062893:
    set $P5072, $P5077
  fallback2889:
    set fb_tmp_490, $P5072
    repr_defined $I5012, fb_tmp_490
    unless $I5012 goto if1603_else2887 
    set $P5080, fb_tmp_490["pos"]
    set $P5082, $P5080
    goto if1603_end2888
  if1603_else2887:
    null $P5081
    set $P5082, $P5081
  if1603_end2888:
    unless_null $P5082, vivi_16072894
    nqp_get_sc_object $P5083, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5082, $P5083
  vivi_16072894:
    $P5084 = $P5071."push_pirop"("add", $P5082, "$I11")
    set $P5085, $P5084
  if1592_end2870:
    .return ($P5085) 
.end
.HLL "nqp"
.namespace []
.sub "concat" :subid("cuid_124_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3605
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5022 = 'cuid_355_1361964166.213' 
    capture_lex $P5022 
    .lex "$ops", $P101 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_494 
    .local pmc fb_tmp_495 
    .local pmc pkg_viv_tmp_109 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3606
    nqp_decontainerize $P5002, _lex_param_0
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback2905
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_109, $P5004
    set fb_tmp_495, pkg_viv_tmp_109
    repr_defined $I5002, fb_tmp_495
    unless $I5002 goto if1614_else2906 
    set $P5006, fb_tmp_495["%REG"]
    set $P5008, $P5006
    goto if1614_end2907
  if1614_else2906:
    null $P5007
    set $P5008, $P5007
  if1614_end2907:
    unless_null $P5008, vivi_16152908
    new $P5009, 'Hash'
    set pkg_viv_tmp_109["%REG"], $P5009
    set $P5008, $P5009
  vivi_16152908:
    unless_null $P5008, vivi_16162909
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_16162909:
    set $P5003, $P5008
  fallback2905:
    set fb_tmp_494, $P5003
    repr_defined $I5001, fb_tmp_494
    unless $I5001 goto if1613_else2903 
    set $P5011, fb_tmp_494["cur"]
    set $P5013, $P5011
    goto if1613_end2904
  if1613_else2903:
    null $P5012
    set $P5013, $P5012
  if1613_end2904:
    unless_null $P5013, vivi_16172910
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_16172910:
    $P5015 = $P5002."post_new"("Ops", $P5013 :named("result"))
    set $P101, $P5015
.annotate 'line', 3607
    $P5019 = _lex_param_1."list"()
    set $P5016, $P5019
    iter $P5018, $P5019
  for_next2911:
    unless $P5018, for_done2913
    shift $P5021, $P5018
  for_redo2912:
    .const 'Sub' $P5020 = 'cuid_355_1361964166.213' 
    capture_lex $P5020
    $P5016 = $P5020($P5021)
    goto for_next2911
  for_done2913:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_355_1361964166.213") :anon :lex :outer("cuid_124_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3607
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    find_lex $P5001, "$ops"
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    $P5004 = $P5002."regex_post"(_lex_param_0)
    $P5005 = $P5001."push"($P5004)
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "conj" :subid("cuid_125_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3611
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."conjseq"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "conjseq" :subid("cuid_126_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3613
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$conjlabel", $P103 
    .lex "$firstlabel", $P104 
    .lex "$iter", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_496 
    .local pmc fb_tmp_497 
    .local pmc pkg_viv_tmp_110 
    .local pmc fb_tmp_498 
    .local pmc fb_tmp_499 
    .local pmc pkg_viv_tmp_111 
    .local pmc fb_tmp_500 
    .local pmc fb_tmp_501 
    .local pmc pkg_viv_tmp_112 
    .local pmc fb_tmp_502 
    .local pmc fb_tmp_503 
    .local pmc pkg_viv_tmp_113 
    .local pmc fb_tmp_504 
    .local pmc fb_tmp_505 
    .local pmc pkg_viv_tmp_114 
    .local pmc fb_tmp_506 
    .local pmc fb_tmp_507 
    .local pmc pkg_viv_tmp_115 
    .local pmc fb_tmp_508 
    .local pmc fb_tmp_509 
    .local pmc pkg_viv_tmp_116 
    .local pmc fb_tmp_510 
    .local pmc fb_tmp_511 
    .local pmc pkg_viv_tmp_117 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
.annotate 'line', 3614
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback2916
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_110, $P5008
    set fb_tmp_497, pkg_viv_tmp_110
    repr_defined $I5002, fb_tmp_497
    unless $I5002 goto if1619_else2917 
    set $P5010, fb_tmp_497["%REG"]
    set $P5012, $P5010
    goto if1619_end2918
  if1619_else2917:
    null $P5011
    set $P5012, $P5011
  if1619_end2918:
    unless_null $P5012, vivi_16202919
    new $P5013, 'Hash'
    set pkg_viv_tmp_110["%REG"], $P5013
    set $P5012, $P5013
  vivi_16202919:
    unless_null $P5012, vivi_16212920
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_16212920:
    set $P5007, $P5012
  fallback2916:
    set fb_tmp_496, $P5007
    repr_defined $I5001, fb_tmp_496
    unless $I5001 goto if1618_else2914 
    set $P5015, fb_tmp_496["cur"]
    set $P5017, $P5015
    goto if1618_end2915
  if1618_else2914:
    null $P5016
    set $P5017, $P5016
  if1618_end2915:
    unless_null $P5017, vivi_16222921
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_16222921:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 3615
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxconj")
    set $S5002, $P5021
    concat $S5001, $S5002, "_"
    box $P5022, $S5001
    set $P102, $P5022
.annotate 'line', 3616
    nqp_decontainerize $P5023, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "fail"
    $P5024 = $P5023."post_new"("Label", $S5003 :named("name"))
    set $P103, $P5024
.annotate 'line', 3617
    nqp_decontainerize $P5025, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "first"
    $P5026 = $P5025."post_new"("Label", $S5005 :named("name"))
    set $P104, $P5026
.annotate 'line', 3618
    $P5028 = _lex_param_1."list"()
    iter $P5027, $P5028
    set $P105, $P5027
.annotate 'line', 3620
    nqp_decontainerize $P5029, _lex_param_0
    find_dynamic_lex $P5030, "%*REG"
    unless_null $P5030, fallback2924
    nqp_get_sc_object $P5032, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5031, $P5032
    set pkg_viv_tmp_111, $P5031
    set fb_tmp_499, pkg_viv_tmp_111
    repr_defined $I5004, fb_tmp_499
    unless $I5004 goto if1624_else2925 
    set $P5033, fb_tmp_499["%REG"]
    set $P5035, $P5033
    goto if1624_end2926
  if1624_else2925:
    null $P5034
    set $P5035, $P5034
  if1624_end2926:
    unless_null $P5035, vivi_16252927
    new $P5036, 'Hash'
    set pkg_viv_tmp_111["%REG"], $P5036
    set $P5035, $P5036
  vivi_16252927:
    unless_null $P5035, vivi_16262928
    die "Contextual %*REG not found"
    box $P5037, "Contextual %*REG not found"
    set $P5035, $P5037
  vivi_16262928:
    set $P5030, $P5035
  fallback2924:
    set fb_tmp_498, $P5030
    repr_defined $I5003, fb_tmp_498
    unless $I5003 goto if1623_else2922 
    set $P5038, fb_tmp_498["pos"]
    set $P5040, $P5038
    goto if1623_end2923
  if1623_else2922:
    null $P5039
    set $P5040, $P5039
  if1623_end2923:
    unless_null $P5040, vivi_16272929
    nqp_get_sc_object $P5041, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5040, $P5041
  vivi_16272929:
    $P5029."regex_mark"($P101, $P103, $P5040, 0)
.annotate 'line', 3621
    $P101."push_pirop"("goto", $P104)
.annotate 'line', 3622
    $P101."push"($P103)
.annotate 'line', 3623
    find_dynamic_lex $P5042, "%*REG"
    unless_null $P5042, fallback2932
    nqp_get_sc_object $P5044, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5043, $P5044
    set pkg_viv_tmp_112, $P5043
    set fb_tmp_501, pkg_viv_tmp_112
    repr_defined $I5006, fb_tmp_501
    unless $I5006 goto if1629_else2933 
    set $P5045, fb_tmp_501["%REG"]
    set $P5047, $P5045
    goto if1629_end2934
  if1629_else2933:
    null $P5046
    set $P5047, $P5046
  if1629_end2934:
    unless_null $P5047, vivi_16302935
    new $P5048, 'Hash'
    set pkg_viv_tmp_112["%REG"], $P5048
    set $P5047, $P5048
  vivi_16302935:
    unless_null $P5047, vivi_16312936
    die "Contextual %*REG not found"
    box $P5049, "Contextual %*REG not found"
    set $P5047, $P5049
  vivi_16312936:
    set $P5042, $P5047
  fallback2932:
    set fb_tmp_500, $P5042
    repr_defined $I5005, fb_tmp_500
    unless $I5005 goto if1628_else2930 
    set $P5050, fb_tmp_500["fail"]
    set $P5052, $P5050
    goto if1628_end2931
  if1628_else2930:
    null $P5051
    set $P5052, $P5051
  if1628_end2931:
    unless_null $P5052, vivi_16322937
    nqp_get_sc_object $P5053, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5052, $P5053
  vivi_16322937:
    $P101."push_pirop"("goto", $P5052)
.annotate 'line', 3625
    $P101."push"($P104)
.annotate 'line', 3626
    nqp_decontainerize $P5054, _lex_param_0
    shift $P5055, $P105
    $P5056 = $P5054."regex_post"($P5055)
    $P101."push"($P5056)
.annotate 'line', 3628
    nqp_decontainerize $P5057, _lex_param_0
    $P5057."regex_peek"($P101, $P103, "$I11")
.annotate 'line', 3629
    nqp_decontainerize $P5058, _lex_param_0
    find_dynamic_lex $P5059, "%*REG"
    unless_null $P5059, fallback2940
    nqp_get_sc_object $P5061, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5060, $P5061
    set pkg_viv_tmp_113, $P5060
    set fb_tmp_503, pkg_viv_tmp_113
    repr_defined $I5008, fb_tmp_503
    unless $I5008 goto if1634_else2941 
    set $P5062, fb_tmp_503["%REG"]
    set $P5064, $P5062
    goto if1634_end2942
  if1634_else2941:
    null $P5063
    set $P5064, $P5063
  if1634_end2942:
    unless_null $P5064, vivi_16352943
    new $P5065, 'Hash'
    set pkg_viv_tmp_113["%REG"], $P5065
    set $P5064, $P5065
  vivi_16352943:
    unless_null $P5064, vivi_16362944
    die "Contextual %*REG not found"
    box $P5066, "Contextual %*REG not found"
    set $P5064, $P5066
  vivi_16362944:
    set $P5059, $P5064
  fallback2940:
    set fb_tmp_502, $P5059
    repr_defined $I5007, fb_tmp_502
    unless $I5007 goto if1633_else2938 
    set $P5067, fb_tmp_502["pos"]
    set $P5069, $P5067
    goto if1633_end2939
  if1633_else2938:
    null $P5068
    set $P5069, $P5068
  if1633_end2939:
    unless_null $P5069, vivi_16372945
    nqp_get_sc_object $P5070, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5069, $P5070
  vivi_16372945:
    $P5058."regex_mark"($P101, $P103, "$I11", $P5069)
  while1638_test2946:
    set $P5112, $P105
    unless $P105 goto while1638_done2950 
  while1638_redo2948:
.annotate 'line', 3631
.annotate 'line', 3632
    find_dynamic_lex $P5071, "%*REG"
    unless_null $P5071, fallback2953
    nqp_get_sc_object $P5073, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5072, $P5073
    set pkg_viv_tmp_114, $P5072
    set fb_tmp_505, pkg_viv_tmp_114
    repr_defined $I5010, fb_tmp_505
    unless $I5010 goto if1640_else2954 
    set $P5074, fb_tmp_505["%REG"]
    set $P5076, $P5074
    goto if1640_end2955
  if1640_else2954:
    null $P5075
    set $P5076, $P5075
  if1640_end2955:
    unless_null $P5076, vivi_16412956
    new $P5077, 'Hash'
    set pkg_viv_tmp_114["%REG"], $P5077
    set $P5076, $P5077
  vivi_16412956:
    unless_null $P5076, vivi_16422957
    die "Contextual %*REG not found"
    box $P5078, "Contextual %*REG not found"
    set $P5076, $P5078
  vivi_16422957:
    set $P5071, $P5076
  fallback2953:
    set fb_tmp_504, $P5071
    repr_defined $I5009, fb_tmp_504
    unless $I5009 goto if1639_else2951 
    set $P5079, fb_tmp_504["pos"]
    set $P5081, $P5079
    goto if1639_end2952
  if1639_else2951:
    null $P5080
    set $P5081, $P5080
  if1639_end2952:
    unless_null $P5081, vivi_16432958
    nqp_get_sc_object $P5082, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5081, $P5082
  vivi_16432958:
    $P101."push_pirop"("set", $P5081, "$I11")
.annotate 'line', 3633
    nqp_decontainerize $P5083, _lex_param_0
    shift $P5084, $P105
    $P5085 = $P5083."regex_post"($P5084)
    $P101."push"($P5085)
.annotate 'line', 3634
    nqp_decontainerize $P5086, _lex_param_0
    $P5086."regex_peek"($P101, $P103, "$I11", "$I12")
.annotate 'line', 3635
    find_dynamic_lex $P5087, "%*REG"
    unless_null $P5087, fallback2961
    nqp_get_sc_object $P5089, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5088, $P5089
    set pkg_viv_tmp_115, $P5088
    set fb_tmp_507, pkg_viv_tmp_115
    repr_defined $I5012, fb_tmp_507
    unless $I5012 goto if1645_else2962 
    set $P5090, fb_tmp_507["%REG"]
    set $P5092, $P5090
    goto if1645_end2963
  if1645_else2962:
    null $P5091
    set $P5092, $P5091
  if1645_end2963:
    unless_null $P5092, vivi_16462964
    new $P5093, 'Hash'
    set pkg_viv_tmp_115["%REG"], $P5093
    set $P5092, $P5093
  vivi_16462964:
    unless_null $P5092, vivi_16472965
    die "Contextual %*REG not found"
    box $P5094, "Contextual %*REG not found"
    set $P5092, $P5094
  vivi_16472965:
    set $P5087, $P5092
  fallback2961:
    set fb_tmp_506, $P5087
    repr_defined $I5011, fb_tmp_506
    unless $I5011 goto if1644_else2959 
    set $P5095, fb_tmp_506["pos"]
    set $P5097, $P5095
    goto if1644_end2960
  if1644_else2959:
    null $P5096
    set $P5097, $P5096
  if1644_end2960:
    unless_null $P5097, vivi_16482966
    nqp_get_sc_object $P5098, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5097, $P5098
  vivi_16482966:
    find_dynamic_lex $P5099, "%*REG"
    unless_null $P5099, fallback2969
    nqp_get_sc_object $P5101, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5100, $P5101
    set pkg_viv_tmp_116, $P5100
    set fb_tmp_509, pkg_viv_tmp_116
    repr_defined $I5014, fb_tmp_509
    unless $I5014 goto if1650_else2970 
    set $P5102, fb_tmp_509["%REG"]
    set $P5104, $P5102
    goto if1650_end2971
  if1650_else2970:
    null $P5103
    set $P5104, $P5103
  if1650_end2971:
    unless_null $P5104, vivi_16512972
    new $P5105, 'Hash'
    set pkg_viv_tmp_116["%REG"], $P5105
    set $P5104, $P5105
  vivi_16512972:
    unless_null $P5104, vivi_16522973
    die "Contextual %*REG not found"
    box $P5106, "Contextual %*REG not found"
    set $P5104, $P5106
  vivi_16522973:
    set $P5099, $P5104
  fallback2969:
    set fb_tmp_508, $P5099
    repr_defined $I5013, fb_tmp_508
    unless $I5013 goto if1649_else2967 
    set $P5107, fb_tmp_508["fail"]
    set $P5109, $P5107
    goto if1649_end2968
  if1649_else2967:
    null $P5108
    set $P5109, $P5108
  if1649_end2968:
    unless_null $P5109, vivi_16532974
    nqp_get_sc_object $P5110, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5109, $P5110
  vivi_16532974:
    $P5111 = $P101."push_pirop"("ne", $P5097, "$I12", $P5109)
    set $P5112, $P5111
    goto while1638_test2946 
  while1638_done2950:
.annotate 'line', 3637
    $P5113 = _lex_param_1."subtype"()
    set $S5007, $P5113
    iseq $I5015, $S5007, "zerowidth"
    unless $I5015 goto if1654_end2976 
    find_dynamic_lex $P5114, "%*REG"
    unless_null $P5114, fallback2979
    nqp_get_sc_object $P5116, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5115, $P5116
    set pkg_viv_tmp_117, $P5115
    set fb_tmp_511, pkg_viv_tmp_117
    repr_defined $I5017, fb_tmp_511
    unless $I5017 goto if1656_else2980 
    set $P5117, fb_tmp_511["%REG"]
    set $P5119, $P5117
    goto if1656_end2981
  if1656_else2980:
    null $P5118
    set $P5119, $P5118
  if1656_end2981:
    unless_null $P5119, vivi_16572982
    new $P5120, 'Hash'
    set pkg_viv_tmp_117["%REG"], $P5120
    set $P5119, $P5120
  vivi_16572982:
    unless_null $P5119, vivi_16582983
    die "Contextual %*REG not found"
    box $P5121, "Contextual %*REG not found"
    set $P5119, $P5121
  vivi_16582983:
    set $P5114, $P5119
  fallback2979:
    set fb_tmp_510, $P5114
    repr_defined $I5016, fb_tmp_510
    unless $I5016 goto if1655_else2977 
    set $P5122, fb_tmp_510["pos"]
    set $P5124, $P5122
    goto if1655_end2978
  if1655_else2977:
    null $P5123
    set $P5124, $P5123
  if1655_end2978:
    unless_null $P5124, vivi_16592984
    nqp_get_sc_object $P5125, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5124, $P5125
  vivi_16592984:
    $P5126 = $P101."push_pirop"("set", $P5124, "$I11")
  if1654_end2976:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "enumcharlist" :subid("cuid_127_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3641
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$charlist", $P102 
    .lex "$testop", $P103 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_512 
    .local pmc fb_tmp_513 
    .local pmc pkg_viv_tmp_118 
    .local pmc fb_tmp_514 
    .local pmc fb_tmp_515 
    .local pmc fb_tmp_516 
    .local pmc pkg_viv_tmp_119 
    .local pmc fb_tmp_517 
    .local pmc fb_tmp_518 
    .local pmc pkg_viv_tmp_120 
    .local pmc fb_tmp_519 
    .local pmc fb_tmp_520 
    .local pmc pkg_viv_tmp_121 
    .local pmc fb_tmp_521 
    .local pmc fb_tmp_522 
    .local pmc pkg_viv_tmp_122 
    .local pmc fb_tmp_523 
    .local pmc fb_tmp_524 
    .local pmc pkg_viv_tmp_123 
    .local pmc fb_tmp_525 
    .local pmc fb_tmp_526 
    .local pmc pkg_viv_tmp_124 
    .local pmc fb_tmp_527 
    .local pmc fb_tmp_528 
    .local pmc pkg_viv_tmp_125 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
.annotate 'line', 3642
    nqp_decontainerize $P5004, _lex_param_0
    find_dynamic_lex $P5005, "%*REG"
    unless_null $P5005, fallback2987
    nqp_get_sc_object $P5007, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5006, $P5007
    set pkg_viv_tmp_118, $P5006
    set fb_tmp_513, pkg_viv_tmp_118
    repr_defined $I5002, fb_tmp_513
    unless $I5002 goto if1661_else2988 
    set $P5008, fb_tmp_513["%REG"]
    set $P5010, $P5008
    goto if1661_end2989
  if1661_else2988:
    null $P5009
    set $P5010, $P5009
  if1661_end2989:
    unless_null $P5010, vivi_16622990
    new $P5011, 'Hash'
    set pkg_viv_tmp_118["%REG"], $P5011
    set $P5010, $P5011
  vivi_16622990:
    unless_null $P5010, vivi_16632991
    die "Contextual %*REG not found"
    box $P5012, "Contextual %*REG not found"
    set $P5010, $P5012
  vivi_16632991:
    set $P5005, $P5010
  fallback2987:
    set fb_tmp_512, $P5005
    repr_defined $I5001, fb_tmp_512
    unless $I5001 goto if1660_else2985 
    set $P5013, fb_tmp_512["cur"]
    set $P5015, $P5013
    goto if1660_end2986
  if1660_else2985:
    null $P5014
    set $P5015, $P5014
  if1660_end2986:
    unless_null $P5015, vivi_16642992
    nqp_get_sc_object $P5016, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5015, $P5016
  vivi_16642992:
    $P5017 = $P5004."post_new"("Ops", $P5015 :named("result"))
    set $P101, $P5017
.annotate 'line', 3643
    nqp_decontainerize $P5018, _lex_param_0
    set fb_tmp_514, _lex_param_1
    repr_defined $I5003, fb_tmp_514
    unless $I5003 goto if1665_else2993 
    set $P5019, fb_tmp_514[0]
    set $P5021, $P5019
    goto if1665_end2994
  if1665_else2993:
    null $P5020
    set $P5021, $P5020
  if1665_end2994:
    unless_null $P5021, vivi_16662995
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5021, $P5022
  vivi_16662995:
    $P5023 = $P5018."rxescape"($P5021)
    set $P102, $P5023
.annotate 'line', 3644
    $P5024 = _lex_param_1."negate"()
    unless $P5024 goto if1667_else2996 
    set $S5001, "ge"
    goto if1667_end2997
  if1667_else2996:
    set $S5001, "lt"
  if1667_end2997:
    box $P5025, $S5001
    set $P103, $P5025
.annotate 'line', 3645
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3000
    nqp_get_sc_object $P5028, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_119, $P5027
    set fb_tmp_516, pkg_viv_tmp_119
    repr_defined $I5005, fb_tmp_516
    unless $I5005 goto if1669_else3001 
    set $P5029, fb_tmp_516["%REG"]
    set $P5031, $P5029
    goto if1669_end3002
  if1669_else3001:
    null $P5030
    set $P5031, $P5030
  if1669_end3002:
    unless_null $P5031, vivi_16703003
    new $P5032, 'Hash'
    set pkg_viv_tmp_119["%REG"], $P5032
    set $P5031, $P5032
  vivi_16703003:
    unless_null $P5031, vivi_16713004
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_16713004:
    set $P5026, $P5031
  fallback3000:
    set fb_tmp_515, $P5026
    repr_defined $I5004, fb_tmp_515
    unless $I5004 goto if1668_else2998 
    set $P5034, fb_tmp_515["pos"]
    set $P5036, $P5034
    goto if1668_end2999
  if1668_else2998:
    null $P5035
    set $P5036, $P5035
  if1668_end2999:
    unless_null $P5036, vivi_16723005
    nqp_get_sc_object $P5037, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5036, $P5037
  vivi_16723005:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3008
    nqp_get_sc_object $P5040, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_120, $P5039
    set fb_tmp_518, pkg_viv_tmp_120
    repr_defined $I5007, fb_tmp_518
    unless $I5007 goto if1674_else3009 
    set $P5041, fb_tmp_518["%REG"]
    set $P5043, $P5041
    goto if1674_end3010
  if1674_else3009:
    null $P5042
    set $P5043, $P5042
  if1674_end3010:
    unless_null $P5043, vivi_16753011
    new $P5044, 'Hash'
    set pkg_viv_tmp_120["%REG"], $P5044
    set $P5043, $P5044
  vivi_16753011:
    unless_null $P5043, vivi_16763012
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_16763012:
    set $P5038, $P5043
  fallback3008:
    set fb_tmp_517, $P5038
    repr_defined $I5006, fb_tmp_517
    unless $I5006 goto if1673_else3006 
    set $P5046, fb_tmp_517["eos"]
    set $P5048, $P5046
    goto if1673_end3007
  if1673_else3006:
    null $P5047
    set $P5048, $P5047
  if1673_end3007:
    unless_null $P5048, vivi_16773013
    nqp_get_sc_object $P5049, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5048, $P5049
  vivi_16773013:
    find_dynamic_lex $P5050, "%*REG"
    unless_null $P5050, fallback3016
    nqp_get_sc_object $P5052, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5051, $P5052
    set pkg_viv_tmp_121, $P5051
    set fb_tmp_520, pkg_viv_tmp_121
    repr_defined $I5009, fb_tmp_520
    unless $I5009 goto if1679_else3017 
    set $P5053, fb_tmp_520["%REG"]
    set $P5055, $P5053
    goto if1679_end3018
  if1679_else3017:
    null $P5054
    set $P5055, $P5054
  if1679_end3018:
    unless_null $P5055, vivi_16803019
    new $P5056, 'Hash'
    set pkg_viv_tmp_121["%REG"], $P5056
    set $P5055, $P5056
  vivi_16803019:
    unless_null $P5055, vivi_16813020
    die "Contextual %*REG not found"
    box $P5057, "Contextual %*REG not found"
    set $P5055, $P5057
  vivi_16813020:
    set $P5050, $P5055
  fallback3016:
    set fb_tmp_519, $P5050
    repr_defined $I5008, fb_tmp_519
    unless $I5008 goto if1678_else3014 
    set $P5058, fb_tmp_519["fail"]
    set $P5060, $P5058
    goto if1678_end3015
  if1678_else3014:
    null $P5059
    set $P5060, $P5059
  if1678_end3015:
    unless_null $P5060, vivi_16823021
    nqp_get_sc_object $P5061, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5060, $P5061
  vivi_16823021:
    $P101."push_pirop"("ge", $P5036, $P5048, $P5060)
.annotate 'line', 3646
    find_dynamic_lex $P5062, "%*REG"
    unless_null $P5062, fallback3024
    nqp_get_sc_object $P5064, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5063, $P5064
    set pkg_viv_tmp_122, $P5063
    set fb_tmp_522, pkg_viv_tmp_122
    repr_defined $I5011, fb_tmp_522
    unless $I5011 goto if1684_else3025 
    set $P5065, fb_tmp_522["%REG"]
    set $P5067, $P5065
    goto if1684_end3026
  if1684_else3025:
    null $P5066
    set $P5067, $P5066
  if1684_end3026:
    unless_null $P5067, vivi_16853027
    new $P5068, 'Hash'
    set pkg_viv_tmp_122["%REG"], $P5068
    set $P5067, $P5068
  vivi_16853027:
    unless_null $P5067, vivi_16863028
    die "Contextual %*REG not found"
    box $P5069, "Contextual %*REG not found"
    set $P5067, $P5069
  vivi_16863028:
    set $P5062, $P5067
  fallback3024:
    set fb_tmp_521, $P5062
    repr_defined $I5010, fb_tmp_521
    unless $I5010 goto if1683_else3022 
    set $P5070, fb_tmp_521["tgt"]
    set $P5072, $P5070
    goto if1683_end3023
  if1683_else3022:
    null $P5071
    set $P5072, $P5071
  if1683_end3023:
    unless_null $P5072, vivi_16873029
    nqp_get_sc_object $P5073, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5072, $P5073
  vivi_16873029:
    find_dynamic_lex $P5074, "%*REG"
    unless_null $P5074, fallback3032
    nqp_get_sc_object $P5076, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5075, $P5076
    set pkg_viv_tmp_123, $P5075
    set fb_tmp_524, pkg_viv_tmp_123
    repr_defined $I5013, fb_tmp_524
    unless $I5013 goto if1689_else3033 
    set $P5077, fb_tmp_524["%REG"]
    set $P5079, $P5077
    goto if1689_end3034
  if1689_else3033:
    null $P5078
    set $P5079, $P5078
  if1689_end3034:
    unless_null $P5079, vivi_16903035
    new $P5080, 'Hash'
    set pkg_viv_tmp_123["%REG"], $P5080
    set $P5079, $P5080
  vivi_16903035:
    unless_null $P5079, vivi_16913036
    die "Contextual %*REG not found"
    box $P5081, "Contextual %*REG not found"
    set $P5079, $P5081
  vivi_16913036:
    set $P5074, $P5079
  fallback3032:
    set fb_tmp_523, $P5074
    repr_defined $I5012, fb_tmp_523
    unless $I5012 goto if1688_else3030 
    set $P5082, fb_tmp_523["pos"]
    set $P5084, $P5082
    goto if1688_end3031
  if1688_else3030:
    null $P5083
    set $P5084, $P5083
  if1688_end3031:
    unless_null $P5084, vivi_16923037
    nqp_get_sc_object $P5085, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5084, $P5085
  vivi_16923037:
    $P101."push_pirop"("substr", "$S11", $P5072, $P5084, 1)
.annotate 'line', 3647
    $P101."push_pirop"("index", "$I11", $P102, "$S11")
.annotate 'line', 3648
    find_dynamic_lex $P5086, "%*REG"
    unless_null $P5086, fallback3040
    nqp_get_sc_object $P5088, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5087, $P5088
    set pkg_viv_tmp_124, $P5087
    set fb_tmp_526, pkg_viv_tmp_124
    repr_defined $I5015, fb_tmp_526
    unless $I5015 goto if1694_else3041 
    set $P5089, fb_tmp_526["%REG"]
    set $P5091, $P5089
    goto if1694_end3042
  if1694_else3041:
    null $P5090
    set $P5091, $P5090
  if1694_end3042:
    unless_null $P5091, vivi_16953043
    new $P5092, 'Hash'
    set pkg_viv_tmp_124["%REG"], $P5092
    set $P5091, $P5092
  vivi_16953043:
    unless_null $P5091, vivi_16963044
    die "Contextual %*REG not found"
    box $P5093, "Contextual %*REG not found"
    set $P5091, $P5093
  vivi_16963044:
    set $P5086, $P5091
  fallback3040:
    set fb_tmp_525, $P5086
    repr_defined $I5014, fb_tmp_525
    unless $I5014 goto if1693_else3038 
    set $P5094, fb_tmp_525["fail"]
    set $P5096, $P5094
    goto if1693_end3039
  if1693_else3038:
    null $P5095
    set $P5096, $P5095
  if1693_end3039:
    unless_null $P5096, vivi_16973045
    nqp_get_sc_object $P5097, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5096, $P5097
  vivi_16973045:
    $P101."push_pirop"($P103, "$I11", 0, $P5096)
.annotate 'line', 3649
    $P5098 = _lex_param_1."subtype"()
    set $S5002, $P5098
    iseq $I5016, $S5002, "zerowidth"
    if $I5016 goto unless1698_end3047 
    find_dynamic_lex $P5099, "%*REG"
    unless_null $P5099, fallback3050
    nqp_get_sc_object $P5101, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5100, $P5101
    set pkg_viv_tmp_125, $P5100
    set fb_tmp_528, pkg_viv_tmp_125
    repr_defined $I5018, fb_tmp_528
    unless $I5018 goto if1700_else3051 
    set $P5102, fb_tmp_528["%REG"]
    set $P5104, $P5102
    goto if1700_end3052
  if1700_else3051:
    null $P5103
    set $P5104, $P5103
  if1700_end3052:
    unless_null $P5104, vivi_17013053
    new $P5105, 'Hash'
    set pkg_viv_tmp_125["%REG"], $P5105
    set $P5104, $P5105
  vivi_17013053:
    unless_null $P5104, vivi_17023054
    die "Contextual %*REG not found"
    box $P5106, "Contextual %*REG not found"
    set $P5104, $P5106
  vivi_17023054:
    set $P5099, $P5104
  fallback3050:
    set fb_tmp_527, $P5099
    repr_defined $I5017, fb_tmp_527
    unless $I5017 goto if1699_else3048 
    set $P5107, fb_tmp_527["pos"]
    set $P5109, $P5107
    goto if1699_end3049
  if1699_else3048:
    null $P5108
    set $P5109, $P5108
  if1699_end3049:
    unless_null $P5109, vivi_17033055
    nqp_get_sc_object $P5110, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5109, $P5110
  vivi_17033055:
    $P5111 = $P101."push_pirop"("inc", $P5109)
  unless1698_end3047:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "literal" :subid("cuid_128_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3653
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$litconst", $P102 
    .lex "$litlen", $P103 
    .lex "$litpost", $P104 
    .lex "$cmpop", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_529 
    .local pmc fb_tmp_530 
    .local pmc fb_tmp_531 
    .local pmc pkg_viv_tmp_126 
    .local pmc fb_tmp_532 
    .local pmc fb_tmp_533 
    .local pmc pkg_viv_tmp_127 
    .local pmc fb_tmp_534 
    .local pmc fb_tmp_535 
    .local pmc pkg_viv_tmp_128 
    .local pmc fb_tmp_536 
    .local pmc fb_tmp_537 
    .local pmc pkg_viv_tmp_129 
    .local pmc fb_tmp_538 
    .local pmc fb_tmp_539 
    .local pmc pkg_viv_tmp_130 
    .local pmc fb_tmp_540 
    .local pmc fb_tmp_541 
    .local pmc pkg_viv_tmp_131 
    .local pmc fb_tmp_542 
    .local pmc fb_tmp_543 
    .local pmc pkg_viv_tmp_132 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
.annotate 'line', 3654
    nqp_decontainerize $P5006, _lex_param_0
    $P5007 = $P5006."post_new"("Ops")
    set $P101, $P5007
    set fb_tmp_529, _lex_param_1
    repr_defined $I5001, fb_tmp_529
    unless $I5001 goto if1704_else3056 
    set $P5008, fb_tmp_529[0]
    set $P5010, $P5008
    goto if1704_end3057
  if1704_else3056:
    null $P5009
    set $P5010, $P5009
  if1704_end3057:
    unless_null $P5010, vivi_17053058
    nqp_get_sc_object $P5011, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5010, $P5011
  vivi_17053058:
    set $P102, $P5010
.annotate 'line', 3657
    $P5012 = _lex_param_1."subtype"()
    set $S5001, $P5012
    iseq $I5002, $S5001, "ignorecase"
    unless $I5002 goto if1706_end3060 
    set $S5003, $P102
    downcase $S5002, $S5003
    box $P5013, $S5002
    set $P102, $P5013
  if1706_end3060:
    set $S5004, $P102
    length $I5003, $S5004
    box $P5014, $I5003
    set $P103, $P5014
.annotate 'line', 3659
    nqp_decontainerize $P5015, _lex_param_0
    $P5016 = $P5015."rxescape"($P102)
    set $P104, $P5016
.annotate 'line', 3660
    $P5017 = _lex_param_1."negate"()
    unless $P5017 goto if1707_else3061 
    set $S5005, "eq"
    goto if1707_end3062
  if1707_else3061:
    set $S5005, "ne"
  if1707_end3062:
    box $P5018, $S5005
    set $P105, $P5018
.annotate 'line', 3661
    find_dynamic_lex $P5019, "%*REG"
    unless_null $P5019, fallback3065
    nqp_get_sc_object $P5021, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5020, $P5021
    set pkg_viv_tmp_126, $P5020
    set fb_tmp_531, pkg_viv_tmp_126
    repr_defined $I5005, fb_tmp_531
    unless $I5005 goto if1709_else3066 
    set $P5022, fb_tmp_531["%REG"]
    set $P5024, $P5022
    goto if1709_end3067
  if1709_else3066:
    null $P5023
    set $P5024, $P5023
  if1709_end3067:
    unless_null $P5024, vivi_17103068
    new $P5025, 'Hash'
    set pkg_viv_tmp_126["%REG"], $P5025
    set $P5024, $P5025
  vivi_17103068:
    unless_null $P5024, vivi_17113069
    die "Contextual %*REG not found"
    box $P5026, "Contextual %*REG not found"
    set $P5024, $P5026
  vivi_17113069:
    set $P5019, $P5024
  fallback3065:
    set fb_tmp_530, $P5019
    repr_defined $I5004, fb_tmp_530
    unless $I5004 goto if1708_else3063 
    set $P5027, fb_tmp_530["pos"]
    set $P5029, $P5027
    goto if1708_end3064
  if1708_else3063:
    null $P5028
    set $P5029, $P5028
  if1708_end3064:
    unless_null $P5029, vivi_17123070
    nqp_get_sc_object $P5030, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5029, $P5030
  vivi_17123070:
    $P101."push_pirop"("add", "$I11", $P5029, $P103)
.annotate 'line', 3662
    find_dynamic_lex $P5031, "%*REG"
    unless_null $P5031, fallback3073
    nqp_get_sc_object $P5033, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5032, $P5033
    set pkg_viv_tmp_127, $P5032
    set fb_tmp_533, pkg_viv_tmp_127
    repr_defined $I5007, fb_tmp_533
    unless $I5007 goto if1714_else3074 
    set $P5034, fb_tmp_533["%REG"]
    set $P5036, $P5034
    goto if1714_end3075
  if1714_else3074:
    null $P5035
    set $P5036, $P5035
  if1714_end3075:
    unless_null $P5036, vivi_17153076
    new $P5037, 'Hash'
    set pkg_viv_tmp_127["%REG"], $P5037
    set $P5036, $P5037
  vivi_17153076:
    unless_null $P5036, vivi_17163077
    die "Contextual %*REG not found"
    box $P5038, "Contextual %*REG not found"
    set $P5036, $P5038
  vivi_17163077:
    set $P5031, $P5036
  fallback3073:
    set fb_tmp_532, $P5031
    repr_defined $I5006, fb_tmp_532
    unless $I5006 goto if1713_else3071 
    set $P5039, fb_tmp_532["eos"]
    set $P5041, $P5039
    goto if1713_end3072
  if1713_else3071:
    null $P5040
    set $P5041, $P5040
  if1713_end3072:
    unless_null $P5041, vivi_17173078
    nqp_get_sc_object $P5042, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5041, $P5042
  vivi_17173078:
    find_dynamic_lex $P5043, "%*REG"
    unless_null $P5043, fallback3081
    nqp_get_sc_object $P5045, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5044, $P5045
    set pkg_viv_tmp_128, $P5044
    set fb_tmp_535, pkg_viv_tmp_128
    repr_defined $I5009, fb_tmp_535
    unless $I5009 goto if1719_else3082 
    set $P5046, fb_tmp_535["%REG"]
    set $P5048, $P5046
    goto if1719_end3083
  if1719_else3082:
    null $P5047
    set $P5048, $P5047
  if1719_end3083:
    unless_null $P5048, vivi_17203084
    new $P5049, 'Hash'
    set pkg_viv_tmp_128["%REG"], $P5049
    set $P5048, $P5049
  vivi_17203084:
    unless_null $P5048, vivi_17213085
    die "Contextual %*REG not found"
    box $P5050, "Contextual %*REG not found"
    set $P5048, $P5050
  vivi_17213085:
    set $P5043, $P5048
  fallback3081:
    set fb_tmp_534, $P5043
    repr_defined $I5008, fb_tmp_534
    unless $I5008 goto if1718_else3079 
    set $P5051, fb_tmp_534["fail"]
    set $P5053, $P5051
    goto if1718_end3080
  if1718_else3079:
    null $P5052
    set $P5053, $P5052
  if1718_end3080:
    unless_null $P5053, vivi_17223086
    nqp_get_sc_object $P5054, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5053, $P5054
  vivi_17223086:
    $P101."push_pirop"("gt", "$I11", $P5041, $P5053)
.annotate 'line', 3663
    find_dynamic_lex $P5055, "%*REG"
    unless_null $P5055, fallback3089
    nqp_get_sc_object $P5057, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5056, $P5057
    set pkg_viv_tmp_129, $P5056
    set fb_tmp_537, pkg_viv_tmp_129
    repr_defined $I5011, fb_tmp_537
    unless $I5011 goto if1724_else3090 
    set $P5058, fb_tmp_537["%REG"]
    set $P5060, $P5058
    goto if1724_end3091
  if1724_else3090:
    null $P5059
    set $P5060, $P5059
  if1724_end3091:
    unless_null $P5060, vivi_17253092
    new $P5061, 'Hash'
    set pkg_viv_tmp_129["%REG"], $P5061
    set $P5060, $P5061
  vivi_17253092:
    unless_null $P5060, vivi_17263093
    die "Contextual %*REG not found"
    box $P5062, "Contextual %*REG not found"
    set $P5060, $P5062
  vivi_17263093:
    set $P5055, $P5060
  fallback3089:
    set fb_tmp_536, $P5055
    repr_defined $I5010, fb_tmp_536
    unless $I5010 goto if1723_else3087 
    set $P5063, fb_tmp_536["tgt"]
    set $P5065, $P5063
    goto if1723_end3088
  if1723_else3087:
    null $P5064
    set $P5065, $P5064
  if1723_end3088:
    unless_null $P5065, vivi_17273094
    nqp_get_sc_object $P5066, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5065, $P5066
  vivi_17273094:
    find_dynamic_lex $P5067, "%*REG"
    unless_null $P5067, fallback3097
    nqp_get_sc_object $P5069, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5068, $P5069
    set pkg_viv_tmp_130, $P5068
    set fb_tmp_539, pkg_viv_tmp_130
    repr_defined $I5013, fb_tmp_539
    unless $I5013 goto if1729_else3098 
    set $P5070, fb_tmp_539["%REG"]
    set $P5072, $P5070
    goto if1729_end3099
  if1729_else3098:
    null $P5071
    set $P5072, $P5071
  if1729_end3099:
    unless_null $P5072, vivi_17303100
    new $P5073, 'Hash'
    set pkg_viv_tmp_130["%REG"], $P5073
    set $P5072, $P5073
  vivi_17303100:
    unless_null $P5072, vivi_17313101
    die "Contextual %*REG not found"
    box $P5074, "Contextual %*REG not found"
    set $P5072, $P5074
  vivi_17313101:
    set $P5067, $P5072
  fallback3097:
    set fb_tmp_538, $P5067
    repr_defined $I5012, fb_tmp_538
    unless $I5012 goto if1728_else3095 
    set $P5075, fb_tmp_538["pos"]
    set $P5077, $P5075
    goto if1728_end3096
  if1728_else3095:
    null $P5076
    set $P5077, $P5076
  if1728_end3096:
    unless_null $P5077, vivi_17323102
    nqp_get_sc_object $P5078, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5077, $P5078
  vivi_17323102:
    $P101."push_pirop"("substr", "$S10", $P5065, $P5077, $P103)
.annotate 'line', 3665
    $P5079 = _lex_param_1."subtype"()
    set $S5006, $P5079
    iseq $I5014, $S5006, "ignorecase"
    unless $I5014 goto if1733_end3104 
.annotate 'line', 3664
    $P5080 = $P101."push_pirop"("downcase", "$S10", "$S10")
  if1733_end3104:
.annotate 'line', 3666
    find_dynamic_lex $P5081, "%*REG"
    unless_null $P5081, fallback3107
    nqp_get_sc_object $P5083, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5082, $P5083
    set pkg_viv_tmp_131, $P5082
    set fb_tmp_541, pkg_viv_tmp_131
    repr_defined $I5016, fb_tmp_541
    unless $I5016 goto if1735_else3108 
    set $P5084, fb_tmp_541["%REG"]
    set $P5086, $P5084
    goto if1735_end3109
  if1735_else3108:
    null $P5085
    set $P5086, $P5085
  if1735_end3109:
    unless_null $P5086, vivi_17363110
    new $P5087, 'Hash'
    set pkg_viv_tmp_131["%REG"], $P5087
    set $P5086, $P5087
  vivi_17363110:
    unless_null $P5086, vivi_17373111
    die "Contextual %*REG not found"
    box $P5088, "Contextual %*REG not found"
    set $P5086, $P5088
  vivi_17373111:
    set $P5081, $P5086
  fallback3107:
    set fb_tmp_540, $P5081
    repr_defined $I5015, fb_tmp_540
    unless $I5015 goto if1734_else3105 
    set $P5089, fb_tmp_540["fail"]
    set $P5091, $P5089
    goto if1734_end3106
  if1734_else3105:
    null $P5090
    set $P5091, $P5090
  if1734_end3106:
    unless_null $P5091, vivi_17383112
    nqp_get_sc_object $P5092, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5091, $P5092
  vivi_17383112:
    $P101."push_pirop"($P105, "$S10", $P104, $P5091)
.annotate 'line', 3667
    find_dynamic_lex $P5093, "%*REG"
    unless_null $P5093, fallback3115
    nqp_get_sc_object $P5095, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5094, $P5095
    set pkg_viv_tmp_132, $P5094
    set fb_tmp_543, pkg_viv_tmp_132
    repr_defined $I5018, fb_tmp_543
    unless $I5018 goto if1740_else3116 
    set $P5096, fb_tmp_543["%REG"]
    set $P5098, $P5096
    goto if1740_end3117
  if1740_else3116:
    null $P5097
    set $P5098, $P5097
  if1740_end3117:
    unless_null $P5098, vivi_17413118
    new $P5099, 'Hash'
    set pkg_viv_tmp_132["%REG"], $P5099
    set $P5098, $P5099
  vivi_17413118:
    unless_null $P5098, vivi_17423119
    die "Contextual %*REG not found"
    box $P5100, "Contextual %*REG not found"
    set $P5098, $P5100
  vivi_17423119:
    set $P5093, $P5098
  fallback3115:
    set fb_tmp_542, $P5093
    repr_defined $I5017, fb_tmp_542
    unless $I5017 goto if1739_else3113 
    set $P5101, fb_tmp_542["pos"]
    set $P5103, $P5101
    goto if1739_end3114
  if1739_else3113:
    null $P5102
    set $P5103, $P5102
  if1739_end3114:
    unless_null $P5103, vivi_17433120
    nqp_get_sc_object $P5104, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5103, $P5104
  vivi_17433120:
    $P101."push_pirop"("add", $P5103, $P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "pass" :subid("cuid_129_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3671
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5064 = 'cuid_356_1361964166.213' 
    capture_lex $P5064 
    .const 'Sub' $P5064 = 'cuid_357_1361964166.213' 
    capture_lex $P5064 
    .lex "$ops", $P101 
    .lex "@backtrack", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_544 
    .local pmc fb_tmp_545 
    .local pmc pkg_viv_tmp_133 
    .local pmc fb_tmp_555 
    .local pmc fb_tmp_556 
    .local pmc pkg_viv_tmp_138 
    .local pmc fb_tmp_557 
    .local pmc fb_tmp_558 
    .local pmc pkg_viv_tmp_139 
    .local pmc fb_tmp_559 
    .local pmc fb_tmp_560 
    .local pmc pkg_viv_tmp_140 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    new $P5002, 'ResizablePMCArray'
    set $P102, $P5002
.annotate 'line', 3672
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3123
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_133, $P5005
    set fb_tmp_545, pkg_viv_tmp_133
    repr_defined $I5002, fb_tmp_545
    unless $I5002 goto if1745_else3124 
    set $P5007, fb_tmp_545["%REG"]
    set $P5009, $P5007
    goto if1745_end3125
  if1745_else3124:
    null $P5008
    set $P5009, $P5008
  if1745_end3125:
    unless_null $P5009, vivi_17463126
    new $P5010, 'Hash'
    set pkg_viv_tmp_133["%REG"], $P5010
    set $P5009, $P5010
  vivi_17463126:
    unless_null $P5009, vivi_17473127
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_17473127:
    set $P5004, $P5009
  fallback3123:
    set fb_tmp_544, $P5004
    repr_defined $I5001, fb_tmp_544
    unless $I5001 goto if1744_else3121 
    set $P5012, fb_tmp_544["cur"]
    set $P5014, $P5012
    goto if1744_end3122
  if1744_else3121:
    null $P5013
    set $P5014, $P5013
  if1744_end3122:
    unless_null $P5014, vivi_17483128
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5014, $P5015
  vivi_17483128:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 3674
    $P5017 = _lex_param_1."backtrack"()
    set $S5001, $P5017
    isne $I5003, $S5001, "r"
    unless $I5003 goto if1749_end3130 
    new $P5018, 'ResizablePMCArray'
    box $P5019, "'backtrack'=>1"
    push $P5018, $P5019
    set $P102, $P5018
  if1749_end3130:
.annotate 'line', 3675
    $P5020 = _lex_param_1."name"()
    unless $P5020 goto if1750_else3131 
    .const 'Sub' $P5021 = 'cuid_356_1361964166.213' 
    capture_lex $P5021
    $P5022 = $P5021()
    goto if1750_end3132
  if1750_else3131:
    $P5023 = _lex_param_1."list"()
    set $N5001, $P5023
    set $N5002, 1
    iseq $I5004, $N5001, $N5002
    unless $I5004 goto if1761_else3149 
    .const 'Sub' $P5024 = 'cuid_357_1361964166.213' 
    capture_lex $P5024
    $P5025 = $P5024()
    set $P5051, $P5025
    goto if1761_end3150
  if1761_else3149:
.annotate 'line', 3684
.annotate 'line', 3685
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3172
    nqp_get_sc_object $P5028, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_138, $P5027
    set fb_tmp_556, pkg_viv_tmp_138
    repr_defined $I5006, fb_tmp_556
    unless $I5006 goto if1775_else3173 
    set $P5029, fb_tmp_556["%REG"]
    set $P5031, $P5029
    goto if1775_end3174
  if1775_else3173:
    null $P5030
    set $P5031, $P5030
  if1775_end3174:
    unless_null $P5031, vivi_17763175
    new $P5032, 'Hash'
    set pkg_viv_tmp_138["%REG"], $P5032
    set $P5031, $P5032
  vivi_17763175:
    unless_null $P5031, vivi_17773176
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_17773176:
    set $P5026, $P5031
  fallback3172:
    set fb_tmp_555, $P5026
    repr_defined $I5005, fb_tmp_555
    unless $I5005 goto if1774_else3170 
    set $P5034, fb_tmp_555["cur"]
    set $P5036, $P5034
    goto if1774_end3171
  if1774_else3170:
    null $P5035
    set $P5036, $P5035
  if1774_end3171:
    unless_null $P5036, vivi_17783177
    nqp_get_sc_object $P5037, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5036, $P5037
  vivi_17783177:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3180
    nqp_get_sc_object $P5040, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_139, $P5039
    set fb_tmp_558, pkg_viv_tmp_139
    repr_defined $I5008, fb_tmp_558
    unless $I5008 goto if1780_else3181 
    set $P5041, fb_tmp_558["%REG"]
    set $P5043, $P5041
    goto if1780_end3182
  if1780_else3181:
    null $P5042
    set $P5043, $P5042
  if1780_end3182:
    unless_null $P5043, vivi_17813183
    new $P5044, 'Hash'
    set pkg_viv_tmp_139["%REG"], $P5044
    set $P5043, $P5044
  vivi_17813183:
    unless_null $P5043, vivi_17823184
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_17823184:
    set $P5038, $P5043
  fallback3180:
    set fb_tmp_557, $P5038
    repr_defined $I5007, fb_tmp_557
    unless $I5007 goto if1779_else3178 
    set $P5046, fb_tmp_557["pos"]
    set $P5048, $P5046
    goto if1779_end3179
  if1779_else3178:
    null $P5047
    set $P5048, $P5047
  if1779_end3179:
    unless_null $P5048, vivi_17833185
    nqp_get_sc_object $P5049, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5048, $P5049
  vivi_17833185:
    $P5050 = $P101."push_pirop"("callmethod", "\"!cursor_pass\"", $P5036, $P5048, $P102 :flat)
    set $P5051, $P5050
  if1761_end3150:
  if1750_end3132:
.annotate 'line', 3687
    find_dynamic_lex $P5052, "%*REG"
    unless_null $P5052, fallback3188
    nqp_get_sc_object $P5054, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5053, $P5054
    set pkg_viv_tmp_140, $P5053
    set fb_tmp_560, pkg_viv_tmp_140
    repr_defined $I5010, fb_tmp_560
    unless $I5010 goto if1785_else3189 
    set $P5055, fb_tmp_560["%REG"]
    set $P5057, $P5055
    goto if1785_end3190
  if1785_else3189:
    null $P5056
    set $P5057, $P5056
  if1785_end3190:
    unless_null $P5057, vivi_17863191
    new $P5058, 'Hash'
    set pkg_viv_tmp_140["%REG"], $P5058
    set $P5057, $P5058
  vivi_17863191:
    unless_null $P5057, vivi_17873192
    die "Contextual %*REG not found"
    box $P5059, "Contextual %*REG not found"
    set $P5057, $P5059
  vivi_17873192:
    set $P5052, $P5057
  fallback3188:
    set fb_tmp_559, $P5052
    repr_defined $I5009, fb_tmp_559
    unless $I5009 goto if1784_else3186 
    set $P5060, fb_tmp_559["cur"]
    set $P5062, $P5060
    goto if1784_end3187
  if1784_else3186:
    null $P5061
    set $P5062, $P5061
  if1784_end3187:
    unless_null $P5062, vivi_17883193
    nqp_get_sc_object $P5063, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5062, $P5063
  vivi_17883193:
    $P101."push_pirop"("return", $P5062)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_356_1361964166.213") :anon :lex :outer("cuid_129_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3675
    .lex "$name", $P101 
    .local pmc fb_tmp_546 
    .local pmc fb_tmp_547 
    .local pmc pkg_viv_tmp_134 
    .local pmc fb_tmp_548 
    .local pmc fb_tmp_549 
    .local pmc pkg_viv_tmp_135 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3676
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$node"
    $P5005 = $P5004."name"()
    $P5006 = $P5002."escape"($P5005)
    set $P101, $P5006
.annotate 'line', 3677
    find_lex $P5007, "$ops"
    find_dynamic_lex $P5008, "%*REG"
    unless_null $P5008, fallback3135
    nqp_get_sc_object $P5010, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5009, $P5010
    set pkg_viv_tmp_134, $P5009
    set fb_tmp_547, pkg_viv_tmp_134
    repr_defined $I5002, fb_tmp_547
    unless $I5002 goto if1752_else3136 
    set $P5011, fb_tmp_547["%REG"]
    set $P5013, $P5011
    goto if1752_end3137
  if1752_else3136:
    null $P5012
    set $P5013, $P5012
  if1752_end3137:
    unless_null $P5013, vivi_17533138
    new $P5014, 'Hash'
    set pkg_viv_tmp_134["%REG"], $P5014
    set $P5013, $P5014
  vivi_17533138:
    unless_null $P5013, vivi_17543139
    die "Contextual %*REG not found"
    box $P5015, "Contextual %*REG not found"
    set $P5013, $P5015
  vivi_17543139:
    set $P5008, $P5013
  fallback3135:
    set fb_tmp_546, $P5008
    repr_defined $I5001, fb_tmp_546
    unless $I5001 goto if1751_else3133 
    set $P5016, fb_tmp_546["cur"]
    set $P5018, $P5016
    goto if1751_end3134
  if1751_else3133:
    null $P5017
    set $P5018, $P5017
  if1751_end3134:
    unless_null $P5018, vivi_17553140
    nqp_get_sc_object $P5019, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5018, $P5019
  vivi_17553140:
    find_dynamic_lex $P5020, "%*REG"
    unless_null $P5020, fallback3143
    nqp_get_sc_object $P5022, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5021, $P5022
    set pkg_viv_tmp_135, $P5021
    set fb_tmp_549, pkg_viv_tmp_135
    repr_defined $I5004, fb_tmp_549
    unless $I5004 goto if1757_else3144 
    set $P5023, fb_tmp_549["%REG"]
    set $P5025, $P5023
    goto if1757_end3145
  if1757_else3144:
    null $P5024
    set $P5025, $P5024
  if1757_end3145:
    unless_null $P5025, vivi_17583146
    new $P5026, 'Hash'
    set pkg_viv_tmp_135["%REG"], $P5026
    set $P5025, $P5026
  vivi_17583146:
    unless_null $P5025, vivi_17593147
    die "Contextual %*REG not found"
    box $P5027, "Contextual %*REG not found"
    set $P5025, $P5027
  vivi_17593147:
    set $P5020, $P5025
  fallback3143:
    set fb_tmp_548, $P5020
    repr_defined $I5003, fb_tmp_548
    unless $I5003 goto if1756_else3141 
    set $P5028, fb_tmp_548["pos"]
    set $P5030, $P5028
    goto if1756_end3142
  if1756_else3141:
    null $P5029
    set $P5030, $P5029
  if1756_end3142:
    unless_null $P5030, vivi_17603148
    nqp_get_sc_object $P5031, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5030, $P5031
  vivi_17603148:
    find_lex $P5032, "@backtrack"
    $P5033 = $P5007."push_pirop"("callmethod", "\"!cursor_pass\"", $P5018, $P5030, $P101, $P5032 :flat)
    .return ($P5033) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_357_1361964166.213") :anon :lex :outer("cuid_129_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3679
    .lex "$dynname", $P101 
    .local pmc fb_tmp_550 
    .local pmc fb_tmp_551 
    .local pmc fb_tmp_552 
    .local pmc pkg_viv_tmp_136 
    .local pmc fb_tmp_553 
    .local pmc fb_tmp_554 
    .local pmc pkg_viv_tmp_137 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3680
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5005, "self"
    nqp_decontainerize $P5004, $P5005
    find_lex $P5006, "$node"
    set fb_tmp_550, $P5006
    repr_defined $I5001, fb_tmp_550
    unless $I5001 goto if1762_else3151 
    set $P5007, fb_tmp_550[0]
    set $P5009, $P5007
    goto if1762_end3152
  if1762_else3151:
    null $P5008
    set $P5009, $P5008
  if1762_end3152:
    unless_null $P5009, vivi_17633153
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5009, $P5010
  vivi_17633153:
    $P5011 = $P5004."as_post"($P5009)
    $P5012 = $P5002."coerce"($P5011, "S")
    set $P101, $P5012
.annotate 'line', 3681
    find_lex $P5013, "$ops"
    $P5013."push"($P101)
.annotate 'line', 3682
    find_lex $P5014, "$ops"
    find_dynamic_lex $P5015, "%*REG"
    unless_null $P5015, fallback3156
    nqp_get_sc_object $P5017, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5016, $P5017
    set pkg_viv_tmp_136, $P5016
    set fb_tmp_552, pkg_viv_tmp_136
    repr_defined $I5003, fb_tmp_552
    unless $I5003 goto if1765_else3157 
    set $P5018, fb_tmp_552["%REG"]
    set $P5020, $P5018
    goto if1765_end3158
  if1765_else3157:
    null $P5019
    set $P5020, $P5019
  if1765_end3158:
    unless_null $P5020, vivi_17663159
    new $P5021, 'Hash'
    set pkg_viv_tmp_136["%REG"], $P5021
    set $P5020, $P5021
  vivi_17663159:
    unless_null $P5020, vivi_17673160
    die "Contextual %*REG not found"
    box $P5022, "Contextual %*REG not found"
    set $P5020, $P5022
  vivi_17673160:
    set $P5015, $P5020
  fallback3156:
    set fb_tmp_551, $P5015
    repr_defined $I5002, fb_tmp_551
    unless $I5002 goto if1764_else3154 
    set $P5023, fb_tmp_551["cur"]
    set $P5025, $P5023
    goto if1764_end3155
  if1764_else3154:
    null $P5024
    set $P5025, $P5024
  if1764_end3155:
    unless_null $P5025, vivi_17683161
    nqp_get_sc_object $P5026, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5025, $P5026
  vivi_17683161:
    find_dynamic_lex $P5027, "%*REG"
    unless_null $P5027, fallback3164
    nqp_get_sc_object $P5029, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5028, $P5029
    set pkg_viv_tmp_137, $P5028
    set fb_tmp_554, pkg_viv_tmp_137
    repr_defined $I5005, fb_tmp_554
    unless $I5005 goto if1770_else3165 
    set $P5030, fb_tmp_554["%REG"]
    set $P5032, $P5030
    goto if1770_end3166
  if1770_else3165:
    null $P5031
    set $P5032, $P5031
  if1770_end3166:
    unless_null $P5032, vivi_17713167
    new $P5033, 'Hash'
    set pkg_viv_tmp_137["%REG"], $P5033
    set $P5032, $P5033
  vivi_17713167:
    unless_null $P5032, vivi_17723168
    die "Contextual %*REG not found"
    box $P5034, "Contextual %*REG not found"
    set $P5032, $P5034
  vivi_17723168:
    set $P5027, $P5032
  fallback3164:
    set fb_tmp_553, $P5027
    repr_defined $I5004, fb_tmp_553
    unless $I5004 goto if1769_else3162 
    set $P5035, fb_tmp_553["pos"]
    set $P5037, $P5035
    goto if1769_end3163
  if1769_else3162:
    null $P5036
    set $P5037, $P5036
  if1769_end3163:
    unless_null $P5037, vivi_17733169
    nqp_get_sc_object $P5038, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5037, $P5038
  vivi_17733169:
    find_lex $P5039, "@backtrack"
    $P5040 = $P5014."push_pirop"("callmethod", "\"!cursor_pass\"", $P5025, $P5037, $P101, $P5039 :flat)
    .return ($P5040) 
.end
.HLL "nqp"
.namespace []
.sub "qastnode" :subid("cuid_130_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3691
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$cpost", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_561 
    .local pmc fb_tmp_562 
    .local pmc pkg_viv_tmp_141 
    .local pmc fb_tmp_563 
    .local pmc fb_tmp_564 
    .local pmc pkg_viv_tmp_142 
    .local pmc fb_tmp_565 
    .local pmc fb_tmp_566 
    .local pmc pkg_viv_tmp_143 
    .local pmc fb_tmp_567 
    .local pmc fb_tmp_568 
    .local pmc pkg_viv_tmp_144 
    .local pmc fb_tmp_569 
    .local pmc fb_tmp_570 
    .local pmc pkg_viv_tmp_145 
    .local pmc fb_tmp_571 
    .local pmc fb_tmp_572 
    .local pmc fb_tmp_573 
    .local pmc pkg_viv_tmp_146 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 3692
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3196
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_141, $P5005
    set fb_tmp_562, pkg_viv_tmp_141
    repr_defined $I5002, fb_tmp_562
    unless $I5002 goto if1790_else3197 
    set $P5007, fb_tmp_562["%REG"]
    set $P5009, $P5007
    goto if1790_end3198
  if1790_else3197:
    null $P5008
    set $P5009, $P5008
  if1790_end3198:
    unless_null $P5009, vivi_17913199
    new $P5010, 'Hash'
    set pkg_viv_tmp_141["%REG"], $P5010
    set $P5009, $P5010
  vivi_17913199:
    unless_null $P5009, vivi_17923200
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_17923200:
    set $P5004, $P5009
  fallback3196:
    set fb_tmp_561, $P5004
    repr_defined $I5001, fb_tmp_561
    unless $I5001 goto if1789_else3194 
    set $P5012, fb_tmp_561["cur"]
    set $P5014, $P5012
    goto if1789_end3195
  if1789_else3194:
    null $P5013
    set $P5014, $P5013
  if1789_end3195:
    unless_null $P5014, vivi_17933201
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5014, $P5015
  vivi_17933201:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 3693
    find_dynamic_lex $P5017, "%*REG"
    unless_null $P5017, fallback3204
    nqp_get_sc_object $P5019, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5018, $P5019
    set pkg_viv_tmp_142, $P5018
    set fb_tmp_564, pkg_viv_tmp_142
    repr_defined $I5004, fb_tmp_564
    unless $I5004 goto if1795_else3205 
    set $P5020, fb_tmp_564["%REG"]
    set $P5022, $P5020
    goto if1795_end3206
  if1795_else3205:
    null $P5021
    set $P5022, $P5021
  if1795_end3206:
    unless_null $P5022, vivi_17963207
    new $P5023, 'Hash'
    set pkg_viv_tmp_142["%REG"], $P5023
    set $P5022, $P5023
  vivi_17963207:
    unless_null $P5022, vivi_17973208
    die "Contextual %*REG not found"
    box $P5024, "Contextual %*REG not found"
    set $P5022, $P5024
  vivi_17973208:
    set $P5017, $P5022
  fallback3204:
    set fb_tmp_563, $P5017
    repr_defined $I5003, fb_tmp_563
    unless $I5003 goto if1794_else3202 
    set $P5025, fb_tmp_563["cur"]
    set $P5027, $P5025
    goto if1794_end3203
  if1794_else3202:
    null $P5026
    set $P5027, $P5026
  if1794_end3203:
    unless_null $P5027, vivi_17983209
    nqp_get_sc_object $P5028, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5027, $P5028
  vivi_17983209:
    find_dynamic_lex $P5029, "%*REG"
    unless_null $P5029, fallback3212
    nqp_get_sc_object $P5031, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5030, $P5031
    set pkg_viv_tmp_143, $P5030
    set fb_tmp_566, pkg_viv_tmp_143
    repr_defined $I5006, fb_tmp_566
    unless $I5006 goto if1800_else3213 
    set $P5032, fb_tmp_566["%REG"]
    set $P5034, $P5032
    goto if1800_end3214
  if1800_else3213:
    null $P5033
    set $P5034, $P5033
  if1800_end3214:
    unless_null $P5034, vivi_18013215
    new $P5035, 'Hash'
    set pkg_viv_tmp_143["%REG"], $P5035
    set $P5034, $P5035
  vivi_18013215:
    unless_null $P5034, vivi_18023216
    die "Contextual %*REG not found"
    box $P5036, "Contextual %*REG not found"
    set $P5034, $P5036
  vivi_18023216:
    set $P5029, $P5034
  fallback3212:
    set fb_tmp_565, $P5029
    repr_defined $I5005, fb_tmp_565
    unless $I5005 goto if1799_else3210 
    set $P5037, fb_tmp_565["curclass"]
    set $P5039, $P5037
    goto if1799_end3211
  if1799_else3210:
    null $P5038
    set $P5039, $P5038
  if1799_end3211:
    unless_null $P5039, vivi_18033217
    nqp_get_sc_object $P5040, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5039, $P5040
  vivi_18033217:
    find_dynamic_lex $P5041, "%*REG"
    unless_null $P5041, fallback3220
    nqp_get_sc_object $P5043, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_144, $P5042
    set fb_tmp_568, pkg_viv_tmp_144
    repr_defined $I5008, fb_tmp_568
    unless $I5008 goto if1805_else3221 
    set $P5044, fb_tmp_568["%REG"]
    set $P5046, $P5044
    goto if1805_end3222
  if1805_else3221:
    null $P5045
    set $P5046, $P5045
  if1805_end3222:
    unless_null $P5046, vivi_18063223
    new $P5047, 'Hash'
    set pkg_viv_tmp_144["%REG"], $P5047
    set $P5046, $P5047
  vivi_18063223:
    unless_null $P5046, vivi_18073224
    die "Contextual %*REG not found"
    box $P5048, "Contextual %*REG not found"
    set $P5046, $P5048
  vivi_18073224:
    set $P5041, $P5046
  fallback3220:
    set fb_tmp_567, $P5041
    repr_defined $I5007, fb_tmp_567
    unless $I5007 goto if1804_else3218 
    set $P5049, fb_tmp_567["pos"]
    set $P5051, $P5049
    goto if1804_end3219
  if1804_else3218:
    null $P5050
    set $P5051, $P5050
  if1804_end3219:
    unless_null $P5051, vivi_18083225
    nqp_get_sc_object $P5052, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5051, $P5052
  vivi_18083225:
    $P101."push_pirop"("repr_bind_attr_int", $P5027, $P5039, "\"$!pos\"", $P5051)
.annotate 'line', 3694
    find_dynamic_lex $P5053, "%*REG"
    unless_null $P5053, fallback3228
    nqp_get_sc_object $P5055, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_145, $P5054
    set fb_tmp_570, pkg_viv_tmp_145
    repr_defined $I5010, fb_tmp_570
    unless $I5010 goto if1810_else3229 
    set $P5056, fb_tmp_570["%REG"]
    set $P5058, $P5056
    goto if1810_end3230
  if1810_else3229:
    null $P5057
    set $P5058, $P5057
  if1810_end3230:
    unless_null $P5058, vivi_18113231
    new $P5059, 'Hash'
    set pkg_viv_tmp_145["%REG"], $P5059
    set $P5058, $P5059
  vivi_18113231:
    unless_null $P5058, vivi_18123232
    die "Contextual %*REG not found"
    box $P5060, "Contextual %*REG not found"
    set $P5058, $P5060
  vivi_18123232:
    set $P5053, $P5058
  fallback3228:
    set fb_tmp_569, $P5053
    repr_defined $I5009, fb_tmp_569
    unless $I5009 goto if1809_else3226 
    set $P5061, fb_tmp_569["cur"]
    set $P5063, $P5061
    goto if1809_end3227
  if1809_else3226:
    null $P5062
    set $P5063, $P5062
  if1809_end3227:
    unless_null $P5063, vivi_18133233
    nqp_get_sc_object $P5064, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5063, $P5064
  vivi_18133233:
    $P101."push_pirop"("store_lex", utf8:"unicode:\"$\\x{a2}\"", $P5063)
.annotate 'line', 3695
    nqp_decontainerize $P5065, _lex_param_0
    nqp_decontainerize $P5066, _lex_param_0
    set fb_tmp_571, _lex_param_1
    repr_defined $I5011, fb_tmp_571
    unless $I5011 goto if1814_else3234 
    set $P5067, fb_tmp_571[0]
    set $P5069, $P5067
    goto if1814_end3235
  if1814_else3234:
    null $P5068
    set $P5069, $P5068
  if1814_end3235:
    unless_null $P5069, vivi_18153236
    nqp_get_sc_object $P5070, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5069, $P5070
  vivi_18153236:
    $P5071 = $P5066."as_post"($P5069)
    $P5072 = $P5065."coerce"($P5071, "P")
    set $P102, $P5072
.annotate 'line', 3696
    $P101."push"($P102)
.annotate 'line', 3697
    $P5073 = _lex_param_1."subtype"()
    set $S5001, $P5073
    iseq $I5012, $S5001, "zerowidth"
    unless $I5012 goto if1816_end3238 
.annotate 'line', 3698
    $P5074 = _lex_param_1."negate"()
    unless $P5074 goto if1817_else3239 
    set $S5002, "if"
    goto if1817_end3240
  if1817_else3239:
    set $S5002, "unless"
  if1817_end3240:
    find_dynamic_lex $P5075, "%*REG"
    unless_null $P5075, fallback3243
    nqp_get_sc_object $P5077, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5076, $P5077
    set pkg_viv_tmp_146, $P5076
    set fb_tmp_573, pkg_viv_tmp_146
    repr_defined $I5014, fb_tmp_573
    unless $I5014 goto if1819_else3244 
    set $P5078, fb_tmp_573["%REG"]
    set $P5080, $P5078
    goto if1819_end3245
  if1819_else3244:
    null $P5079
    set $P5080, $P5079
  if1819_end3245:
    unless_null $P5080, vivi_18203246
    new $P5081, 'Hash'
    set pkg_viv_tmp_146["%REG"], $P5081
    set $P5080, $P5081
  vivi_18203246:
    unless_null $P5080, vivi_18213247
    die "Contextual %*REG not found"
    box $P5082, "Contextual %*REG not found"
    set $P5080, $P5082
  vivi_18213247:
    set $P5075, $P5080
  fallback3243:
    set fb_tmp_572, $P5075
    repr_defined $I5013, fb_tmp_572
    unless $I5013 goto if1818_else3241 
    set $P5083, fb_tmp_572["fail"]
    set $P5085, $P5083
    goto if1818_end3242
  if1818_else3241:
    null $P5084
    set $P5085, $P5084
  if1818_end3242:
    unless_null $P5085, vivi_18223248
    nqp_get_sc_object $P5086, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5085, $P5086
  vivi_18223248:
    $P5087 = $P101."push_pirop"($S5002, $P102, $P5085)
  if1816_end3238:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "quant" :subid("cuid_131_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3703
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5170 = 'cuid_358_1361964166.213' 
    capture_lex $P5170 
    .lex "$ops", $P101 
    .lex "$backtrack", $P102 
    .lex "$sep", $P103 
    .lex "$prefix", $P104 
    .lex "$looplabel", $P105 
    .lex "$donelabel", $P106 
    .lex "$min", $P107 
    .lex "$max", $P108 
    .lex "$needrep", $P109 
    .lex "$needmark", $P110 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_574 
    .local pmc fb_tmp_575 
    .local pmc pkg_viv_tmp_147 
    .local pmc fb_tmp_576 
    .local pmc fb_tmp_598 
    .local pmc fb_tmp_599 
    .local pmc pkg_viv_tmp_158 
    .local pmc fb_tmp_600 
    .local pmc fb_tmp_601 
    .local pmc fb_tmp_602 
    .local pmc pkg_viv_tmp_159 
    .local pmc fb_tmp_603 
    .local pmc fb_tmp_604 
    .local pmc pkg_viv_tmp_160 
    .local pmc fb_tmp_605 
    .local pmc fb_tmp_606 
    .local pmc pkg_viv_tmp_161 
    .local pmc fb_tmp_607 
    .local pmc fb_tmp_608 
    .local pmc pkg_viv_tmp_162 
    .local pmc fb_tmp_609 
    .local pmc fb_tmp_610 
    .local pmc pkg_viv_tmp_163 
    .local pmc fb_tmp_611 
    .local pmc fb_tmp_612 
    .local pmc pkg_viv_tmp_164 
    .local pmc fb_tmp_613 
    .local pmc fb_tmp_614 
    .local pmc pkg_viv_tmp_165 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
    nqp_get_sc_object $P5006, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
    nqp_get_sc_object $P5010, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P110, $P5010
.annotate 'line', 3704
    nqp_decontainerize $P5011, _lex_param_0
    find_dynamic_lex $P5012, "%*REG"
    unless_null $P5012, fallback3251
    nqp_get_sc_object $P5014, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_147, $P5013
    set fb_tmp_575, pkg_viv_tmp_147
    repr_defined $I5002, fb_tmp_575
    unless $I5002 goto if1824_else3252 
    set $P5015, fb_tmp_575["%REG"]
    set $P5017, $P5015
    goto if1824_end3253
  if1824_else3252:
    null $P5016
    set $P5017, $P5016
  if1824_end3253:
    unless_null $P5017, vivi_18253254
    new $P5018, 'Hash'
    set pkg_viv_tmp_147["%REG"], $P5018
    set $P5017, $P5018
  vivi_18253254:
    unless_null $P5017, vivi_18263255
    die "Contextual %*REG not found"
    box $P5019, "Contextual %*REG not found"
    set $P5017, $P5019
  vivi_18263255:
    set $P5012, $P5017
  fallback3251:
    set fb_tmp_574, $P5012
    repr_defined $I5001, fb_tmp_574
    unless $I5001 goto if1823_else3249 
    set $P5020, fb_tmp_574["cur"]
    set $P5022, $P5020
    goto if1823_end3250
  if1823_else3249:
    null $P5021
    set $P5022, $P5021
  if1823_end3250:
    unless_null $P5022, vivi_18273256
    nqp_get_sc_object $P5023, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5022, $P5023
  vivi_18273256:
    $P5024 = $P5011."post_new"("Ops", $P5022 :named("result"))
    set $P101, $P5024
.annotate 'line', 3705
    $P5025 = _lex_param_1."backtrack"()
    set $P5026, $P5025
    if $P5025 goto unless1828_end3258 
    box $P5027, "g"
    set $P5026, $P5027
  unless1828_end3258:
    set $P102, $P5026
    set fb_tmp_576, _lex_param_1
    repr_defined $I5003, fb_tmp_576
    unless $I5003 goto if1829_else3259 
    set $P5028, fb_tmp_576[1]
    set $P5030, $P5028
    goto if1829_end3260
  if1829_else3259:
    null $P5029
    set $P5030, $P5029
  if1829_end3260:
    unless_null $P5030, vivi_18303261
    nqp_get_sc_object $P5031, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5030, $P5031
  vivi_18303261:
    set $P103, $P5030
.annotate 'line', 3707
    nqp_decontainerize $P5032, _lex_param_0
    set $S5002, $P102
    concat $S5001, "rxquant", $S5002
    $P5033 = $P5032."unique"($S5001)
    set $P104, $P5033
.annotate 'line', 3708
    nqp_decontainerize $P5034, _lex_param_0
    set $S5004, $P104
    concat $S5003, $S5004, "_loop"
    $P5035 = $P5034."post_new"("Label", $S5003 :named("name"))
    set $P105, $P5035
.annotate 'line', 3709
    nqp_decontainerize $P5036, _lex_param_0
    set $S5006, $P104
    concat $S5005, $S5006, "_done"
    $P5037 = $P5036."post_new"("Label", $S5005 :named("name"))
    set $P106, $P5037
.annotate 'line', 3710
    $P5038 = _lex_param_1."min"()
    set $P107, $P5038
.annotate 'line', 3711
    $P5039 = _lex_param_1."max"()
    set $P108, $P5039
    set $N5001, $P107
    set $N5002, 1
    isgt $I5004, $N5001, $N5002
    set $I5006, $I5004
    if $I5004 goto unless1831_end3263 
    set $N5003, $P108
    set $N5004, 1
    isgt $I5005, $N5003, $N5004
    set $I5006, $I5005
  unless1831_end3263:
    box $P5040, $I5006
    set $P109, $P5040
    set $P5041, $P109
    if $P109 goto unless1832_end3265 
    set $S5007, $P102
    iseq $I5007, $S5007, "r"
    box $P5042, $I5007
    set $P5041, $P5042
  unless1832_end3265:
    set $P110, $P5041
    set $N5005, $P107
    set $N5006, 0
    iseq $I5008, $N5005, $N5006
    set $I5010, $I5008
    unless $I5008 goto if1834_end3269 
    set $N5007, $P108
    set $N5008, 0
    iseq $I5009, $N5007, $N5008
    set $I5010, $I5009
  if1834_end3269:
    unless $I5010 goto if1833_else3266 
.annotate 'line', 3717
    nqp_get_sc_object $P5043, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    goto if1833_end3267
  if1833_else3266:
    set $S5008, $P102
    iseq $I5011, $S5008, "f"
    unless $I5011 goto if1835_else3270 
    .const 'Sub' $P5044 = 'cuid_358_1361964166.213' 
    capture_lex $P5044
    $P5045 = $P5044()
    set $P5169, $P5045
    goto if1835_end3271
  if1835_else3270:
.annotate 'line', 3741
    set $N5009, $P107
    set $N5010, 0
    iseq $I5012, $N5009, $N5010
    unless $I5012 goto if1895_else3369 
.annotate 'line', 3742
    nqp_decontainerize $P5046, _lex_param_0
    find_dynamic_lex $P5047, "%*REG"
    unless_null $P5047, fallback3373
    nqp_get_sc_object $P5049, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5048, $P5049
    set pkg_viv_tmp_158, $P5048
    set fb_tmp_599, pkg_viv_tmp_158
    repr_defined $I5014, fb_tmp_599
    unless $I5014 goto if1897_else3374 
    set $P5050, fb_tmp_599["%REG"]
    set $P5052, $P5050
    goto if1897_end3375
  if1897_else3374:
    null $P5051
    set $P5052, $P5051
  if1897_end3375:
    unless_null $P5052, vivi_18983376
    new $P5053, 'Hash'
    set pkg_viv_tmp_158["%REG"], $P5053
    set $P5052, $P5053
  vivi_18983376:
    unless_null $P5052, vivi_18993377
    die "Contextual %*REG not found"
    box $P5054, "Contextual %*REG not found"
    set $P5052, $P5054
  vivi_18993377:
    set $P5047, $P5052
  fallback3373:
    set fb_tmp_598, $P5047
    repr_defined $I5013, fb_tmp_598
    unless $I5013 goto if1896_else3371 
    set $P5055, fb_tmp_598["pos"]
    set $P5057, $P5055
    goto if1896_end3372
  if1896_else3371:
    null $P5056
    set $P5057, $P5056
  if1896_end3372:
    unless_null $P5057, vivi_19003378
    nqp_get_sc_object $P5058, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5057, $P5058
  vivi_19003378:
    $P5059 = $P5046."regex_mark"($P101, $P106, $P5057, 0)
    goto if1895_end3370
  if1895_else3369:
    set $P5062, $P110
    unless $P110 goto if1901_end3380 
.annotate 'line', 3743
    nqp_decontainerize $P5060, _lex_param_0
    $P5061 = $P5060."regex_mark"($P101, $P106, -1, 0)
    set $P5062, $P5061
  if1901_end3380:
  if1895_end3370:
.annotate 'line', 3744
    $P101."push"($P105)
.annotate 'line', 3745
    nqp_decontainerize $P5063, _lex_param_0
    set fb_tmp_600, _lex_param_1
    repr_defined $I5015, fb_tmp_600
    unless $I5015 goto if1902_else3381 
    set $P5064, fb_tmp_600[0]
    set $P5066, $P5064
    goto if1902_end3382
  if1902_else3381:
    null $P5065
    set $P5066, $P5065
  if1902_end3382:
    unless_null $P5066, vivi_19033383
    nqp_get_sc_object $P5067, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5066, $P5067
  vivi_19033383:
    $P5068 = $P5063."regex_post"($P5066)
    $P101."push"($P5068)
    unless $P110 goto if1904_end3385 
.annotate 'line', 3746
.annotate 'line', 3747
    nqp_decontainerize $P5069, _lex_param_0
    find_dynamic_lex $P5070, "%*REG"
    unless_null $P5070, fallback3388
    nqp_get_sc_object $P5072, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5071, $P5072
    set pkg_viv_tmp_159, $P5071
    set fb_tmp_602, pkg_viv_tmp_159
    repr_defined $I5017, fb_tmp_602
    unless $I5017 goto if1906_else3389 
    set $P5073, fb_tmp_602["%REG"]
    set $P5075, $P5073
    goto if1906_end3390
  if1906_else3389:
    null $P5074
    set $P5075, $P5074
  if1906_end3390:
    unless_null $P5075, vivi_19073391
    new $P5076, 'Hash'
    set pkg_viv_tmp_159["%REG"], $P5076
    set $P5075, $P5076
  vivi_19073391:
    unless_null $P5075, vivi_19083392
    die "Contextual %*REG not found"
    box $P5077, "Contextual %*REG not found"
    set $P5075, $P5077
  vivi_19083392:
    set $P5070, $P5075
  fallback3388:
    set fb_tmp_601, $P5070
    repr_defined $I5016, fb_tmp_601
    unless $I5016 goto if1905_else3386 
    set $P5078, fb_tmp_601["rep"]
    set $P5080, $P5078
    goto if1905_end3387
  if1905_else3386:
    null $P5079
    set $P5080, $P5079
  if1905_end3387:
    unless_null $P5080, vivi_19093393
    nqp_get_sc_object $P5081, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5080, $P5081
  vivi_19093393:
    $P5069."regex_peek"($P101, $P106, "*", $P5080)
    set $S5009, $P102
    iseq $I5018, $S5009, "r"
    unless $I5018 goto if1910_end3395 
.annotate 'line', 3748
    nqp_decontainerize $P5082, _lex_param_0
    $P5083 = $P5082."regex_commit"($P101, $P106)
  if1910_end3395:
.annotate 'line', 3749
    find_dynamic_lex $P5084, "%*REG"
    unless_null $P5084, fallback3398
    nqp_get_sc_object $P5086, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5085, $P5086
    set pkg_viv_tmp_160, $P5085
    set fb_tmp_604, pkg_viv_tmp_160
    repr_defined $I5020, fb_tmp_604
    unless $I5020 goto if1912_else3399 
    set $P5087, fb_tmp_604["%REG"]
    set $P5089, $P5087
    goto if1912_end3400
  if1912_else3399:
    null $P5088
    set $P5089, $P5088
  if1912_end3400:
    unless_null $P5089, vivi_19133401
    new $P5090, 'Hash'
    set pkg_viv_tmp_160["%REG"], $P5090
    set $P5089, $P5090
  vivi_19133401:
    unless_null $P5089, vivi_19143402
    die "Contextual %*REG not found"
    box $P5091, "Contextual %*REG not found"
    set $P5089, $P5091
  vivi_19143402:
    set $P5084, $P5089
  fallback3398:
    set fb_tmp_603, $P5084
    repr_defined $I5019, fb_tmp_603
    unless $I5019 goto if1911_else3396 
    set $P5092, fb_tmp_603["rep"]
    set $P5094, $P5092
    goto if1911_end3397
  if1911_else3396:
    null $P5093
    set $P5094, $P5093
  if1911_end3397:
    unless_null $P5094, vivi_19153403
    nqp_get_sc_object $P5095, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5094, $P5095
  vivi_19153403:
    $P101."push_pirop"("inc", $P5094)
    set $N5011, $P108
    set $N5012, 1
    isgt $I5021, $N5011, $N5012
    box $P5111, $I5021
    set $P5110, $P5111
    unless $I5021 goto if1916_end3405 
.annotate 'line', 3750
    find_dynamic_lex $P5096, "%*REG"
    unless_null $P5096, fallback3408
    nqp_get_sc_object $P5098, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5097, $P5098
    set pkg_viv_tmp_161, $P5097
    set fb_tmp_606, pkg_viv_tmp_161
    repr_defined $I5023, fb_tmp_606
    unless $I5023 goto if1918_else3409 
    set $P5099, fb_tmp_606["%REG"]
    set $P5101, $P5099
    goto if1918_end3410
  if1918_else3409:
    null $P5100
    set $P5101, $P5100
  if1918_end3410:
    unless_null $P5101, vivi_19193411
    new $P5102, 'Hash'
    set pkg_viv_tmp_161["%REG"], $P5102
    set $P5101, $P5102
  vivi_19193411:
    unless_null $P5101, vivi_19203412
    die "Contextual %*REG not found"
    box $P5103, "Contextual %*REG not found"
    set $P5101, $P5103
  vivi_19203412:
    set $P5096, $P5101
  fallback3408:
    set fb_tmp_605, $P5096
    repr_defined $I5022, fb_tmp_605
    unless $I5022 goto if1917_else3406 
    set $P5104, fb_tmp_605["rep"]
    set $P5106, $P5104
    goto if1917_end3407
  if1917_else3406:
    null $P5105
    set $P5106, $P5105
  if1917_end3407:
    unless_null $P5106, vivi_19213413
    nqp_get_sc_object $P5107, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5106, $P5107
  vivi_19213413:
    $P5108 = _lex_param_1."max"()
    $P5109 = $P101."push_pirop"("ge", $P5106, $P5108, $P106)
    set $P5110, $P5109
  if1916_end3405:
  if1904_end3385:
    set $N5013, $P108
    set $N5014, 1
    iseq $I5024, $N5013, $N5014
    if $I5024 goto unless1922_end3415 
.annotate 'line', 3753
.annotate 'line', 3754
    nqp_decontainerize $P5112, _lex_param_0
    find_dynamic_lex $P5113, "%*REG"
    unless_null $P5113, fallback3418
    nqp_get_sc_object $P5115, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5114, $P5115
    set pkg_viv_tmp_162, $P5114
    set fb_tmp_608, pkg_viv_tmp_162
    repr_defined $I5026, fb_tmp_608
    unless $I5026 goto if1924_else3419 
    set $P5116, fb_tmp_608["%REG"]
    set $P5118, $P5116
    goto if1924_end3420
  if1924_else3419:
    null $P5117
    set $P5118, $P5117
  if1924_end3420:
    unless_null $P5118, vivi_19253421
    new $P5119, 'Hash'
    set pkg_viv_tmp_162["%REG"], $P5119
    set $P5118, $P5119
  vivi_19253421:
    unless_null $P5118, vivi_19263422
    die "Contextual %*REG not found"
    box $P5120, "Contextual %*REG not found"
    set $P5118, $P5120
  vivi_19263422:
    set $P5113, $P5118
  fallback3418:
    set fb_tmp_607, $P5113
    repr_defined $I5025, fb_tmp_607
    unless $I5025 goto if1923_else3416 
    set $P5121, fb_tmp_607["pos"]
    set $P5123, $P5121
    goto if1923_end3417
  if1923_else3416:
    null $P5122
    set $P5123, $P5122
  if1923_end3417:
    unless_null $P5123, vivi_19273423
    nqp_get_sc_object $P5124, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5123, $P5124
  vivi_19273423:
    find_dynamic_lex $P5125, "%*REG"
    unless_null $P5125, fallback3426
    nqp_get_sc_object $P5127, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5126, $P5127
    set pkg_viv_tmp_163, $P5126
    set fb_tmp_610, pkg_viv_tmp_163
    repr_defined $I5028, fb_tmp_610
    unless $I5028 goto if1929_else3427 
    set $P5128, fb_tmp_610["%REG"]
    set $P5130, $P5128
    goto if1929_end3428
  if1929_else3427:
    null $P5129
    set $P5130, $P5129
  if1929_end3428:
    unless_null $P5130, vivi_19303429
    new $P5131, 'Hash'
    set pkg_viv_tmp_163["%REG"], $P5131
    set $P5130, $P5131
  vivi_19303429:
    unless_null $P5130, vivi_19313430
    die "Contextual %*REG not found"
    box $P5132, "Contextual %*REG not found"
    set $P5130, $P5132
  vivi_19313430:
    set $P5125, $P5130
  fallback3426:
    set fb_tmp_609, $P5125
    repr_defined $I5027, fb_tmp_609
    unless $I5027 goto if1928_else3424 
    set $P5133, fb_tmp_609["rep"]
    set $P5135, $P5133
    goto if1928_end3425
  if1928_else3424:
    null $P5134
    set $P5135, $P5134
  if1928_end3425:
    unless_null $P5135, vivi_19323431
    nqp_get_sc_object $P5136, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5135, $P5136
  vivi_19323431:
    $P5112."regex_mark"($P101, $P106, $P5123, $P5135)
    unless $P103 goto if1933_end3433 
.annotate 'line', 3755
    nqp_decontainerize $P5137, _lex_param_0
    $P5138 = $P5137."regex_post"($P103)
    $P5139 = $P101."push"($P5138)
  if1933_end3433:
.annotate 'line', 3756
    $P5140 = $P101."push_pirop"("goto", $P105)
  unless1922_end3415:
.annotate 'line', 3758
    $P101."push"($P106)
    set $N5015, $P107
    set $N5016, 1
    isgt $I5029, $N5015, $N5016
    box $P5168, $I5029
    set $P5167, $P5168
    unless $I5029 goto if1934_end3435 
.annotate 'line', 3759
    find_dynamic_lex $P5141, "%*REG"
    unless_null $P5141, fallback3438
    nqp_get_sc_object $P5143, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5142, $P5143
    set pkg_viv_tmp_164, $P5142
    set fb_tmp_612, pkg_viv_tmp_164
    repr_defined $I5031, fb_tmp_612
    unless $I5031 goto if1936_else3439 
    set $P5144, fb_tmp_612["%REG"]
    set $P5146, $P5144
    goto if1936_end3440
  if1936_else3439:
    null $P5145
    set $P5146, $P5145
  if1936_end3440:
    unless_null $P5146, vivi_19373441
    new $P5147, 'Hash'
    set pkg_viv_tmp_164["%REG"], $P5147
    set $P5146, $P5147
  vivi_19373441:
    unless_null $P5146, vivi_19383442
    die "Contextual %*REG not found"
    box $P5148, "Contextual %*REG not found"
    set $P5146, $P5148
  vivi_19383442:
    set $P5141, $P5146
  fallback3438:
    set fb_tmp_611, $P5141
    repr_defined $I5030, fb_tmp_611
    unless $I5030 goto if1935_else3436 
    set $P5149, fb_tmp_611["rep"]
    set $P5151, $P5149
    goto if1935_end3437
  if1935_else3436:
    null $P5150
    set $P5151, $P5150
  if1935_end3437:
    unless_null $P5151, vivi_19393443
    nqp_get_sc_object $P5152, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5151, $P5152
  vivi_19393443:
    $P5153 = _lex_param_1."min"()
    set $N5017, $P5153
    find_dynamic_lex $P5154, "%*REG"
    unless_null $P5154, fallback3446
    nqp_get_sc_object $P5156, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5155, $P5156
    set pkg_viv_tmp_165, $P5155
    set fb_tmp_614, pkg_viv_tmp_165
    repr_defined $I5033, fb_tmp_614
    unless $I5033 goto if1941_else3447 
    set $P5157, fb_tmp_614["%REG"]
    set $P5159, $P5157
    goto if1941_end3448
  if1941_else3447:
    null $P5158
    set $P5159, $P5158
  if1941_end3448:
    unless_null $P5159, vivi_19423449
    new $P5160, 'Hash'
    set pkg_viv_tmp_165["%REG"], $P5160
    set $P5159, $P5160
  vivi_19423449:
    unless_null $P5159, vivi_19433450
    die "Contextual %*REG not found"
    box $P5161, "Contextual %*REG not found"
    set $P5159, $P5161
  vivi_19433450:
    set $P5154, $P5159
  fallback3446:
    set fb_tmp_613, $P5154
    repr_defined $I5032, fb_tmp_613
    unless $I5032 goto if1940_else3444 
    set $P5162, fb_tmp_613["fail"]
    set $P5164, $P5162
    goto if1940_end3445
  if1940_else3444:
    null $P5163
    set $P5164, $P5163
  if1940_end3445:
    unless_null $P5164, vivi_19443451
    nqp_get_sc_object $P5165, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5164, $P5165
  vivi_19443451:
    $P5166 = $P101."push_pirop"("lt", $P5151, $N5017, $P5164)
    set $P5167, $P5166
  if1934_end3435:
    set $P5169, $P5167
  if1835_end3271:
  if1833_end3267:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_358_1361964166.213") :anon :lex :outer("cuid_131_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3720
    .lex "$seplabel", $P101 
    .lex "$ireg", $P102 
    .local pmc fb_tmp_577 
    .local pmc fb_tmp_578 
    .local pmc pkg_viv_tmp_148 
    .local pmc fb_tmp_579 
    .local pmc fb_tmp_580 
    .local pmc pkg_viv_tmp_149 
    .local pmc fb_tmp_581 
    .local pmc fb_tmp_582 
    .local pmc pkg_viv_tmp_150 
    .local pmc fb_tmp_583 
    .local pmc fb_tmp_584 
    .local pmc pkg_viv_tmp_151 
    .local pmc fb_tmp_585 
    .local pmc fb_tmp_586 
    .local pmc fb_tmp_587 
    .local pmc pkg_viv_tmp_152 
    .local pmc fb_tmp_588 
    .local pmc fb_tmp_589 
    .local pmc pkg_viv_tmp_153 
    .local pmc fb_tmp_590 
    .local pmc fb_tmp_591 
    .local pmc pkg_viv_tmp_154 
    .local pmc fb_tmp_592 
    .local pmc fb_tmp_593 
    .local pmc pkg_viv_tmp_155 
    .local pmc fb_tmp_594 
    .local pmc fb_tmp_595 
    .local pmc pkg_viv_tmp_156 
    .local pmc fb_tmp_596 
    .local pmc fb_tmp_597 
    .local pmc pkg_viv_tmp_157 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 3721
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    find_lex $P5005, "$prefix"
    set $S5002, $P5005
    concat $S5001, $S5002, "_sep"
    $P5006 = $P5003."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5006
    box $P5007, "$I12"
    set $P102, $P5007
.annotate 'line', 3723
    find_lex $P5008, "$ops"
    find_dynamic_lex $P5009, "%*REG"
    unless_null $P5009, fallback3274
    nqp_get_sc_object $P5011, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5010, $P5011
    set pkg_viv_tmp_148, $P5010
    set fb_tmp_578, pkg_viv_tmp_148
    repr_defined $I5002, fb_tmp_578
    unless $I5002 goto if1837_else3275 
    set $P5012, fb_tmp_578["%REG"]
    set $P5014, $P5012
    goto if1837_end3276
  if1837_else3275:
    null $P5013
    set $P5014, $P5013
  if1837_end3276:
    unless_null $P5014, vivi_18383277
    new $P5015, 'Hash'
    set pkg_viv_tmp_148["%REG"], $P5015
    set $P5014, $P5015
  vivi_18383277:
    unless_null $P5014, vivi_18393278
    die "Contextual %*REG not found"
    box $P5016, "Contextual %*REG not found"
    set $P5014, $P5016
  vivi_18393278:
    set $P5009, $P5014
  fallback3274:
    set fb_tmp_577, $P5009
    repr_defined $I5001, fb_tmp_577
    unless $I5001 goto if1836_else3272 
    set $P5017, fb_tmp_577["rep"]
    set $P5019, $P5017
    goto if1836_end3273
  if1836_else3272:
    null $P5018
    set $P5019, $P5018
  if1836_end3273:
    unless_null $P5019, vivi_18403279
    nqp_get_sc_object $P5020, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5019, $P5020
  vivi_18403279:
    $P5008."push_pirop"("set", $P5019, 0)
    find_lex $P5021, "$min"
    set $N5001, $P5021
    set $N5002, 1
    islt $I5003, $N5001, $N5002
    unless $I5003 goto if1841_end3281 
.annotate 'line', 3724
.annotate 'line', 3725
    find_lex $P5023, "self"
    nqp_decontainerize $P5022, $P5023
    find_lex $P5024, "$ops"
    find_lex $P5025, "$looplabel"
    find_dynamic_lex $P5026, "%*REG"
    unless_null $P5026, fallback3284
    nqp_get_sc_object $P5028, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_149, $P5027
    set fb_tmp_580, pkg_viv_tmp_149
    repr_defined $I5005, fb_tmp_580
    unless $I5005 goto if1843_else3285 
    set $P5029, fb_tmp_580["%REG"]
    set $P5031, $P5029
    goto if1843_end3286
  if1843_else3285:
    null $P5030
    set $P5031, $P5030
  if1843_end3286:
    unless_null $P5031, vivi_18443287
    new $P5032, 'Hash'
    set pkg_viv_tmp_149["%REG"], $P5032
    set $P5031, $P5032
  vivi_18443287:
    unless_null $P5031, vivi_18453288
    die "Contextual %*REG not found"
    box $P5033, "Contextual %*REG not found"
    set $P5031, $P5033
  vivi_18453288:
    set $P5026, $P5031
  fallback3284:
    set fb_tmp_579, $P5026
    repr_defined $I5004, fb_tmp_579
    unless $I5004 goto if1842_else3282 
    set $P5034, fb_tmp_579["pos"]
    set $P5036, $P5034
    goto if1842_end3283
  if1842_else3282:
    null $P5035
    set $P5036, $P5035
  if1842_end3283:
    unless_null $P5036, vivi_18463289
    nqp_get_sc_object $P5037, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5036, $P5037
  vivi_18463289:
    find_dynamic_lex $P5038, "%*REG"
    unless_null $P5038, fallback3292
    nqp_get_sc_object $P5040, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_150, $P5039
    set fb_tmp_582, pkg_viv_tmp_150
    repr_defined $I5007, fb_tmp_582
    unless $I5007 goto if1848_else3293 
    set $P5041, fb_tmp_582["%REG"]
    set $P5043, $P5041
    goto if1848_end3294
  if1848_else3293:
    null $P5042
    set $P5043, $P5042
  if1848_end3294:
    unless_null $P5043, vivi_18493295
    new $P5044, 'Hash'
    set pkg_viv_tmp_150["%REG"], $P5044
    set $P5043, $P5044
  vivi_18493295:
    unless_null $P5043, vivi_18503296
    die "Contextual %*REG not found"
    box $P5045, "Contextual %*REG not found"
    set $P5043, $P5045
  vivi_18503296:
    set $P5038, $P5043
  fallback3292:
    set fb_tmp_581, $P5038
    repr_defined $I5006, fb_tmp_581
    unless $I5006 goto if1847_else3290 
    set $P5046, fb_tmp_581["rep"]
    set $P5048, $P5046
    goto if1847_end3291
  if1847_else3290:
    null $P5047
    set $P5048, $P5047
  if1847_end3291:
    unless_null $P5048, vivi_18513297
    nqp_get_sc_object $P5049, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5048, $P5049
  vivi_18513297:
    $P5022."regex_mark"($P5024, $P5025, $P5036, $P5048)
.annotate 'line', 3726
    find_lex $P5050, "$ops"
    find_lex $P5051, "$donelabel"
    $P5052 = $P5050."push_pirop"("goto", $P5051)
  if1841_end3281:
    find_lex $P5053, "$sep"
    unless $P5053 goto if1852_end3299 
.annotate 'line', 3728
    find_lex $P5054, "$ops"
    $P5055 = $P5054."push_pirop"("goto", $P101)
  if1852_end3299:
.annotate 'line', 3729
    find_lex $P5056, "$ops"
    find_lex $P5057, "$looplabel"
    $P5056."push"($P5057)
.annotate 'line', 3730
    find_lex $P5058, "$ops"
    find_dynamic_lex $P5059, "%*REG"
    unless_null $P5059, fallback3302
    nqp_get_sc_object $P5061, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5060, $P5061
    set pkg_viv_tmp_151, $P5060
    set fb_tmp_584, pkg_viv_tmp_151
    repr_defined $I5009, fb_tmp_584
    unless $I5009 goto if1854_else3303 
    set $P5062, fb_tmp_584["%REG"]
    set $P5064, $P5062
    goto if1854_end3304
  if1854_else3303:
    null $P5063
    set $P5064, $P5063
  if1854_end3304:
    unless_null $P5064, vivi_18553305
    new $P5065, 'Hash'
    set pkg_viv_tmp_151["%REG"], $P5065
    set $P5064, $P5065
  vivi_18553305:
    unless_null $P5064, vivi_18563306
    die "Contextual %*REG not found"
    box $P5066, "Contextual %*REG not found"
    set $P5064, $P5066
  vivi_18563306:
    set $P5059, $P5064
  fallback3302:
    set fb_tmp_583, $P5059
    repr_defined $I5008, fb_tmp_583
    unless $I5008 goto if1853_else3300 
    set $P5067, fb_tmp_583["rep"]
    set $P5069, $P5067
    goto if1853_end3301
  if1853_else3300:
    null $P5068
    set $P5069, $P5068
  if1853_end3301:
    unless_null $P5069, vivi_18573307
    nqp_get_sc_object $P5070, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5069, $P5070
  vivi_18573307:
    $P5058."push_pirop"("set", $P102, $P5069)
    find_lex $P5071, "$sep"
    unless $P5071 goto if1858_end3309 
.annotate 'line', 3731
    find_lex $P5072, "$ops"
    find_lex $P5074, "self"
    nqp_decontainerize $P5073, $P5074
    find_lex $P5075, "$sep"
    $P5076 = $P5073."regex_post"($P5075)
    $P5077 = $P5072."push"($P5076)
  if1858_end3309:
    find_lex $P5078, "$sep"
    unless $P5078 goto if1859_end3311 
.annotate 'line', 3732
    find_lex $P5079, "$ops"
    $P5080 = $P5079."push"($P101)
  if1859_end3311:
.annotate 'line', 3733
    find_lex $P5081, "$ops"
    find_lex $P5083, "self"
    nqp_decontainerize $P5082, $P5083
    find_lex $P5084, "$node"
    set fb_tmp_585, $P5084
    repr_defined $I5010, fb_tmp_585
    unless $I5010 goto if1860_else3312 
    set $P5085, fb_tmp_585[0]
    set $P5087, $P5085
    goto if1860_end3313
  if1860_else3312:
    null $P5086
    set $P5087, $P5086
  if1860_end3313:
    unless_null $P5087, vivi_18613314
    nqp_get_sc_object $P5088, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5087, $P5088
  vivi_18613314:
    $P5089 = $P5082."regex_post"($P5087)
    $P5081."push"($P5089)
.annotate 'line', 3734
    find_lex $P5090, "$ops"
    find_dynamic_lex $P5091, "%*REG"
    unless_null $P5091, fallback3317
    nqp_get_sc_object $P5093, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5092, $P5093
    set pkg_viv_tmp_152, $P5092
    set fb_tmp_587, pkg_viv_tmp_152
    repr_defined $I5012, fb_tmp_587
    unless $I5012 goto if1863_else3318 
    set $P5094, fb_tmp_587["%REG"]
    set $P5096, $P5094
    goto if1863_end3319
  if1863_else3318:
    null $P5095
    set $P5096, $P5095
  if1863_end3319:
    unless_null $P5096, vivi_18643320
    new $P5097, 'Hash'
    set pkg_viv_tmp_152["%REG"], $P5097
    set $P5096, $P5097
  vivi_18643320:
    unless_null $P5096, vivi_18653321
    die "Contextual %*REG not found"
    box $P5098, "Contextual %*REG not found"
    set $P5096, $P5098
  vivi_18653321:
    set $P5091, $P5096
  fallback3317:
    set fb_tmp_586, $P5091
    repr_defined $I5011, fb_tmp_586
    unless $I5011 goto if1862_else3315 
    set $P5099, fb_tmp_586["rep"]
    set $P5101, $P5099
    goto if1862_end3316
  if1862_else3315:
    null $P5100
    set $P5101, $P5100
  if1862_end3316:
    unless_null $P5101, vivi_18663322
    nqp_get_sc_object $P5102, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5101, $P5102
  vivi_18663322:
    $P5090."push_pirop"("set", $P5101, $P102)
.annotate 'line', 3735
    find_lex $P5103, "$ops"
    find_dynamic_lex $P5104, "%*REG"
    unless_null $P5104, fallback3325
    nqp_get_sc_object $P5106, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5105, $P5106
    set pkg_viv_tmp_153, $P5105
    set fb_tmp_589, pkg_viv_tmp_153
    repr_defined $I5014, fb_tmp_589
    unless $I5014 goto if1868_else3326 
    set $P5107, fb_tmp_589["%REG"]
    set $P5109, $P5107
    goto if1868_end3327
  if1868_else3326:
    null $P5108
    set $P5109, $P5108
  if1868_end3327:
    unless_null $P5109, vivi_18693328
    new $P5110, 'Hash'
    set pkg_viv_tmp_153["%REG"], $P5110
    set $P5109, $P5110
  vivi_18693328:
    unless_null $P5109, vivi_18703329
    die "Contextual %*REG not found"
    box $P5111, "Contextual %*REG not found"
    set $P5109, $P5111
  vivi_18703329:
    set $P5104, $P5109
  fallback3325:
    set fb_tmp_588, $P5104
    repr_defined $I5013, fb_tmp_588
    unless $I5013 goto if1867_else3323 
    set $P5112, fb_tmp_588["rep"]
    set $P5114, $P5112
    goto if1867_end3324
  if1867_else3323:
    null $P5113
    set $P5114, $P5113
  if1867_end3324:
    unless_null $P5114, vivi_18713330
    nqp_get_sc_object $P5115, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5114, $P5115
  vivi_18713330:
    $P5103."push_pirop"("inc", $P5114)
    find_lex $P5116, "$min"
    set $N5003, $P5116
    set $N5004, 1
    isgt $I5015, $N5003, $N5004
    unless $I5015 goto if1872_end3332 
.annotate 'line', 3736
    find_lex $P5117, "$ops"
    find_dynamic_lex $P5118, "%*REG"
    unless_null $P5118, fallback3335
    nqp_get_sc_object $P5120, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5119, $P5120
    set pkg_viv_tmp_154, $P5119
    set fb_tmp_591, pkg_viv_tmp_154
    repr_defined $I5017, fb_tmp_591
    unless $I5017 goto if1874_else3336 
    set $P5121, fb_tmp_591["%REG"]
    set $P5123, $P5121
    goto if1874_end3337
  if1874_else3336:
    null $P5122
    set $P5123, $P5122
  if1874_end3337:
    unless_null $P5123, vivi_18753338
    new $P5124, 'Hash'
    set pkg_viv_tmp_154["%REG"], $P5124
    set $P5123, $P5124
  vivi_18753338:
    unless_null $P5123, vivi_18763339
    die "Contextual %*REG not found"
    box $P5125, "Contextual %*REG not found"
    set $P5123, $P5125
  vivi_18763339:
    set $P5118, $P5123
  fallback3335:
    set fb_tmp_590, $P5118
    repr_defined $I5016, fb_tmp_590
    unless $I5016 goto if1873_else3333 
    set $P5126, fb_tmp_590["rep"]
    set $P5128, $P5126
    goto if1873_end3334
  if1873_else3333:
    null $P5127
    set $P5128, $P5127
  if1873_end3334:
    unless_null $P5128, vivi_18773340
    nqp_get_sc_object $P5129, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5128, $P5129
  vivi_18773340:
    find_lex $P5130, "$min"
    find_lex $P5131, "$looplabel"
    $P5132 = $P5117."push_pirop"("lt", $P5128, $P5130, $P5131)
  if1872_end3332:
    find_lex $P5133, "$max"
    set $N5005, $P5133
    set $N5006, 1
    isgt $I5018, $N5005, $N5006
    unless $I5018 goto if1878_end3342 
.annotate 'line', 3737
    find_lex $P5134, "$ops"
    find_dynamic_lex $P5135, "%*REG"
    unless_null $P5135, fallback3345
    nqp_get_sc_object $P5137, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5136, $P5137
    set pkg_viv_tmp_155, $P5136
    set fb_tmp_593, pkg_viv_tmp_155
    repr_defined $I5020, fb_tmp_593
    unless $I5020 goto if1880_else3346 
    set $P5138, fb_tmp_593["%REG"]
    set $P5140, $P5138
    goto if1880_end3347
  if1880_else3346:
    null $P5139
    set $P5140, $P5139
  if1880_end3347:
    unless_null $P5140, vivi_18813348
    new $P5141, 'Hash'
    set pkg_viv_tmp_155["%REG"], $P5141
    set $P5140, $P5141
  vivi_18813348:
    unless_null $P5140, vivi_18823349
    die "Contextual %*REG not found"
    box $P5142, "Contextual %*REG not found"
    set $P5140, $P5142
  vivi_18823349:
    set $P5135, $P5140
  fallback3345:
    set fb_tmp_592, $P5135
    repr_defined $I5019, fb_tmp_592
    unless $I5019 goto if1879_else3343 
    set $P5143, fb_tmp_592["rep"]
    set $P5145, $P5143
    goto if1879_end3344
  if1879_else3343:
    null $P5144
    set $P5145, $P5144
  if1879_end3344:
    unless_null $P5145, vivi_18833350
    nqp_get_sc_object $P5146, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5145, $P5146
  vivi_18833350:
    find_lex $P5147, "$max"
    find_lex $P5148, "$donelabel"
    $P5149 = $P5134."push_pirop"("ge", $P5145, $P5147, $P5148)
  if1878_end3342:
    find_lex $P5150, "$max"
    set $N5007, $P5150
    set $N5008, 1
    isne $I5021, $N5007, $N5008
    unless $I5021 goto if1884_end3352 
.annotate 'line', 3738
    find_lex $P5152, "self"
    nqp_decontainerize $P5151, $P5152
    find_lex $P5153, "$ops"
    find_lex $P5154, "$looplabel"
    find_dynamic_lex $P5155, "%*REG"
    unless_null $P5155, fallback3355
    nqp_get_sc_object $P5157, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5156, $P5157
    set pkg_viv_tmp_156, $P5156
    set fb_tmp_595, pkg_viv_tmp_156
    repr_defined $I5023, fb_tmp_595
    unless $I5023 goto if1886_else3356 
    set $P5158, fb_tmp_595["%REG"]
    set $P5160, $P5158
    goto if1886_end3357
  if1886_else3356:
    null $P5159
    set $P5160, $P5159
  if1886_end3357:
    unless_null $P5160, vivi_18873358
    new $P5161, 'Hash'
    set pkg_viv_tmp_156["%REG"], $P5161
    set $P5160, $P5161
  vivi_18873358:
    unless_null $P5160, vivi_18883359
    die "Contextual %*REG not found"
    box $P5162, "Contextual %*REG not found"
    set $P5160, $P5162
  vivi_18883359:
    set $P5155, $P5160
  fallback3355:
    set fb_tmp_594, $P5155
    repr_defined $I5022, fb_tmp_594
    unless $I5022 goto if1885_else3353 
    set $P5163, fb_tmp_594["pos"]
    set $P5165, $P5163
    goto if1885_end3354
  if1885_else3353:
    null $P5164
    set $P5165, $P5164
  if1885_end3354:
    unless_null $P5165, vivi_18893360
    nqp_get_sc_object $P5166, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5165, $P5166
  vivi_18893360:
    find_dynamic_lex $P5167, "%*REG"
    unless_null $P5167, fallback3363
    nqp_get_sc_object $P5169, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5168, $P5169
    set pkg_viv_tmp_157, $P5168
    set fb_tmp_597, pkg_viv_tmp_157
    repr_defined $I5025, fb_tmp_597
    unless $I5025 goto if1891_else3364 
    set $P5170, fb_tmp_597["%REG"]
    set $P5172, $P5170
    goto if1891_end3365
  if1891_else3364:
    null $P5171
    set $P5172, $P5171
  if1891_end3365:
    unless_null $P5172, vivi_18923366
    new $P5173, 'Hash'
    set pkg_viv_tmp_157["%REG"], $P5173
    set $P5172, $P5173
  vivi_18923366:
    unless_null $P5172, vivi_18933367
    die "Contextual %*REG not found"
    box $P5174, "Contextual %*REG not found"
    set $P5172, $P5174
  vivi_18933367:
    set $P5167, $P5172
  fallback3363:
    set fb_tmp_596, $P5167
    repr_defined $I5024, fb_tmp_596
    unless $I5024 goto if1890_else3361 
    set $P5175, fb_tmp_596["rep"]
    set $P5177, $P5175
    goto if1890_end3362
  if1890_else3361:
    null $P5176
    set $P5177, $P5176
  if1890_end3362:
    unless_null $P5177, vivi_18943368
    nqp_get_sc_object $P5178, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5177, $P5178
  vivi_18943368:
    $P5179 = $P5151."regex_mark"($P5153, $P5154, $P5165, $P5177)
  if1884_end3352:
.annotate 'line', 3739
    find_lex $P5180, "$ops"
    find_lex $P5181, "$donelabel"
    $P5182 = $P5180."push"($P5181)
    .return ($P5182) 
.end
.HLL "nqp"
.namespace []
.sub "scan" :subid("cuid_132_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3765
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$looplabel", $P103 
    .lex "$scanlabel", $P104 
    .lex "$donelabel", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_615 
    .local pmc fb_tmp_616 
    .local pmc pkg_viv_tmp_166 
    .local pmc fb_tmp_617 
    .local pmc fb_tmp_618 
    .local pmc pkg_viv_tmp_167 
    .local pmc fb_tmp_619 
    .local pmc fb_tmp_620 
    .local pmc pkg_viv_tmp_168 
    .local pmc fb_tmp_621 
    .local pmc fb_tmp_622 
    .local pmc pkg_viv_tmp_169 
    .local pmc fb_tmp_623 
    .local pmc fb_tmp_624 
    .local pmc pkg_viv_tmp_170 
    .local pmc fb_tmp_625 
    .local pmc fb_tmp_626 
    .local pmc pkg_viv_tmp_171 
    .local pmc fb_tmp_627 
    .local pmc fb_tmp_628 
    .local pmc pkg_viv_tmp_172 
    .local pmc fb_tmp_629 
    .local pmc fb_tmp_630 
    .local pmc pkg_viv_tmp_173 
    .local pmc fb_tmp_631 
    .local pmc fb_tmp_632 
    .local pmc pkg_viv_tmp_174 
    .local pmc fb_tmp_633 
    .local pmc fb_tmp_634 
    .local pmc pkg_viv_tmp_175 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
.annotate 'line', 3766
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3454
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_166, $P5008
    set fb_tmp_616, pkg_viv_tmp_166
    repr_defined $I5002, fb_tmp_616
    unless $I5002 goto if1946_else3455 
    set $P5010, fb_tmp_616["%REG"]
    set $P5012, $P5010
    goto if1946_end3456
  if1946_else3455:
    null $P5011
    set $P5012, $P5011
  if1946_end3456:
    unless_null $P5012, vivi_19473457
    new $P5013, 'Hash'
    set pkg_viv_tmp_166["%REG"], $P5013
    set $P5012, $P5013
  vivi_19473457:
    unless_null $P5012, vivi_19483458
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_19483458:
    set $P5007, $P5012
  fallback3454:
    set fb_tmp_615, $P5007
    repr_defined $I5001, fb_tmp_615
    unless $I5001 goto if1945_else3452 
    set $P5015, fb_tmp_615["cur"]
    set $P5017, $P5015
    goto if1945_end3453
  if1945_else3452:
    null $P5016
    set $P5017, $P5016
  if1945_end3453:
    unless_null $P5017, vivi_19493459
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_19493459:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 3767
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxscan")
    set $P102, $P5021
.annotate 'line', 3768
    nqp_decontainerize $P5022, _lex_param_0
    set $S5002, $P102
    concat $S5001, $S5002, "_loop"
    $P5023 = $P5022."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5023
.annotate 'line', 3769
    nqp_decontainerize $P5024, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "_scan"
    $P5025 = $P5024."post_new"("Label", $S5003 :named("name"))
    set $P104, $P5025
.annotate 'line', 3770
    nqp_decontainerize $P5026, _lex_param_0
    set $S5006, $P102
    concat $S5005, $S5006, "_done"
    $P5027 = $P5026."post_new"("Label", $S5005 :named("name"))
    set $P105, $P5027
.annotate 'line', 3771
    find_dynamic_lex $P5028, "%*REG"
    unless_null $P5028, fallback3462
    nqp_get_sc_object $P5030, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5029, $P5030
    set pkg_viv_tmp_167, $P5029
    set fb_tmp_618, pkg_viv_tmp_167
    repr_defined $I5004, fb_tmp_618
    unless $I5004 goto if1951_else3463 
    set $P5031, fb_tmp_618["%REG"]
    set $P5033, $P5031
    goto if1951_end3464
  if1951_else3463:
    null $P5032
    set $P5033, $P5032
  if1951_end3464:
    unless_null $P5033, vivi_19523465
    new $P5034, 'Hash'
    set pkg_viv_tmp_167["%REG"], $P5034
    set $P5033, $P5034
  vivi_19523465:
    unless_null $P5033, vivi_19533466
    die "Contextual %*REG not found"
    box $P5035, "Contextual %*REG not found"
    set $P5033, $P5035
  vivi_19533466:
    set $P5028, $P5033
  fallback3462:
    set fb_tmp_617, $P5028
    repr_defined $I5003, fb_tmp_617
    unless $I5003 goto if1950_else3460 
    set $P5036, fb_tmp_617["curclass"]
    set $P5038, $P5036
    goto if1950_end3461
  if1950_else3460:
    null $P5037
    set $P5038, $P5037
  if1950_end3461:
    unless_null $P5038, vivi_19543467
    nqp_get_sc_object $P5039, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5038, $P5039
  vivi_19543467:
    $P101."push_pirop"("repr_get_attr_int", "$I11", "self", $P5038, "\"$!from\"")
.annotate 'line', 3772
    $P101."push_pirop"("ne", "$I11", -1, $P105)
.annotate 'line', 3773
    $P101."push_pirop"("goto", $P104)
.annotate 'line', 3774
    $P101."push"($P103)
.annotate 'line', 3775
    find_dynamic_lex $P5040, "%*REG"
    unless_null $P5040, fallback3470
    nqp_get_sc_object $P5042, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5041, $P5042
    set pkg_viv_tmp_168, $P5041
    set fb_tmp_620, pkg_viv_tmp_168
    repr_defined $I5006, fb_tmp_620
    unless $I5006 goto if1956_else3471 
    set $P5043, fb_tmp_620["%REG"]
    set $P5045, $P5043
    goto if1956_end3472
  if1956_else3471:
    null $P5044
    set $P5045, $P5044
  if1956_end3472:
    unless_null $P5045, vivi_19573473
    new $P5046, 'Hash'
    set pkg_viv_tmp_168["%REG"], $P5046
    set $P5045, $P5046
  vivi_19573473:
    unless_null $P5045, vivi_19583474
    die "Contextual %*REG not found"
    box $P5047, "Contextual %*REG not found"
    set $P5045, $P5047
  vivi_19583474:
    set $P5040, $P5045
  fallback3470:
    set fb_tmp_619, $P5040
    repr_defined $I5005, fb_tmp_619
    unless $I5005 goto if1955_else3468 
    set $P5048, fb_tmp_619["pos"]
    set $P5050, $P5048
    goto if1955_end3469
  if1955_else3468:
    null $P5049
    set $P5050, $P5049
  if1955_end3469:
    unless_null $P5050, vivi_19593475
    nqp_get_sc_object $P5051, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5050, $P5051
  vivi_19593475:
    $P101."push_pirop"("inc", $P5050)
.annotate 'line', 3776
    find_dynamic_lex $P5052, "%*REG"
    unless_null $P5052, fallback3478
    nqp_get_sc_object $P5054, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5053, $P5054
    set pkg_viv_tmp_169, $P5053
    set fb_tmp_622, pkg_viv_tmp_169
    repr_defined $I5008, fb_tmp_622
    unless $I5008 goto if1961_else3479 
    set $P5055, fb_tmp_622["%REG"]
    set $P5057, $P5055
    goto if1961_end3480
  if1961_else3479:
    null $P5056
    set $P5057, $P5056
  if1961_end3480:
    unless_null $P5057, vivi_19623481
    new $P5058, 'Hash'
    set pkg_viv_tmp_169["%REG"], $P5058
    set $P5057, $P5058
  vivi_19623481:
    unless_null $P5057, vivi_19633482
    die "Contextual %*REG not found"
    box $P5059, "Contextual %*REG not found"
    set $P5057, $P5059
  vivi_19633482:
    set $P5052, $P5057
  fallback3478:
    set fb_tmp_621, $P5052
    repr_defined $I5007, fb_tmp_621
    unless $I5007 goto if1960_else3476 
    set $P5060, fb_tmp_621["pos"]
    set $P5062, $P5060
    goto if1960_end3477
  if1960_else3476:
    null $P5061
    set $P5062, $P5061
  if1960_end3477:
    unless_null $P5062, vivi_19643483
    nqp_get_sc_object $P5063, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5062, $P5063
  vivi_19643483:
    find_dynamic_lex $P5064, "%*REG"
    unless_null $P5064, fallback3486
    nqp_get_sc_object $P5066, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5065, $P5066
    set pkg_viv_tmp_170, $P5065
    set fb_tmp_624, pkg_viv_tmp_170
    repr_defined $I5010, fb_tmp_624
    unless $I5010 goto if1966_else3487 
    set $P5067, fb_tmp_624["%REG"]
    set $P5069, $P5067
    goto if1966_end3488
  if1966_else3487:
    null $P5068
    set $P5069, $P5068
  if1966_end3488:
    unless_null $P5069, vivi_19673489
    new $P5070, 'Hash'
    set pkg_viv_tmp_170["%REG"], $P5070
    set $P5069, $P5070
  vivi_19673489:
    unless_null $P5069, vivi_19683490
    die "Contextual %*REG not found"
    box $P5071, "Contextual %*REG not found"
    set $P5069, $P5071
  vivi_19683490:
    set $P5064, $P5069
  fallback3486:
    set fb_tmp_623, $P5064
    repr_defined $I5009, fb_tmp_623
    unless $I5009 goto if1965_else3484 
    set $P5072, fb_tmp_623["eos"]
    set $P5074, $P5072
    goto if1965_end3485
  if1965_else3484:
    null $P5073
    set $P5074, $P5073
  if1965_end3485:
    unless_null $P5074, vivi_19693491
    nqp_get_sc_object $P5075, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5074, $P5075
  vivi_19693491:
    find_dynamic_lex $P5076, "%*REG"
    unless_null $P5076, fallback3494
    nqp_get_sc_object $P5078, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5077, $P5078
    set pkg_viv_tmp_171, $P5077
    set fb_tmp_626, pkg_viv_tmp_171
    repr_defined $I5012, fb_tmp_626
    unless $I5012 goto if1971_else3495 
    set $P5079, fb_tmp_626["%REG"]
    set $P5081, $P5079
    goto if1971_end3496
  if1971_else3495:
    null $P5080
    set $P5081, $P5080
  if1971_end3496:
    unless_null $P5081, vivi_19723497
    new $P5082, 'Hash'
    set pkg_viv_tmp_171["%REG"], $P5082
    set $P5081, $P5082
  vivi_19723497:
    unless_null $P5081, vivi_19733498
    die "Contextual %*REG not found"
    box $P5083, "Contextual %*REG not found"
    set $P5081, $P5083
  vivi_19733498:
    set $P5076, $P5081
  fallback3494:
    set fb_tmp_625, $P5076
    repr_defined $I5011, fb_tmp_625
    unless $I5011 goto if1970_else3492 
    set $P5084, fb_tmp_625["fail"]
    set $P5086, $P5084
    goto if1970_end3493
  if1970_else3492:
    null $P5085
    set $P5086, $P5085
  if1970_end3493:
    unless_null $P5086, vivi_19743499
    nqp_get_sc_object $P5087, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5086, $P5087
  vivi_19743499:
    $P101."push_pirop"("gt", $P5062, $P5074, $P5086)
.annotate 'line', 3777
    find_dynamic_lex $P5088, "%*REG"
    unless_null $P5088, fallback3502
    nqp_get_sc_object $P5090, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5089, $P5090
    set pkg_viv_tmp_172, $P5089
    set fb_tmp_628, pkg_viv_tmp_172
    repr_defined $I5014, fb_tmp_628
    unless $I5014 goto if1976_else3503 
    set $P5091, fb_tmp_628["%REG"]
    set $P5093, $P5091
    goto if1976_end3504
  if1976_else3503:
    null $P5092
    set $P5093, $P5092
  if1976_end3504:
    unless_null $P5093, vivi_19773505
    new $P5094, 'Hash'
    set pkg_viv_tmp_172["%REG"], $P5094
    set $P5093, $P5094
  vivi_19773505:
    unless_null $P5093, vivi_19783506
    die "Contextual %*REG not found"
    box $P5095, "Contextual %*REG not found"
    set $P5093, $P5095
  vivi_19783506:
    set $P5088, $P5093
  fallback3502:
    set fb_tmp_627, $P5088
    repr_defined $I5013, fb_tmp_627
    unless $I5013 goto if1975_else3500 
    set $P5096, fb_tmp_627["cur"]
    set $P5098, $P5096
    goto if1975_end3501
  if1975_else3500:
    null $P5097
    set $P5098, $P5097
  if1975_end3501:
    unless_null $P5098, vivi_19793507
    nqp_get_sc_object $P5099, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5098, $P5099
  vivi_19793507:
    find_dynamic_lex $P5100, "%*REG"
    unless_null $P5100, fallback3510
    nqp_get_sc_object $P5102, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5101, $P5102
    set pkg_viv_tmp_173, $P5101
    set fb_tmp_630, pkg_viv_tmp_173
    repr_defined $I5016, fb_tmp_630
    unless $I5016 goto if1981_else3511 
    set $P5103, fb_tmp_630["%REG"]
    set $P5105, $P5103
    goto if1981_end3512
  if1981_else3511:
    null $P5104
    set $P5105, $P5104
  if1981_end3512:
    unless_null $P5105, vivi_19823513
    new $P5106, 'Hash'
    set pkg_viv_tmp_173["%REG"], $P5106
    set $P5105, $P5106
  vivi_19823513:
    unless_null $P5105, vivi_19833514
    die "Contextual %*REG not found"
    box $P5107, "Contextual %*REG not found"
    set $P5105, $P5107
  vivi_19833514:
    set $P5100, $P5105
  fallback3510:
    set fb_tmp_629, $P5100
    repr_defined $I5015, fb_tmp_629
    unless $I5015 goto if1980_else3508 
    set $P5108, fb_tmp_629["curclass"]
    set $P5110, $P5108
    goto if1980_end3509
  if1980_else3508:
    null $P5109
    set $P5110, $P5109
  if1980_end3509:
    unless_null $P5110, vivi_19843515
    nqp_get_sc_object $P5111, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5110, $P5111
  vivi_19843515:
    find_dynamic_lex $P5112, "%*REG"
    unless_null $P5112, fallback3518
    nqp_get_sc_object $P5114, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5113, $P5114
    set pkg_viv_tmp_174, $P5113
    set fb_tmp_632, pkg_viv_tmp_174
    repr_defined $I5018, fb_tmp_632
    unless $I5018 goto if1986_else3519 
    set $P5115, fb_tmp_632["%REG"]
    set $P5117, $P5115
    goto if1986_end3520
  if1986_else3519:
    null $P5116
    set $P5117, $P5116
  if1986_end3520:
    unless_null $P5117, vivi_19873521
    new $P5118, 'Hash'
    set pkg_viv_tmp_174["%REG"], $P5118
    set $P5117, $P5118
  vivi_19873521:
    unless_null $P5117, vivi_19883522
    die "Contextual %*REG not found"
    box $P5119, "Contextual %*REG not found"
    set $P5117, $P5119
  vivi_19883522:
    set $P5112, $P5117
  fallback3518:
    set fb_tmp_631, $P5112
    repr_defined $I5017, fb_tmp_631
    unless $I5017 goto if1985_else3516 
    set $P5120, fb_tmp_631["pos"]
    set $P5122, $P5120
    goto if1985_end3517
  if1985_else3516:
    null $P5121
    set $P5122, $P5121
  if1985_end3517:
    unless_null $P5122, vivi_19893523
    nqp_get_sc_object $P5123, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5122, $P5123
  vivi_19893523:
    $P101."push_pirop"("repr_bind_attr_int", $P5098, $P5110, "\"$!from\"", $P5122)
.annotate 'line', 3778
    $P101."push"($P104)
.annotate 'line', 3779
    nqp_decontainerize $P5124, _lex_param_0
    find_dynamic_lex $P5125, "%*REG"
    unless_null $P5125, fallback3526
    nqp_get_sc_object $P5127, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5126, $P5127
    set pkg_viv_tmp_175, $P5126
    set fb_tmp_634, pkg_viv_tmp_175
    repr_defined $I5020, fb_tmp_634
    unless $I5020 goto if1991_else3527 
    set $P5128, fb_tmp_634["%REG"]
    set $P5130, $P5128
    goto if1991_end3528
  if1991_else3527:
    null $P5129
    set $P5130, $P5129
  if1991_end3528:
    unless_null $P5130, vivi_19923529
    new $P5131, 'Hash'
    set pkg_viv_tmp_175["%REG"], $P5131
    set $P5130, $P5131
  vivi_19923529:
    unless_null $P5130, vivi_19933530
    die "Contextual %*REG not found"
    box $P5132, "Contextual %*REG not found"
    set $P5130, $P5132
  vivi_19933530:
    set $P5125, $P5130
  fallback3526:
    set fb_tmp_633, $P5125
    repr_defined $I5019, fb_tmp_633
    unless $I5019 goto if1990_else3524 
    set $P5133, fb_tmp_633["pos"]
    set $P5135, $P5133
    goto if1990_end3525
  if1990_else3524:
    null $P5134
    set $P5135, $P5134
  if1990_end3525:
    unless_null $P5135, vivi_19943531
    nqp_get_sc_object $P5136, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5135, $P5136
  vivi_19943531:
    $P5124."regex_mark"($P101, $P103, $P5135, 0)
.annotate 'line', 3780
    $P101."push"($P105)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "subcapture" :subid("cuid_133_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3784
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$prefix", $P102 
    .lex "$donelabel", $P103 
    .lex "$faillabel", $P104 
    .lex "$name", $P105 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_635 
    .local pmc fb_tmp_636 
    .local pmc pkg_viv_tmp_176 
    .local pmc fb_tmp_637 
    .local pmc fb_tmp_638 
    .local pmc pkg_viv_tmp_177 
    .local pmc fb_tmp_639 
    .local pmc fb_tmp_640 
    .local pmc fb_tmp_641 
    .local pmc pkg_viv_tmp_178 
    .local pmc fb_tmp_642 
    .local pmc fb_tmp_643 
    .local pmc pkg_viv_tmp_179 
    .local pmc fb_tmp_644 
    .local pmc fb_tmp_645 
    .local pmc pkg_viv_tmp_180 
    .local pmc fb_tmp_646 
    .local pmc fb_tmp_647 
    .local pmc pkg_viv_tmp_181 
    .local pmc fb_tmp_648 
    .local pmc fb_tmp_649 
    .local pmc pkg_viv_tmp_182 
    .local pmc fb_tmp_650 
    .local pmc fb_tmp_651 
    .local pmc pkg_viv_tmp_183 
    .local pmc fb_tmp_652 
    .local pmc fb_tmp_653 
    .local pmc pkg_viv_tmp_184 
    .local pmc fb_tmp_654 
    .local pmc fb_tmp_655 
    .local pmc pkg_viv_tmp_185 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    nqp_get_sc_object $P5005, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P105, $P5005
.annotate 'line', 3785
    nqp_decontainerize $P5006, _lex_param_0
    find_dynamic_lex $P5007, "%*REG"
    unless_null $P5007, fallback3534
    nqp_get_sc_object $P5009, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5008, $P5009
    set pkg_viv_tmp_176, $P5008
    set fb_tmp_636, pkg_viv_tmp_176
    repr_defined $I5002, fb_tmp_636
    unless $I5002 goto if1996_else3535 
    set $P5010, fb_tmp_636["%REG"]
    set $P5012, $P5010
    goto if1996_end3536
  if1996_else3535:
    null $P5011
    set $P5012, $P5011
  if1996_end3536:
    unless_null $P5012, vivi_19973537
    new $P5013, 'Hash'
    set pkg_viv_tmp_176["%REG"], $P5013
    set $P5012, $P5013
  vivi_19973537:
    unless_null $P5012, vivi_19983538
    die "Contextual %*REG not found"
    box $P5014, "Contextual %*REG not found"
    set $P5012, $P5014
  vivi_19983538:
    set $P5007, $P5012
  fallback3534:
    set fb_tmp_635, $P5007
    repr_defined $I5001, fb_tmp_635
    unless $I5001 goto if1995_else3532 
    set $P5015, fb_tmp_635["cur"]
    set $P5017, $P5015
    goto if1995_end3533
  if1995_else3532:
    null $P5016
    set $P5017, $P5016
  if1995_end3533:
    unless_null $P5017, vivi_19993539
    nqp_get_sc_object $P5018, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5017, $P5018
  vivi_19993539:
    $P5019 = $P5006."post_new"("Ops", $P5017 :named("result"))
    set $P101, $P5019
.annotate 'line', 3786
    nqp_decontainerize $P5020, _lex_param_0
    $P5021 = $P5020."unique"("rxcap")
    set $P102, $P5021
.annotate 'line', 3787
    nqp_decontainerize $P5022, _lex_param_0
    set $S5002, $P102
    concat $S5001, $S5002, "_done"
    $P5023 = $P5022."post_new"("Label", $S5001 :named("name"))
    set $P103, $P5023
.annotate 'line', 3788
    nqp_decontainerize $P5024, _lex_param_0
    set $S5004, $P102
    concat $S5003, $S5004, "_fail"
    $P5025 = $P5024."post_new"("Label", $S5003 :named("name"))
    set $P104, $P5025
.annotate 'line', 3789
    nqp_decontainerize $P5026, _lex_param_0
    $P5027 = _lex_param_1."name"()
    $P5028 = $P5026."escape"($P5027)
    set $P105, $P5028
.annotate 'line', 3790
    nqp_decontainerize $P5029, _lex_param_0
    find_dynamic_lex $P5030, "%*REG"
    unless_null $P5030, fallback3542
    nqp_get_sc_object $P5032, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5031, $P5032
    set pkg_viv_tmp_177, $P5031
    set fb_tmp_638, pkg_viv_tmp_177
    repr_defined $I5004, fb_tmp_638
    unless $I5004 goto if2001_else3543 
    set $P5033, fb_tmp_638["%REG"]
    set $P5035, $P5033
    goto if2001_end3544
  if2001_else3543:
    null $P5034
    set $P5035, $P5034
  if2001_end3544:
    unless_null $P5035, vivi_20023545
    new $P5036, 'Hash'
    set pkg_viv_tmp_177["%REG"], $P5036
    set $P5035, $P5036
  vivi_20023545:
    unless_null $P5035, vivi_20033546
    die "Contextual %*REG not found"
    box $P5037, "Contextual %*REG not found"
    set $P5035, $P5037
  vivi_20033546:
    set $P5030, $P5035
  fallback3542:
    set fb_tmp_637, $P5030
    repr_defined $I5003, fb_tmp_637
    unless $I5003 goto if2000_else3540 
    set $P5038, fb_tmp_637["pos"]
    set $P5040, $P5038
    goto if2000_end3541
  if2000_else3540:
    null $P5039
    set $P5040, $P5039
  if2000_end3541:
    unless_null $P5040, vivi_20043547
    nqp_get_sc_object $P5041, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5040, $P5041
  vivi_20043547:
    $P5029."regex_mark"($P101, $P104, $P5040, 0)
.annotate 'line', 3791
    nqp_decontainerize $P5042, _lex_param_0
    set fb_tmp_639, _lex_param_1
    repr_defined $I5005, fb_tmp_639
    unless $I5005 goto if2005_else3548 
    set $P5043, fb_tmp_639[0]
    set $P5045, $P5043
    goto if2005_end3549
  if2005_else3548:
    null $P5044
    set $P5045, $P5044
  if2005_end3549:
    unless_null $P5045, vivi_20063550
    nqp_get_sc_object $P5046, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5045, $P5046
  vivi_20063550:
    $P5047 = $P5042."regex_post"($P5045)
    $P101."push"($P5047)
.annotate 'line', 3792
    nqp_decontainerize $P5048, _lex_param_0
    $P5048."regex_peek"($P101, $P104, "$I11")
.annotate 'line', 3793
    find_dynamic_lex $P5049, "%*REG"
    unless_null $P5049, fallback3553
    nqp_get_sc_object $P5051, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5050, $P5051
    set pkg_viv_tmp_178, $P5050
    set fb_tmp_641, pkg_viv_tmp_178
    repr_defined $I5007, fb_tmp_641
    unless $I5007 goto if2008_else3554 
    set $P5052, fb_tmp_641["%REG"]
    set $P5054, $P5052
    goto if2008_end3555
  if2008_else3554:
    null $P5053
    set $P5054, $P5053
  if2008_end3555:
    unless_null $P5054, vivi_20093556
    new $P5055, 'Hash'
    set pkg_viv_tmp_178["%REG"], $P5055
    set $P5054, $P5055
  vivi_20093556:
    unless_null $P5054, vivi_20103557
    die "Contextual %*REG not found"
    box $P5056, "Contextual %*REG not found"
    set $P5054, $P5056
  vivi_20103557:
    set $P5049, $P5054
  fallback3553:
    set fb_tmp_640, $P5049
    repr_defined $I5006, fb_tmp_640
    unless $I5006 goto if2007_else3551 
    set $P5057, fb_tmp_640["cur"]
    set $P5059, $P5057
    goto if2007_end3552
  if2007_else3551:
    null $P5058
    set $P5059, $P5058
  if2007_end3552:
    unless_null $P5059, vivi_20113558
    nqp_get_sc_object $P5060, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5059, $P5060
  vivi_20113558:
    find_dynamic_lex $P5061, "%*REG"
    unless_null $P5061, fallback3561
    nqp_get_sc_object $P5063, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5062, $P5063
    set pkg_viv_tmp_179, $P5062
    set fb_tmp_643, pkg_viv_tmp_179
    repr_defined $I5009, fb_tmp_643
    unless $I5009 goto if2013_else3562 
    set $P5064, fb_tmp_643["%REG"]
    set $P5066, $P5064
    goto if2013_end3563
  if2013_else3562:
    null $P5065
    set $P5066, $P5065
  if2013_end3563:
    unless_null $P5066, vivi_20143564
    new $P5067, 'Hash'
    set pkg_viv_tmp_179["%REG"], $P5067
    set $P5066, $P5067
  vivi_20143564:
    unless_null $P5066, vivi_20153565
    die "Contextual %*REG not found"
    box $P5068, "Contextual %*REG not found"
    set $P5066, $P5068
  vivi_20153565:
    set $P5061, $P5066
  fallback3561:
    set fb_tmp_642, $P5061
    repr_defined $I5008, fb_tmp_642
    unless $I5008 goto if2012_else3559 
    set $P5069, fb_tmp_642["curclass"]
    set $P5071, $P5069
    goto if2012_end3560
  if2012_else3559:
    null $P5070
    set $P5071, $P5070
  if2012_end3560:
    unless_null $P5071, vivi_20163566
    nqp_get_sc_object $P5072, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5071, $P5072
  vivi_20163566:
    find_dynamic_lex $P5073, "%*REG"
    unless_null $P5073, fallback3569
    nqp_get_sc_object $P5075, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_180, $P5074
    set fb_tmp_645, pkg_viv_tmp_180
    repr_defined $I5011, fb_tmp_645
    unless $I5011 goto if2018_else3570 
    set $P5076, fb_tmp_645["%REG"]
    set $P5078, $P5076
    goto if2018_end3571
  if2018_else3570:
    null $P5077
    set $P5078, $P5077
  if2018_end3571:
    unless_null $P5078, vivi_20193572
    new $P5079, 'Hash'
    set pkg_viv_tmp_180["%REG"], $P5079
    set $P5078, $P5079
  vivi_20193572:
    unless_null $P5078, vivi_20203573
    die "Contextual %*REG not found"
    box $P5080, "Contextual %*REG not found"
    set $P5078, $P5080
  vivi_20203573:
    set $P5073, $P5078
  fallback3569:
    set fb_tmp_644, $P5073
    repr_defined $I5010, fb_tmp_644
    unless $I5010 goto if2017_else3567 
    set $P5081, fb_tmp_644["pos"]
    set $P5083, $P5081
    goto if2017_end3568
  if2017_else3567:
    null $P5082
    set $P5083, $P5082
  if2017_end3568:
    unless_null $P5083, vivi_20213574
    nqp_get_sc_object $P5084, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5083, $P5084
  vivi_20213574:
    $P101."push_pirop"("repr_bind_attr_int", $P5059, $P5071, "\"$!pos\"", $P5083)
.annotate 'line', 3794
    find_dynamic_lex $P5085, "%*REG"
    unless_null $P5085, fallback3577
    nqp_get_sc_object $P5087, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5086, $P5087
    set pkg_viv_tmp_181, $P5086
    set fb_tmp_647, pkg_viv_tmp_181
    repr_defined $I5013, fb_tmp_647
    unless $I5013 goto if2023_else3578 
    set $P5088, fb_tmp_647["%REG"]
    set $P5090, $P5088
    goto if2023_end3579
  if2023_else3578:
    null $P5089
    set $P5090, $P5089
  if2023_end3579:
    unless_null $P5090, vivi_20243580
    new $P5091, 'Hash'
    set pkg_viv_tmp_181["%REG"], $P5091
    set $P5090, $P5091
  vivi_20243580:
    unless_null $P5090, vivi_20253581
    die "Contextual %*REG not found"
    box $P5092, "Contextual %*REG not found"
    set $P5090, $P5092
  vivi_20253581:
    set $P5085, $P5090
  fallback3577:
    set fb_tmp_646, $P5085
    repr_defined $I5012, fb_tmp_646
    unless $I5012 goto if2022_else3575 
    set $P5093, fb_tmp_646["cur"]
    set $P5095, $P5093
    goto if2022_end3576
  if2022_else3575:
    null $P5094
    set $P5095, $P5094
  if2022_end3576:
    unless_null $P5095, vivi_20263582
    nqp_get_sc_object $P5096, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5095, $P5096
  vivi_20263582:
    $P101."push_pirop"("callmethod", "\"!cursor_start_subcapture\"", $P5095, "$I11", "$P11" :named("result"))
.annotate 'line', 3795
    find_dynamic_lex $P5097, "%*REG"
    unless_null $P5097, fallback3585
    nqp_get_sc_object $P5099, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5098, $P5099
    set pkg_viv_tmp_182, $P5098
    set fb_tmp_649, pkg_viv_tmp_182
    repr_defined $I5015, fb_tmp_649
    unless $I5015 goto if2028_else3586 
    set $P5100, fb_tmp_649["%REG"]
    set $P5102, $P5100
    goto if2028_end3587
  if2028_else3586:
    null $P5101
    set $P5102, $P5101
  if2028_end3587:
    unless_null $P5102, vivi_20293588
    new $P5103, 'Hash'
    set pkg_viv_tmp_182["%REG"], $P5103
    set $P5102, $P5103
  vivi_20293588:
    unless_null $P5102, vivi_20303589
    die "Contextual %*REG not found"
    box $P5104, "Contextual %*REG not found"
    set $P5102, $P5104
  vivi_20303589:
    set $P5097, $P5102
  fallback3585:
    set fb_tmp_648, $P5097
    repr_defined $I5014, fb_tmp_648
    unless $I5014 goto if2027_else3583 
    set $P5105, fb_tmp_648["pos"]
    set $P5107, $P5105
    goto if2027_end3584
  if2027_else3583:
    null $P5106
    set $P5107, $P5106
  if2027_end3584:
    unless_null $P5107, vivi_20313590
    nqp_get_sc_object $P5108, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5107, $P5108
  vivi_20313590:
    $P101."push_pirop"("callmethod", "\"!cursor_pass\"", "$P11", $P5107)
.annotate 'line', 3796
    find_dynamic_lex $P5109, "%*REG"
    unless_null $P5109, fallback3593
    nqp_get_sc_object $P5111, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5110, $P5111
    set pkg_viv_tmp_183, $P5110
    set fb_tmp_651, pkg_viv_tmp_183
    repr_defined $I5017, fb_tmp_651
    unless $I5017 goto if2033_else3594 
    set $P5112, fb_tmp_651["%REG"]
    set $P5114, $P5112
    goto if2033_end3595
  if2033_else3594:
    null $P5113
    set $P5114, $P5113
  if2033_end3595:
    unless_null $P5114, vivi_20343596
    new $P5115, 'Hash'
    set pkg_viv_tmp_183["%REG"], $P5115
    set $P5114, $P5115
  vivi_20343596:
    unless_null $P5114, vivi_20353597
    die "Contextual %*REG not found"
    box $P5116, "Contextual %*REG not found"
    set $P5114, $P5116
  vivi_20353597:
    set $P5109, $P5114
  fallback3593:
    set fb_tmp_650, $P5109
    repr_defined $I5016, fb_tmp_650
    unless $I5016 goto if2032_else3591 
    set $P5117, fb_tmp_650["cur"]
    set $P5119, $P5117
    goto if2032_end3592
  if2032_else3591:
    null $P5118
    set $P5119, $P5118
  if2032_end3592:
    unless_null $P5119, vivi_20363598
    nqp_get_sc_object $P5120, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5119, $P5120
  vivi_20363598:
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback3601
    nqp_get_sc_object $P5123, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_184, $P5122
    set fb_tmp_653, pkg_viv_tmp_184
    repr_defined $I5019, fb_tmp_653
    unless $I5019 goto if2038_else3602 
    set $P5124, fb_tmp_653["%REG"]
    set $P5126, $P5124
    goto if2038_end3603
  if2038_else3602:
    null $P5125
    set $P5126, $P5125
  if2038_end3603:
    unless_null $P5126, vivi_20393604
    new $P5127, 'Hash'
    set pkg_viv_tmp_184["%REG"], $P5127
    set $P5126, $P5127
  vivi_20393604:
    unless_null $P5126, vivi_20403605
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_20403605:
    set $P5121, $P5126
  fallback3601:
    set fb_tmp_652, $P5121
    repr_defined $I5018, fb_tmp_652
    unless $I5018 goto if2037_else3599 
    set $P5129, fb_tmp_652["cstack"]
    set $P5131, $P5129
    goto if2037_end3600
  if2037_else3599:
    null $P5130
    set $P5131, $P5130
  if2037_end3600:
    unless_null $P5131, vivi_20413606
    nqp_get_sc_object $P5132, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5131, $P5132
  vivi_20413606:
    $P101."push_pirop"("callmethod", "\"!cursor_capture\"", $P5119, "$P11", $P105, $P5131 :named("result"))
.annotate 'line', 3798
    $P101."push_pirop"("goto", $P103)
.annotate 'line', 3799
    $P101."push"($P104)
.annotate 'line', 3800
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback3609
    nqp_get_sc_object $P5135, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_185, $P5134
    set fb_tmp_655, pkg_viv_tmp_185
    repr_defined $I5021, fb_tmp_655
    unless $I5021 goto if2043_else3610 
    set $P5136, fb_tmp_655["%REG"]
    set $P5138, $P5136
    goto if2043_end3611
  if2043_else3610:
    null $P5137
    set $P5138, $P5137
  if2043_end3611:
    unless_null $P5138, vivi_20443612
    new $P5139, 'Hash'
    set pkg_viv_tmp_185["%REG"], $P5139
    set $P5138, $P5139
  vivi_20443612:
    unless_null $P5138, vivi_20453613
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_20453613:
    set $P5133, $P5138
  fallback3609:
    set fb_tmp_654, $P5133
    repr_defined $I5020, fb_tmp_654
    unless $I5020 goto if2042_else3607 
    set $P5141, fb_tmp_654["fail"]
    set $P5143, $P5141
    goto if2042_end3608
  if2042_else3607:
    null $P5142
    set $P5143, $P5142
  if2042_end3608:
    unless_null $P5143, vivi_20463614
    nqp_get_sc_object $P5144, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5143, $P5144
  vivi_20463614:
    $P101."push_pirop"("goto", $P5143)
.annotate 'line', 3801
    $P101."push"($P103)
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "subrule" :subid("cuid_134_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3805
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .const 'Sub' $P5181 = 'cuid_360_1361964166.213' 
    capture_lex $P5181 
    .lex "$ops", $P101 
    .lex "$name", $P102 
    .lex "$subtype", $P103 
    .lex "$cpn", $P104 
    .lex "@pargs", $P105 
    .lex "@nargs", $P106 
    .lex "$subpost", $P107 
    .lex "$testop", $P108 
    .lex "$captured", $P109 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_656 
    .local pmc fb_tmp_657 
    .local pmc pkg_viv_tmp_186 
    .local pmc fb_tmp_658 
    .local pmc fb_tmp_659 
    .local pmc fb_tmp_660 
    .local pmc fb_tmp_661 
    .local pmc fb_tmp_662 
    .local pmc fb_tmp_663 
    .local pmc pkg_viv_tmp_187 
    .local pmc fb_tmp_664 
    .local pmc fb_tmp_665 
    .local pmc pkg_viv_tmp_188 
    .local pmc fb_tmp_666 
    .local pmc fb_tmp_667 
    .local pmc pkg_viv_tmp_189 
    .local pmc fb_tmp_668 
    .local pmc fb_tmp_669 
    .local pmc pkg_viv_tmp_190 
    .local pmc fb_tmp_670 
    .local pmc fb_tmp_671 
    .local pmc pkg_viv_tmp_191 
    .local pmc fb_tmp_672 
    .local pmc fb_tmp_673 
    .local pmc pkg_viv_tmp_192 
    .local pmc fb_tmp_698 
    .local pmc fb_tmp_699 
    .local pmc pkg_viv_tmp_205 
    .local pmc fb_tmp_700 
    .local pmc fb_tmp_701 
    .local pmc pkg_viv_tmp_206 
    .local pmc fb_tmp_702 
    .local pmc fb_tmp_703 
    .local pmc pkg_viv_tmp_207 
    .local pmc fb_tmp_704 
    .local pmc fb_tmp_705 
    .local pmc pkg_viv_tmp_208 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
    nqp_get_sc_object $P5003, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P103, $P5003
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P104, $P5004
    new $P5005, 'ResizablePMCArray'
    set $P105, $P5005
    new $P5006, 'ResizablePMCArray'
    set $P106, $P5006
    nqp_get_sc_object $P5007, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P107, $P5007
    nqp_get_sc_object $P5008, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P108, $P5008
    nqp_get_sc_object $P5009, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P109, $P5009
.annotate 'line', 3806
    nqp_decontainerize $P5010, _lex_param_0
    find_dynamic_lex $P5011, "%*REG"
    unless_null $P5011, fallback3617
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_186, $P5012
    set fb_tmp_657, pkg_viv_tmp_186
    repr_defined $I5002, fb_tmp_657
    unless $I5002 goto if2048_else3618 
    set $P5014, fb_tmp_657["%REG"]
    set $P5016, $P5014
    goto if2048_end3619
  if2048_else3618:
    null $P5015
    set $P5016, $P5015
  if2048_end3619:
    unless_null $P5016, vivi_20493620
    new $P5017, 'Hash'
    set pkg_viv_tmp_186["%REG"], $P5017
    set $P5016, $P5017
  vivi_20493620:
    unless_null $P5016, vivi_20503621
    die "Contextual %*REG not found"
    box $P5018, "Contextual %*REG not found"
    set $P5016, $P5018
  vivi_20503621:
    set $P5011, $P5016
  fallback3617:
    set fb_tmp_656, $P5011
    repr_defined $I5001, fb_tmp_656
    unless $I5001 goto if2047_else3615 
    set $P5019, fb_tmp_656["cur"]
    set $P5021, $P5019
    goto if2047_end3616
  if2047_else3615:
    null $P5020
    set $P5021, $P5020
  if2047_end3616:
    unless_null $P5021, vivi_20513622
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5021, $P5022
  vivi_20513622:
    $P5023 = $P5010."post_new"("Ops", $P5021 :named("result"))
    set $P101, $P5023
.annotate 'line', 3807
    $P5024 = _lex_param_1."name"()
    defined $I5003, $P5024
    unless $I5003 goto if2052_else3623 
    nqp_decontainerize $P5025, _lex_param_0
    $P5026 = _lex_param_1."name"()
    $P5027 = $P5025."escape"($P5026)
    set $P5028, $P5027
    goto if2052_end3624
  if2052_else3623:
    box $P5029, ""
    set $P5028, $P5029
  if2052_end3624:
    set $P102, $P5028
.annotate 'line', 3808
    $P5030 = _lex_param_1."subtype"()
    set $P103, $P5030
.annotate 'line', 3809
    nqp_decontainerize $P5031, _lex_param_0
    set fb_tmp_658, _lex_param_1
    repr_defined $I5004, fb_tmp_658
    unless $I5004 goto if2053_else3625 
    set $P5032, fb_tmp_658[0]
    set $P5034, $P5032
    goto if2053_end3626
  if2053_else3625:
    null $P5033
    set $P5034, $P5033
  if2053_end3626:
    unless_null $P5034, vivi_20543627
    nqp_get_sc_object $P5035, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5034, $P5035
  vivi_20543627:
    $P5036 = $P5031."children"($P5034)
    set $P104, $P5036
    set fb_tmp_659, $P104
    repr_defined $I5006, fb_tmp_659
    unless $I5006 goto if2055_else3629 
    set $P5038, fb_tmp_659[1]
    set $P5040, $P5038
    goto if2055_end3630
  if2055_else3629:
    null $P5039
    set $P5040, $P5039
  if2055_end3630:
    unless_null $P5040, vivi_20563631
    nqp_get_sc_object $P5041, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5040, $P5041
  vivi_20563631:
    set $P5037, $P5040
    defined $I5005, $P5037
    if $I5005, defor3628
    new $P5042, 'ResizablePMCArray'
    set $P5037, $P5042
  defor3628:
    set $P105, $P5037
    set fb_tmp_660, $P104
    repr_defined $I5008, fb_tmp_660
    unless $I5008 goto if2057_else3633 
    set $P5044, fb_tmp_660[2]
    set $P5046, $P5044
    goto if2057_end3634
  if2057_else3633:
    null $P5045
    set $P5046, $P5045
  if2057_end3634:
    unless_null $P5046, vivi_20583635
    nqp_get_sc_object $P5047, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5046, $P5047
  vivi_20583635:
    set $P5043, $P5046
    defined $I5007, $P5043
    if $I5007, defor3632
    new $P5048, 'ResizablePMCArray'
    set $P5043, $P5048
  defor3632:
    set $P106, $P5043
    shift $P5049, $P105
    set $P107, $P5049
.annotate 'line', 3813
    $P5050 = _lex_param_1."negate"()
    unless $P5050 goto if2059_else3636 
    set $S5001, "ge"
    goto if2059_end3637
  if2059_else3636:
    set $S5001, "lt"
  if2059_end3637:
    box $P5051, $S5001
    set $P108, $P5051
    box $P5052, 0
    set $P109, $P5052
.annotate 'line', 3815
    set fb_tmp_661, $P104
    repr_defined $I5009, fb_tmp_661
    unless $I5009 goto if2060_else3638 
    set $P5053, fb_tmp_661[0]
    set $P5055, $P5053
    goto if2060_end3639
  if2060_else3638:
    null $P5054
    set $P5055, $P5054
  if2060_end3639:
    unless_null $P5055, vivi_20613640
    nqp_get_sc_object $P5056, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5055, $P5056
  vivi_20613640:
    $P101."push"($P5055)
.annotate 'line', 3816
    find_dynamic_lex $P5057, "%*REG"
    unless_null $P5057, fallback3643
    nqp_get_sc_object $P5059, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5058, $P5059
    set pkg_viv_tmp_187, $P5058
    set fb_tmp_663, pkg_viv_tmp_187
    repr_defined $I5011, fb_tmp_663
    unless $I5011 goto if2063_else3644 
    set $P5060, fb_tmp_663["%REG"]
    set $P5062, $P5060
    goto if2063_end3645
  if2063_else3644:
    null $P5061
    set $P5062, $P5061
  if2063_end3645:
    unless_null $P5062, vivi_20643646
    new $P5063, 'Hash'
    set pkg_viv_tmp_187["%REG"], $P5063
    set $P5062, $P5063
  vivi_20643646:
    unless_null $P5062, vivi_20653647
    die "Contextual %*REG not found"
    box $P5064, "Contextual %*REG not found"
    set $P5062, $P5064
  vivi_20653647:
    set $P5057, $P5062
  fallback3643:
    set fb_tmp_662, $P5057
    repr_defined $I5010, fb_tmp_662
    unless $I5010 goto if2062_else3641 
    set $P5065, fb_tmp_662["cur"]
    set $P5067, $P5065
    goto if2062_end3642
  if2062_else3641:
    null $P5066
    set $P5067, $P5066
  if2062_end3642:
    unless_null $P5067, vivi_20663648
    nqp_get_sc_object $P5068, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5067, $P5068
  vivi_20663648:
    find_dynamic_lex $P5069, "%*REG"
    unless_null $P5069, fallback3651
    nqp_get_sc_object $P5071, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5070, $P5071
    set pkg_viv_tmp_188, $P5070
    set fb_tmp_665, pkg_viv_tmp_188
    repr_defined $I5013, fb_tmp_665
    unless $I5013 goto if2068_else3652 
    set $P5072, fb_tmp_665["%REG"]
    set $P5074, $P5072
    goto if2068_end3653
  if2068_else3652:
    null $P5073
    set $P5074, $P5073
  if2068_end3653:
    unless_null $P5074, vivi_20693654
    new $P5075, 'Hash'
    set pkg_viv_tmp_188["%REG"], $P5075
    set $P5074, $P5075
  vivi_20693654:
    unless_null $P5074, vivi_20703655
    die "Contextual %*REG not found"
    box $P5076, "Contextual %*REG not found"
    set $P5074, $P5076
  vivi_20703655:
    set $P5069, $P5074
  fallback3651:
    set fb_tmp_664, $P5069
    repr_defined $I5012, fb_tmp_664
    unless $I5012 goto if2067_else3649 
    set $P5077, fb_tmp_664["curclass"]
    set $P5079, $P5077
    goto if2067_end3650
  if2067_else3649:
    null $P5078
    set $P5079, $P5078
  if2067_end3650:
    unless_null $P5079, vivi_20713656
    nqp_get_sc_object $P5080, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5079, $P5080
  vivi_20713656:
    find_dynamic_lex $P5081, "%*REG"
    unless_null $P5081, fallback3659
    nqp_get_sc_object $P5083, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5082, $P5083
    set pkg_viv_tmp_189, $P5082
    set fb_tmp_667, pkg_viv_tmp_189
    repr_defined $I5015, fb_tmp_667
    unless $I5015 goto if2073_else3660 
    set $P5084, fb_tmp_667["%REG"]
    set $P5086, $P5084
    goto if2073_end3661
  if2073_else3660:
    null $P5085
    set $P5086, $P5085
  if2073_end3661:
    unless_null $P5086, vivi_20743662
    new $P5087, 'Hash'
    set pkg_viv_tmp_189["%REG"], $P5087
    set $P5086, $P5087
  vivi_20743662:
    unless_null $P5086, vivi_20753663
    die "Contextual %*REG not found"
    box $P5088, "Contextual %*REG not found"
    set $P5086, $P5088
  vivi_20753663:
    set $P5081, $P5086
  fallback3659:
    set fb_tmp_666, $P5081
    repr_defined $I5014, fb_tmp_666
    unless $I5014 goto if2072_else3657 
    set $P5089, fb_tmp_666["pos"]
    set $P5091, $P5089
    goto if2072_end3658
  if2072_else3657:
    null $P5090
    set $P5091, $P5090
  if2072_end3658:
    unless_null $P5091, vivi_20763664
    nqp_get_sc_object $P5092, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5091, $P5092
  vivi_20763664:
    $P101."push_pirop"("repr_bind_attr_int", $P5067, $P5079, "\"$!pos\"", $P5091)
.annotate 'line', 3817
    find_dynamic_lex $P5093, "%*REG"
    unless_null $P5093, fallback3667
    nqp_get_sc_object $P5095, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5094, $P5095
    set pkg_viv_tmp_190, $P5094
    set fb_tmp_669, pkg_viv_tmp_190
    repr_defined $I5017, fb_tmp_669
    unless $I5017 goto if2078_else3668 
    set $P5096, fb_tmp_669["%REG"]
    set $P5098, $P5096
    goto if2078_end3669
  if2078_else3668:
    null $P5097
    set $P5098, $P5097
  if2078_end3669:
    unless_null $P5098, vivi_20793670
    new $P5099, 'Hash'
    set pkg_viv_tmp_190["%REG"], $P5099
    set $P5098, $P5099
  vivi_20793670:
    unless_null $P5098, vivi_20803671
    die "Contextual %*REG not found"
    box $P5100, "Contextual %*REG not found"
    set $P5098, $P5100
  vivi_20803671:
    set $P5093, $P5098
  fallback3667:
    set fb_tmp_668, $P5093
    repr_defined $I5016, fb_tmp_668
    unless $I5016 goto if2077_else3665 
    set $P5101, fb_tmp_668["cur"]
    set $P5103, $P5101
    goto if2077_end3666
  if2077_else3665:
    null $P5102
    set $P5103, $P5102
  if2077_end3666:
    unless_null $P5103, vivi_20813672
    nqp_get_sc_object $P5104, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5103, $P5104
  vivi_20813672:
    $P101."push_pirop"("callmethod", $P107, $P5103, $P105 :flat, $P106 :flat, "$P11" :named("result"))
.annotate 'line', 3818
    find_dynamic_lex $P5105, "%*REG"
    unless_null $P5105, fallback3675
    nqp_get_sc_object $P5107, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5106, $P5107
    set pkg_viv_tmp_191, $P5106
    set fb_tmp_671, pkg_viv_tmp_191
    repr_defined $I5019, fb_tmp_671
    unless $I5019 goto if2083_else3676 
    set $P5108, fb_tmp_671["%REG"]
    set $P5110, $P5108
    goto if2083_end3677
  if2083_else3676:
    null $P5109
    set $P5110, $P5109
  if2083_end3677:
    unless_null $P5110, vivi_20843678
    new $P5111, 'Hash'
    set pkg_viv_tmp_191["%REG"], $P5111
    set $P5110, $P5111
  vivi_20843678:
    unless_null $P5110, vivi_20853679
    die "Contextual %*REG not found"
    box $P5112, "Contextual %*REG not found"
    set $P5110, $P5112
  vivi_20853679:
    set $P5105, $P5110
  fallback3675:
    set fb_tmp_670, $P5105
    repr_defined $I5018, fb_tmp_670
    unless $I5018 goto if2082_else3673 
    set $P5113, fb_tmp_670["curclass"]
    set $P5115, $P5113
    goto if2082_end3674
  if2082_else3673:
    null $P5114
    set $P5115, $P5114
  if2082_end3674:
    unless_null $P5115, vivi_20863680
    nqp_get_sc_object $P5116, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5115, $P5116
  vivi_20863680:
    $P101."push_pirop"("repr_get_attr_int", "$I11", "$P11", $P5115, "\"$!pos\"")
.annotate 'line', 3819
    find_dynamic_lex $P5117, "%*REG"
    unless_null $P5117, fallback3683
    nqp_get_sc_object $P5119, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5118, $P5119
    set pkg_viv_tmp_192, $P5118
    set fb_tmp_673, pkg_viv_tmp_192
    repr_defined $I5021, fb_tmp_673
    unless $I5021 goto if2088_else3684 
    set $P5120, fb_tmp_673["%REG"]
    set $P5122, $P5120
    goto if2088_end3685
  if2088_else3684:
    null $P5121
    set $P5122, $P5121
  if2088_end3685:
    unless_null $P5122, vivi_20893686
    new $P5123, 'Hash'
    set pkg_viv_tmp_192["%REG"], $P5123
    set $P5122, $P5123
  vivi_20893686:
    unless_null $P5122, vivi_20903687
    die "Contextual %*REG not found"
    box $P5124, "Contextual %*REG not found"
    set $P5122, $P5124
  vivi_20903687:
    set $P5117, $P5122
  fallback3683:
    set fb_tmp_672, $P5117
    repr_defined $I5020, fb_tmp_672
    unless $I5020 goto if2087_else3681 
    set $P5125, fb_tmp_672["fail"]
    set $P5127, $P5125
    goto if2087_end3682
  if2087_else3681:
    null $P5126
    set $P5127, $P5126
  if2087_end3682:
    unless_null $P5127, vivi_20913688
    nqp_get_sc_object $P5128, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5127, $P5128
  vivi_20913688:
    $P101."push_pirop"($P108, "$I11", "0", $P5127)
    set $S5002, $P103
    isne $I5022, $S5002, "zerowidth"
    unless $I5022 goto if2092_end3690 
    .const 'Sub' $P5129 = 'cuid_360_1361964166.213' 
    capture_lex $P5129
    $P5130 = $P5129()
  if2092_end3690:
    isfalse $I5023, $P109
    set $I5025, $I5023
    unless $I5023 goto if2157_end3796 
    set $S5003, $P103
    iseq $I5024, $S5003, "capture"
    set $I5025, $I5024
  if2157_end3796:
    unless $I5025 goto if2156_end3794 
.annotate 'line', 3854
    find_dynamic_lex $P5131, "%*REG"
    unless_null $P5131, fallback3799
    nqp_get_sc_object $P5133, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5132, $P5133
    set pkg_viv_tmp_205, $P5132
    set fb_tmp_699, pkg_viv_tmp_205
    repr_defined $I5027, fb_tmp_699
    unless $I5027 goto if2159_else3800 
    set $P5134, fb_tmp_699["%REG"]
    set $P5136, $P5134
    goto if2159_end3801
  if2159_else3800:
    null $P5135
    set $P5136, $P5135
  if2159_end3801:
    unless_null $P5136, vivi_21603802
    new $P5137, 'Hash'
    set pkg_viv_tmp_205["%REG"], $P5137
    set $P5136, $P5137
  vivi_21603802:
    unless_null $P5136, vivi_21613803
    die "Contextual %*REG not found"
    box $P5138, "Contextual %*REG not found"
    set $P5136, $P5138
  vivi_21613803:
    set $P5131, $P5136
  fallback3799:
    set fb_tmp_698, $P5131
    repr_defined $I5026, fb_tmp_698
    unless $I5026 goto if2158_else3797 
    set $P5139, fb_tmp_698["cur"]
    set $P5141, $P5139
    goto if2158_end3798
  if2158_else3797:
    null $P5140
    set $P5141, $P5140
  if2158_end3798:
    unless_null $P5141, vivi_21623804
    nqp_get_sc_object $P5142, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5141, $P5142
  vivi_21623804:
    find_dynamic_lex $P5143, "%*REG"
    unless_null $P5143, fallback3807
    nqp_get_sc_object $P5145, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5144, $P5145
    set pkg_viv_tmp_206, $P5144
    set fb_tmp_701, pkg_viv_tmp_206
    repr_defined $I5029, fb_tmp_701
    unless $I5029 goto if2164_else3808 
    set $P5146, fb_tmp_701["%REG"]
    set $P5148, $P5146
    goto if2164_end3809
  if2164_else3808:
    null $P5147
    set $P5148, $P5147
  if2164_end3809:
    unless_null $P5148, vivi_21653810
    new $P5149, 'Hash'
    set pkg_viv_tmp_206["%REG"], $P5149
    set $P5148, $P5149
  vivi_21653810:
    unless_null $P5148, vivi_21663811
    die "Contextual %*REG not found"
    box $P5150, "Contextual %*REG not found"
    set $P5148, $P5150
  vivi_21663811:
    set $P5143, $P5148
  fallback3807:
    set fb_tmp_700, $P5143
    repr_defined $I5028, fb_tmp_700
    unless $I5028 goto if2163_else3805 
    set $P5151, fb_tmp_700["cstack"]
    set $P5153, $P5151
    goto if2163_end3806
  if2163_else3805:
    null $P5152
    set $P5153, $P5152
  if2163_end3806:
    unless_null $P5153, vivi_21673812
    nqp_get_sc_object $P5154, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5153, $P5154
  vivi_21673812:
    $P5155 = $P101."push_pirop"("callmethod", "\"!cursor_capture\"", $P5141, "$P11", $P102, $P5153 :named("result"))
  if2156_end3794:
    set $S5004, $P103
    iseq $I5030, $S5004, "zerowidth"
    if $I5030 goto unless2168_end3814 
.annotate 'line', 3857
    find_dynamic_lex $P5156, "%*REG"
    unless_null $P5156, fallback3817
    nqp_get_sc_object $P5158, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5157, $P5158
    set pkg_viv_tmp_207, $P5157
    set fb_tmp_703, pkg_viv_tmp_207
    repr_defined $I5032, fb_tmp_703
    unless $I5032 goto if2170_else3818 
    set $P5159, fb_tmp_703["%REG"]
    set $P5161, $P5159
    goto if2170_end3819
  if2170_else3818:
    null $P5160
    set $P5161, $P5160
  if2170_end3819:
    unless_null $P5161, vivi_21713820
    new $P5162, 'Hash'
    set pkg_viv_tmp_207["%REG"], $P5162
    set $P5161, $P5162
  vivi_21713820:
    unless_null $P5161, vivi_21723821
    die "Contextual %*REG not found"
    box $P5163, "Contextual %*REG not found"
    set $P5161, $P5163
  vivi_21723821:
    set $P5156, $P5161
  fallback3817:
    set fb_tmp_702, $P5156
    repr_defined $I5031, fb_tmp_702
    unless $I5031 goto if2169_else3815 
    set $P5164, fb_tmp_702["pos"]
    set $P5166, $P5164
    goto if2169_end3816
  if2169_else3815:
    null $P5165
    set $P5166, $P5165
  if2169_end3816:
    unless_null $P5166, vivi_21733822
    nqp_get_sc_object $P5167, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5166, $P5167
  vivi_21733822:
    find_dynamic_lex $P5168, "%*REG"
    unless_null $P5168, fallback3825
    nqp_get_sc_object $P5170, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5169, $P5170
    set pkg_viv_tmp_208, $P5169
    set fb_tmp_705, pkg_viv_tmp_208
    repr_defined $I5034, fb_tmp_705
    unless $I5034 goto if2175_else3826 
    set $P5171, fb_tmp_705["%REG"]
    set $P5173, $P5171
    goto if2175_end3827
  if2175_else3826:
    null $P5172
    set $P5173, $P5172
  if2175_end3827:
    unless_null $P5173, vivi_21763828
    new $P5174, 'Hash'
    set pkg_viv_tmp_208["%REG"], $P5174
    set $P5173, $P5174
  vivi_21763828:
    unless_null $P5173, vivi_21773829
    die "Contextual %*REG not found"
    box $P5175, "Contextual %*REG not found"
    set $P5173, $P5175
  vivi_21773829:
    set $P5168, $P5173
  fallback3825:
    set fb_tmp_704, $P5168
    repr_defined $I5033, fb_tmp_704
    unless $I5033 goto if2174_else3823 
    set $P5176, fb_tmp_704["curclass"]
    set $P5178, $P5176
    goto if2174_end3824
  if2174_else3823:
    null $P5177
    set $P5178, $P5177
  if2174_end3824:
    unless_null $P5178, vivi_21783830
    nqp_get_sc_object $P5179, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5178, $P5179
  vivi_21783830:
    $P5180 = $P101."push_pirop"("repr_get_attr_int", $P5166, "$P11", $P5178, "\"$!pos\"")
  unless2168_end3814:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_360_1361964166.213") :anon :lex :outer("cuid_134_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3820
    .const 'Sub' $P5022 = 'cuid_359_1361964166.213' 
    capture_lex $P5022 
    .lex "$rxname", $P101 
    .lex "$passlabel", $P102 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 3821
    find_lex $P5004, "self"
    nqp_decontainerize $P5003, $P5004
    $P5005 = $P5003."unique"("rxsubrule")
    set $P101, $P5005
.annotate 'line', 3822
    find_lex $P5007, "self"
    nqp_decontainerize $P5006, $P5007
    set $S5002, $P101
    concat $S5001, $S5002, "_pass"
    $P5008 = $P5006."post_new"("Label", $S5001 :named("name"))
    set $P102, $P5008
.annotate 'line', 3823
    find_lex $P5009, "$node"
    $P5010 = $P5009."backtrack"()
    set $S5003, $P5010
    iseq $I5001, $S5003, "r"
    unless $I5001 goto if2093_else3691 
    find_lex $P5011, "$subtype"
    set $S5004, $P5011
    iseq $I5002, $S5004, "method"
    box $P5018, $I5002
    set $P5017, $P5018
    if $I5002 goto unless2094_end3694 
.annotate 'line', 3824
.annotate 'line', 3825
    find_lex $P5013, "self"
    nqp_decontainerize $P5012, $P5013
    find_lex $P5014, "$ops"
    $P5012."regex_mark"($P5014, $P102, -1, 0)
.annotate 'line', 3826
    find_lex $P5015, "$ops"
    $P5016 = $P5015."push"($P102)
    set $P5017, $P5016
  unless2094_end3694:
    set $P5021, $P5017
    goto if2093_end3692
  if2093_else3691:
    .const 'Sub' $P5019 = 'cuid_359_1361964166.213' 
    capture_lex $P5019
    $P5020 = $P5019()
    set $P5021, $P5020
  if2093_end3692:
    .return ($P5021) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_359_1361964166.213") :anon :lex :outer("cuid_360_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3829
    .lex "$backlabel", $P101 
    .local pmc fb_tmp_674 
    .local pmc fb_tmp_675 
    .local pmc pkg_viv_tmp_193 
    .local pmc fb_tmp_676 
    .local pmc fb_tmp_677 
    .local pmc pkg_viv_tmp_194 
    .local pmc fb_tmp_678 
    .local pmc fb_tmp_679 
    .local pmc pkg_viv_tmp_195 
    .local pmc fb_tmp_680 
    .local pmc fb_tmp_681 
    .local pmc pkg_viv_tmp_196 
    .local pmc fb_tmp_682 
    .local pmc fb_tmp_683 
    .local pmc pkg_viv_tmp_197 
    .local pmc fb_tmp_684 
    .local pmc fb_tmp_685 
    .local pmc pkg_viv_tmp_198 
    .local pmc fb_tmp_686 
    .local pmc fb_tmp_687 
    .local pmc pkg_viv_tmp_199 
    .local pmc fb_tmp_688 
    .local pmc fb_tmp_689 
    .local pmc pkg_viv_tmp_200 
    .local pmc fb_tmp_690 
    .local pmc fb_tmp_691 
    .local pmc pkg_viv_tmp_201 
    .local pmc fb_tmp_692 
    .local pmc fb_tmp_693 
    .local pmc pkg_viv_tmp_202 
    .local pmc fb_tmp_694 
    .local pmc fb_tmp_695 
    .local pmc pkg_viv_tmp_203 
    .local pmc fb_tmp_696 
    .local pmc fb_tmp_697 
    .local pmc pkg_viv_tmp_204 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
.annotate 'line', 3830
    find_lex $P5003, "self"
    nqp_decontainerize $P5002, $P5003
    find_lex $P5004, "$rxname"
    set $S5002, $P5004
    concat $S5001, $S5002, "_back"
    $P5005 = $P5002."post_new"("Label", $S5001 :named("name"))
    set $P101, $P5005
.annotate 'line', 3831
    find_lex $P5006, "$ops"
    find_lex $P5007, "$passlabel"
    $P5006."push_pirop"("goto", $P5007)
.annotate 'line', 3832
    find_lex $P5008, "$ops"
    $P5008."push"($P101)
.annotate 'line', 3833
    find_lex $P5009, "$ops"
    $P5009."push_pirop"("callmethod", "\"!cursor_next\"", "$P11", "$P11" :named("result"))
.annotate 'line', 3834
    find_lex $P5010, "$ops"
    find_dynamic_lex $P5011, "%*REG"
    unless_null $P5011, fallback3697
    nqp_get_sc_object $P5013, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5012, $P5013
    set pkg_viv_tmp_193, $P5012
    set fb_tmp_675, pkg_viv_tmp_193
    repr_defined $I5002, fb_tmp_675
    unless $I5002 goto if2096_else3698 
    set $P5014, fb_tmp_675["%REG"]
    set $P5016, $P5014
    goto if2096_end3699
  if2096_else3698:
    null $P5015
    set $P5016, $P5015
  if2096_end3699:
    unless_null $P5016, vivi_20973700
    new $P5017, 'Hash'
    set pkg_viv_tmp_193["%REG"], $P5017
    set $P5016, $P5017
  vivi_20973700:
    unless_null $P5016, vivi_20983701
    die "Contextual %*REG not found"
    box $P5018, "Contextual %*REG not found"
    set $P5016, $P5018
  vivi_20983701:
    set $P5011, $P5016
  fallback3697:
    set fb_tmp_674, $P5011
    repr_defined $I5001, fb_tmp_674
    unless $I5001 goto if2095_else3695 
    set $P5019, fb_tmp_674["curclass"]
    set $P5021, $P5019
    goto if2095_end3696
  if2095_else3695:
    null $P5020
    set $P5021, $P5020
  if2095_end3696:
    unless_null $P5021, vivi_20993702
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5021, $P5022
  vivi_20993702:
    $P5010."push_pirop"("repr_get_attr_int", "$I11", "$P11", $P5021, "\"$!pos\"")
.annotate 'line', 3835
    find_lex $P5023, "$ops"
    find_lex $P5024, "$testop"
    find_dynamic_lex $P5025, "%*REG"
    unless_null $P5025, fallback3705
    nqp_get_sc_object $P5027, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5026, $P5027
    set pkg_viv_tmp_194, $P5026
    set fb_tmp_677, pkg_viv_tmp_194
    repr_defined $I5004, fb_tmp_677
    unless $I5004 goto if2101_else3706 
    set $P5028, fb_tmp_677["%REG"]
    set $P5030, $P5028
    goto if2101_end3707
  if2101_else3706:
    null $P5029
    set $P5030, $P5029
  if2101_end3707:
    unless_null $P5030, vivi_21023708
    new $P5031, 'Hash'
    set pkg_viv_tmp_194["%REG"], $P5031
    set $P5030, $P5031
  vivi_21023708:
    unless_null $P5030, vivi_21033709
    die "Contextual %*REG not found"
    box $P5032, "Contextual %*REG not found"
    set $P5030, $P5032
  vivi_21033709:
    set $P5025, $P5030
  fallback3705:
    set fb_tmp_676, $P5025
    repr_defined $I5003, fb_tmp_676
    unless $I5003 goto if2100_else3703 
    set $P5033, fb_tmp_676["fail"]
    set $P5035, $P5033
    goto if2100_end3704
  if2100_else3703:
    null $P5034
    set $P5035, $P5034
  if2100_end3704:
    unless_null $P5035, vivi_21043710
    nqp_get_sc_object $P5036, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5035, $P5036
  vivi_21043710:
    $P5023."push_pirop"($P5024, "$I11", "0", $P5035)
.annotate 'line', 3836
    find_lex $P5037, "$ops"
    find_lex $P5038, "$passlabel"
    $P5037."push"($P5038)
    find_lex $P5039, "$subtype"
    set $S5003, $P5039
    iseq $I5005, $S5003, "capture"
    unless $I5005 goto if2105_else3711 
.annotate 'line', 3837
.annotate 'line', 3838
    find_lex $P5040, "$ops"
    find_dynamic_lex $P5041, "%*REG"
    unless_null $P5041, fallback3715
    nqp_get_sc_object $P5043, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_195, $P5042
    set fb_tmp_679, pkg_viv_tmp_195
    repr_defined $I5007, fb_tmp_679
    unless $I5007 goto if2107_else3716 
    set $P5044, fb_tmp_679["%REG"]
    set $P5046, $P5044
    goto if2107_end3717
  if2107_else3716:
    null $P5045
    set $P5046, $P5045
  if2107_end3717:
    unless_null $P5046, vivi_21083718
    new $P5047, 'Hash'
    set pkg_viv_tmp_195["%REG"], $P5047
    set $P5046, $P5047
  vivi_21083718:
    unless_null $P5046, vivi_21093719
    die "Contextual %*REG not found"
    box $P5048, "Contextual %*REG not found"
    set $P5046, $P5048
  vivi_21093719:
    set $P5041, $P5046
  fallback3715:
    set fb_tmp_678, $P5041
    repr_defined $I5006, fb_tmp_678
    unless $I5006 goto if2106_else3713 
    set $P5049, fb_tmp_678["cur"]
    set $P5051, $P5049
    goto if2106_end3714
  if2106_else3713:
    null $P5050
    set $P5051, $P5050
  if2106_end3714:
    unless_null $P5051, vivi_21103720
    nqp_get_sc_object $P5052, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5051, $P5052
  vivi_21103720:
    find_lex $P5053, "$name"
    find_dynamic_lex $P5054, "%*REG"
    unless_null $P5054, fallback3723
    nqp_get_sc_object $P5056, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5055, $P5056
    set pkg_viv_tmp_196, $P5055
    set fb_tmp_681, pkg_viv_tmp_196
    repr_defined $I5009, fb_tmp_681
    unless $I5009 goto if2112_else3724 
    set $P5057, fb_tmp_681["%REG"]
    set $P5059, $P5057
    goto if2112_end3725
  if2112_else3724:
    null $P5058
    set $P5059, $P5058
  if2112_end3725:
    unless_null $P5059, vivi_21133726
    new $P5060, 'Hash'
    set pkg_viv_tmp_196["%REG"], $P5060
    set $P5059, $P5060
  vivi_21133726:
    unless_null $P5059, vivi_21143727
    die "Contextual %*REG not found"
    box $P5061, "Contextual %*REG not found"
    set $P5059, $P5061
  vivi_21143727:
    set $P5054, $P5059
  fallback3723:
    set fb_tmp_680, $P5054
    repr_defined $I5008, fb_tmp_680
    unless $I5008 goto if2111_else3721 
    set $P5062, fb_tmp_680["cstack"]
    set $P5064, $P5062
    goto if2111_end3722
  if2111_else3721:
    null $P5063
    set $P5064, $P5063
  if2111_end3722:
    unless_null $P5064, vivi_21153728
    nqp_get_sc_object $P5065, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5064, $P5065
  vivi_21153728:
    $P5040."push_pirop"("callmethod", "\"!cursor_capture\"", $P5051, "$P11", $P5053, $P5064 :named("result"))
    box $P5066, 1
    store_lex "$captured", $P5066
    goto if2105_end3712
  if2105_else3711:
.annotate 'line', 3842
.annotate 'line', 3843
    find_lex $P5067, "$ops"
    find_dynamic_lex $P5068, "%*REG"
    unless_null $P5068, fallback3731
    nqp_get_sc_object $P5070, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5069, $P5070
    set pkg_viv_tmp_197, $P5069
    set fb_tmp_683, pkg_viv_tmp_197
    repr_defined $I5011, fb_tmp_683
    unless $I5011 goto if2117_else3732 
    set $P5071, fb_tmp_683["%REG"]
    set $P5073, $P5071
    goto if2117_end3733
  if2117_else3732:
    null $P5072
    set $P5073, $P5072
  if2117_end3733:
    unless_null $P5073, vivi_21183734
    new $P5074, 'Hash'
    set pkg_viv_tmp_197["%REG"], $P5074
    set $P5073, $P5074
  vivi_21183734:
    unless_null $P5073, vivi_21193735
    die "Contextual %*REG not found"
    box $P5075, "Contextual %*REG not found"
    set $P5073, $P5075
  vivi_21193735:
    set $P5068, $P5073
  fallback3731:
    set fb_tmp_682, $P5068
    repr_defined $I5010, fb_tmp_682
    unless $I5010 goto if2116_else3729 
    set $P5076, fb_tmp_682["cur"]
    set $P5078, $P5076
    goto if2116_end3730
  if2116_else3729:
    null $P5077
    set $P5078, $P5077
  if2116_end3730:
    unless_null $P5078, vivi_21203736
    nqp_get_sc_object $P5079, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5078, $P5079
  vivi_21203736:
    find_dynamic_lex $P5080, "%*REG"
    unless_null $P5080, fallback3739
    nqp_get_sc_object $P5082, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5081, $P5082
    set pkg_viv_tmp_198, $P5081
    set fb_tmp_685, pkg_viv_tmp_198
    repr_defined $I5013, fb_tmp_685
    unless $I5013 goto if2122_else3740 
    set $P5083, fb_tmp_685["%REG"]
    set $P5085, $P5083
    goto if2122_end3741
  if2122_else3740:
    null $P5084
    set $P5085, $P5084
  if2122_end3741:
    unless_null $P5085, vivi_21233742
    new $P5086, 'Hash'
    set pkg_viv_tmp_198["%REG"], $P5086
    set $P5085, $P5086
  vivi_21233742:
    unless_null $P5085, vivi_21243743
    die "Contextual %*REG not found"
    box $P5087, "Contextual %*REG not found"
    set $P5085, $P5087
  vivi_21243743:
    set $P5080, $P5085
  fallback3739:
    set fb_tmp_684, $P5080
    repr_defined $I5012, fb_tmp_684
    unless $I5012 goto if2121_else3737 
    set $P5088, fb_tmp_684["cstack"]
    set $P5090, $P5088
    goto if2121_end3738
  if2121_else3737:
    null $P5089
    set $P5090, $P5089
  if2121_end3738:
    unless_null $P5090, vivi_21253744
    nqp_get_sc_object $P5091, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5090, $P5091
  vivi_21253744:
    $P5092 = $P5067."push_pirop"("callmethod", "\"!cursor_push_cstack\"", $P5078, "$P11", $P5090 :named("result"))
  if2105_end3712:
.annotate 'line', 3846
    find_lex $P5093, "$ops"
    $P5093."push_pirop"("set_addr", "$I11", $P101)
.annotate 'line', 3847
    find_lex $P5094, "$ops"
    find_dynamic_lex $P5095, "%*REG"
    unless_null $P5095, fallback3747
    nqp_get_sc_object $P5097, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5096, $P5097
    set pkg_viv_tmp_199, $P5096
    set fb_tmp_687, pkg_viv_tmp_199
    repr_defined $I5015, fb_tmp_687
    unless $I5015 goto if2127_else3748 
    set $P5098, fb_tmp_687["%REG"]
    set $P5100, $P5098
    goto if2127_end3749
  if2127_else3748:
    null $P5099
    set $P5100, $P5099
  if2127_end3749:
    unless_null $P5100, vivi_21283750
    new $P5101, 'Hash'
    set pkg_viv_tmp_199["%REG"], $P5101
    set $P5100, $P5101
  vivi_21283750:
    unless_null $P5100, vivi_21293751
    die "Contextual %*REG not found"
    box $P5102, "Contextual %*REG not found"
    set $P5100, $P5102
  vivi_21293751:
    set $P5095, $P5100
  fallback3747:
    set fb_tmp_686, $P5095
    repr_defined $I5014, fb_tmp_686
    unless $I5014 goto if2126_else3745 
    set $P5103, fb_tmp_686["bstack"]
    set $P5105, $P5103
    goto if2126_end3746
  if2126_else3745:
    null $P5104
    set $P5105, $P5104
  if2126_end3746:
    unless_null $P5105, vivi_21303752
    nqp_get_sc_object $P5106, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5105, $P5106
  vivi_21303752:
    $P5094."push_pirop"("push", $P5105, "$I11")
.annotate 'line', 3848
    find_lex $P5107, "$ops"
    find_dynamic_lex $P5108, "%*REG"
    unless_null $P5108, fallback3755
    nqp_get_sc_object $P5110, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5109, $P5110
    set pkg_viv_tmp_200, $P5109
    set fb_tmp_689, pkg_viv_tmp_200
    repr_defined $I5017, fb_tmp_689
    unless $I5017 goto if2132_else3756 
    set $P5111, fb_tmp_689["%REG"]
    set $P5113, $P5111
    goto if2132_end3757
  if2132_else3756:
    null $P5112
    set $P5113, $P5112
  if2132_end3757:
    unless_null $P5113, vivi_21333758
    new $P5114, 'Hash'
    set pkg_viv_tmp_200["%REG"], $P5114
    set $P5113, $P5114
  vivi_21333758:
    unless_null $P5113, vivi_21343759
    die "Contextual %*REG not found"
    box $P5115, "Contextual %*REG not found"
    set $P5113, $P5115
  vivi_21343759:
    set $P5108, $P5113
  fallback3755:
    set fb_tmp_688, $P5108
    repr_defined $I5016, fb_tmp_688
    unless $I5016 goto if2131_else3753 
    set $P5116, fb_tmp_688["bstack"]
    set $P5118, $P5116
    goto if2131_end3754
  if2131_else3753:
    null $P5117
    set $P5118, $P5117
  if2131_end3754:
    unless_null $P5118, vivi_21353760
    nqp_get_sc_object $P5119, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5118, $P5119
  vivi_21353760:
    $P5107."push_pirop"("push", $P5118, 0)
.annotate 'line', 3849
    find_lex $P5120, "$ops"
    find_dynamic_lex $P5121, "%*REG"
    unless_null $P5121, fallback3763
    nqp_get_sc_object $P5123, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5122, $P5123
    set pkg_viv_tmp_201, $P5122
    set fb_tmp_691, pkg_viv_tmp_201
    repr_defined $I5019, fb_tmp_691
    unless $I5019 goto if2137_else3764 
    set $P5124, fb_tmp_691["%REG"]
    set $P5126, $P5124
    goto if2137_end3765
  if2137_else3764:
    null $P5125
    set $P5126, $P5125
  if2137_end3765:
    unless_null $P5126, vivi_21383766
    new $P5127, 'Hash'
    set pkg_viv_tmp_201["%REG"], $P5127
    set $P5126, $P5127
  vivi_21383766:
    unless_null $P5126, vivi_21393767
    die "Contextual %*REG not found"
    box $P5128, "Contextual %*REG not found"
    set $P5126, $P5128
  vivi_21393767:
    set $P5121, $P5126
  fallback3763:
    set fb_tmp_690, $P5121
    repr_defined $I5018, fb_tmp_690
    unless $I5018 goto if2136_else3761 
    set $P5129, fb_tmp_690["bstack"]
    set $P5131, $P5129
    goto if2136_end3762
  if2136_else3761:
    null $P5130
    set $P5131, $P5130
  if2136_end3762:
    unless_null $P5131, vivi_21403768
    nqp_get_sc_object $P5132, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5131, $P5132
  vivi_21403768:
    find_dynamic_lex $P5133, "%*REG"
    unless_null $P5133, fallback3771
    nqp_get_sc_object $P5135, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5134, $P5135
    set pkg_viv_tmp_202, $P5134
    set fb_tmp_693, pkg_viv_tmp_202
    repr_defined $I5021, fb_tmp_693
    unless $I5021 goto if2142_else3772 
    set $P5136, fb_tmp_693["%REG"]
    set $P5138, $P5136
    goto if2142_end3773
  if2142_else3772:
    null $P5137
    set $P5138, $P5137
  if2142_end3773:
    unless_null $P5138, vivi_21433774
    new $P5139, 'Hash'
    set pkg_viv_tmp_202["%REG"], $P5139
    set $P5138, $P5139
  vivi_21433774:
    unless_null $P5138, vivi_21443775
    die "Contextual %*REG not found"
    box $P5140, "Contextual %*REG not found"
    set $P5138, $P5140
  vivi_21443775:
    set $P5133, $P5138
  fallback3771:
    set fb_tmp_692, $P5133
    repr_defined $I5020, fb_tmp_692
    unless $I5020 goto if2141_else3769 
    set $P5141, fb_tmp_692["pos"]
    set $P5143, $P5141
    goto if2141_end3770
  if2141_else3769:
    null $P5142
    set $P5143, $P5142
  if2141_end3770:
    unless_null $P5143, vivi_21453776
    nqp_get_sc_object $P5144, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5143, $P5144
  vivi_21453776:
    $P5120."push_pirop"("push", $P5131, $P5143)
.annotate 'line', 3850
    find_lex $P5145, "$ops"
    find_dynamic_lex $P5146, "%*REG"
    unless_null $P5146, fallback3779
    nqp_get_sc_object $P5148, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5147, $P5148
    set pkg_viv_tmp_203, $P5147
    set fb_tmp_695, pkg_viv_tmp_203
    repr_defined $I5023, fb_tmp_695
    unless $I5023 goto if2147_else3780 
    set $P5149, fb_tmp_695["%REG"]
    set $P5151, $P5149
    goto if2147_end3781
  if2147_else3780:
    null $P5150
    set $P5151, $P5150
  if2147_end3781:
    unless_null $P5151, vivi_21483782
    new $P5152, 'Hash'
    set pkg_viv_tmp_203["%REG"], $P5152
    set $P5151, $P5152
  vivi_21483782:
    unless_null $P5151, vivi_21493783
    die "Contextual %*REG not found"
    box $P5153, "Contextual %*REG not found"
    set $P5151, $P5153
  vivi_21493783:
    set $P5146, $P5151
  fallback3779:
    set fb_tmp_694, $P5146
    repr_defined $I5022, fb_tmp_694
    unless $I5022 goto if2146_else3777 
    set $P5154, fb_tmp_694["cstack"]
    set $P5156, $P5154
    goto if2146_end3778
  if2146_else3777:
    null $P5155
    set $P5156, $P5155
  if2146_end3778:
    unless_null $P5156, vivi_21503784
    nqp_get_sc_object $P5157, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5156, $P5157
  vivi_21503784:
    $P5145."push_pirop"("elements", "$I11", $P5156)
.annotate 'line', 3851
    find_lex $P5158, "$ops"
    find_dynamic_lex $P5159, "%*REG"
    unless_null $P5159, fallback3787
    nqp_get_sc_object $P5161, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5160, $P5161
    set pkg_viv_tmp_204, $P5160
    set fb_tmp_697, pkg_viv_tmp_204
    repr_defined $I5025, fb_tmp_697
    unless $I5025 goto if2152_else3788 
    set $P5162, fb_tmp_697["%REG"]
    set $P5164, $P5162
    goto if2152_end3789
  if2152_else3788:
    null $P5163
    set $P5164, $P5163
  if2152_end3789:
    unless_null $P5164, vivi_21533790
    new $P5165, 'Hash'
    set pkg_viv_tmp_204["%REG"], $P5165
    set $P5164, $P5165
  vivi_21533790:
    unless_null $P5164, vivi_21543791
    die "Contextual %*REG not found"
    box $P5166, "Contextual %*REG not found"
    set $P5164, $P5166
  vivi_21543791:
    set $P5159, $P5164
  fallback3787:
    set fb_tmp_696, $P5159
    repr_defined $I5024, fb_tmp_696
    unless $I5024 goto if2151_else3785 
    set $P5167, fb_tmp_696["bstack"]
    set $P5169, $P5167
    goto if2151_end3786
  if2151_else3785:
    null $P5168
    set $P5169, $P5168
  if2151_end3786:
    unless_null $P5169, vivi_21553792
    nqp_get_sc_object $P5170, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5169, $P5170
  vivi_21553792:
    $P5171 = $P5158."push_pirop"("push", $P5169, "$I11")
    .return ($P5171) 
.end
.HLL "nqp"
.namespace []
.sub "uniprop" :subid("cuid_135_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3862
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "$ops", $P101 
    .lex "$cmpop", $P102 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    .local pmc fb_tmp_706 
    .local pmc fb_tmp_707 
    .local pmc pkg_viv_tmp_209 
    .local pmc fb_tmp_708 
    .local pmc fb_tmp_709 
    .local pmc fb_tmp_710 
    .local pmc pkg_viv_tmp_210 
    .local pmc fb_tmp_711 
    .local pmc fb_tmp_712 
    .local pmc pkg_viv_tmp_211 
    .local pmc fb_tmp_713 
    .local pmc fb_tmp_714 
    .local pmc pkg_viv_tmp_212 
    .local pmc fb_tmp_715 
    .local pmc fb_tmp_716 
    .local pmc pkg_viv_tmp_213 
    nqp_get_sc_object $P5001, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P101, $P5001
    nqp_get_sc_object $P5002, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P102, $P5002
.annotate 'line', 3863
    nqp_decontainerize $P5003, _lex_param_0
    find_dynamic_lex $P5004, "%*REG"
    unless_null $P5004, fallback3833
    nqp_get_sc_object $P5006, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5005, $P5006
    set pkg_viv_tmp_209, $P5005
    set fb_tmp_707, pkg_viv_tmp_209
    repr_defined $I5002, fb_tmp_707
    unless $I5002 goto if2180_else3834 
    set $P5007, fb_tmp_707["%REG"]
    set $P5009, $P5007
    goto if2180_end3835
  if2180_else3834:
    null $P5008
    set $P5009, $P5008
  if2180_end3835:
    unless_null $P5009, vivi_21813836
    new $P5010, 'Hash'
    set pkg_viv_tmp_209["%REG"], $P5010
    set $P5009, $P5010
  vivi_21813836:
    unless_null $P5009, vivi_21823837
    die "Contextual %*REG not found"
    box $P5011, "Contextual %*REG not found"
    set $P5009, $P5011
  vivi_21823837:
    set $P5004, $P5009
  fallback3833:
    set fb_tmp_706, $P5004
    repr_defined $I5001, fb_tmp_706
    unless $I5001 goto if2179_else3831 
    set $P5012, fb_tmp_706["cur"]
    set $P5014, $P5012
    goto if2179_end3832
  if2179_else3831:
    null $P5013
    set $P5014, $P5013
  if2179_end3832:
    unless_null $P5014, vivi_21833838
    nqp_get_sc_object $P5015, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5014, $P5015
  vivi_21833838:
    $P5016 = $P5003."post_new"("Ops", $P5014 :named("result"))
    set $P101, $P5016
.annotate 'line', 3864
    $P5017 = _lex_param_1."negate"()
    unless $P5017 goto if2184_else3839 
    set $S5001, "ne"
    goto if2184_end3840
  if2184_else3839:
    set $S5001, "eq"
  if2184_end3840:
    box $P5018, $S5001
    set $P102, $P5018
.annotate 'line', 3865
    set fb_tmp_708, _lex_param_1
    repr_defined $I5003, fb_tmp_708
    unless $I5003 goto if2185_else3841 
    set $P5019, fb_tmp_708[0]
    set $P5021, $P5019
    goto if2185_end3842
  if2185_else3841:
    null $P5020
    set $P5021, $P5020
  if2185_end3842:
    unless_null $P5021, vivi_21863843
    nqp_get_sc_object $P5022, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5021, $P5022
  vivi_21863843:
    set $S5004, $P5021
    concat $S5003, "\"", $S5004
    concat $S5002, $S5003, "\""
    $P101."push_pirop"("assign", "$S10", $S5002)
.annotate 'line', 3866
    find_dynamic_lex $P5023, "%*REG"
    unless_null $P5023, fallback3846
    nqp_get_sc_object $P5025, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5024, $P5025
    set pkg_viv_tmp_210, $P5024
    set fb_tmp_710, pkg_viv_tmp_210
    repr_defined $I5005, fb_tmp_710
    unless $I5005 goto if2188_else3847 
    set $P5026, fb_tmp_710["%REG"]
    set $P5028, $P5026
    goto if2188_end3848
  if2188_else3847:
    null $P5027
    set $P5028, $P5027
  if2188_end3848:
    unless_null $P5028, vivi_21893849
    new $P5029, 'Hash'
    set pkg_viv_tmp_210["%REG"], $P5029
    set $P5028, $P5029
  vivi_21893849:
    unless_null $P5028, vivi_21903850
    die "Contextual %*REG not found"
    box $P5030, "Contextual %*REG not found"
    set $P5028, $P5030
  vivi_21903850:
    set $P5023, $P5028
  fallback3846:
    set fb_tmp_709, $P5023
    repr_defined $I5004, fb_tmp_709
    unless $I5004 goto if2187_else3844 
    set $P5031, fb_tmp_709["tgt"]
    set $P5033, $P5031
    goto if2187_end3845
  if2187_else3844:
    null $P5032
    set $P5033, $P5032
  if2187_end3845:
    unless_null $P5033, vivi_21913851
    nqp_get_sc_object $P5034, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5033, $P5034
  vivi_21913851:
    find_dynamic_lex $P5035, "%*REG"
    unless_null $P5035, fallback3854
    nqp_get_sc_object $P5037, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5036, $P5037
    set pkg_viv_tmp_211, $P5036
    set fb_tmp_712, pkg_viv_tmp_211
    repr_defined $I5007, fb_tmp_712
    unless $I5007 goto if2193_else3855 
    set $P5038, fb_tmp_712["%REG"]
    set $P5040, $P5038
    goto if2193_end3856
  if2193_else3855:
    null $P5039
    set $P5040, $P5039
  if2193_end3856:
    unless_null $P5040, vivi_21943857
    new $P5041, 'Hash'
    set pkg_viv_tmp_211["%REG"], $P5041
    set $P5040, $P5041
  vivi_21943857:
    unless_null $P5040, vivi_21953858
    die "Contextual %*REG not found"
    box $P5042, "Contextual %*REG not found"
    set $P5040, $P5042
  vivi_21953858:
    set $P5035, $P5040
  fallback3854:
    set fb_tmp_711, $P5035
    repr_defined $I5006, fb_tmp_711
    unless $I5006 goto if2192_else3852 
    set $P5043, fb_tmp_711["pos"]
    set $P5045, $P5043
    goto if2192_end3853
  if2192_else3852:
    null $P5044
    set $P5045, $P5044
  if2192_end3853:
    unless_null $P5045, vivi_21963859
    nqp_get_sc_object $P5046, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5045, $P5046
  vivi_21963859:
    $P101."push_pirop"("is_uprop", "$I11", "$S10", $P5033, $P5045)
.annotate 'line', 3867
    find_dynamic_lex $P5047, "%*REG"
    unless_null $P5047, fallback3862
    nqp_get_sc_object $P5049, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5048, $P5049
    set pkg_viv_tmp_212, $P5048
    set fb_tmp_714, pkg_viv_tmp_212
    repr_defined $I5009, fb_tmp_714
    unless $I5009 goto if2198_else3863 
    set $P5050, fb_tmp_714["%REG"]
    set $P5052, $P5050
    goto if2198_end3864
  if2198_else3863:
    null $P5051
    set $P5052, $P5051
  if2198_end3864:
    unless_null $P5052, vivi_21993865
    new $P5053, 'Hash'
    set pkg_viv_tmp_212["%REG"], $P5053
    set $P5052, $P5053
  vivi_21993865:
    unless_null $P5052, vivi_22003866
    die "Contextual %*REG not found"
    box $P5054, "Contextual %*REG not found"
    set $P5052, $P5054
  vivi_22003866:
    set $P5047, $P5052
  fallback3862:
    set fb_tmp_713, $P5047
    repr_defined $I5008, fb_tmp_713
    unless $I5008 goto if2197_else3860 
    set $P5055, fb_tmp_713["fail"]
    set $P5057, $P5055
    goto if2197_end3861
  if2197_else3860:
    null $P5056
    set $P5057, $P5056
  if2197_end3861:
    unless_null $P5057, vivi_22013867
    nqp_get_sc_object $P5058, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5057, $P5058
  vivi_22013867:
    $P101."push_pirop"($P102, "$I11", 0, $P5057)
.annotate 'line', 3868
    $P5059 = _lex_param_1."subtype"()
    set $S5005, $P5059
    iseq $I5010, $S5005, "zerowidth"
    if $I5010 goto unless2202_end3869 
    find_dynamic_lex $P5060, "%*REG"
    unless_null $P5060, fallback3872
    nqp_get_sc_object $P5062, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5061, $P5062
    set pkg_viv_tmp_213, $P5061
    set fb_tmp_716, pkg_viv_tmp_213
    repr_defined $I5012, fb_tmp_716
    unless $I5012 goto if2204_else3873 
    set $P5063, fb_tmp_716["%REG"]
    set $P5065, $P5063
    goto if2204_end3874
  if2204_else3873:
    null $P5064
    set $P5065, $P5064
  if2204_end3874:
    unless_null $P5065, vivi_22053875
    new $P5066, 'Hash'
    set pkg_viv_tmp_213["%REG"], $P5066
    set $P5065, $P5066
  vivi_22053875:
    unless_null $P5065, vivi_22063876
    die "Contextual %*REG not found"
    box $P5067, "Contextual %*REG not found"
    set $P5065, $P5067
  vivi_22063876:
    set $P5060, $P5065
  fallback3872:
    set fb_tmp_715, $P5060
    repr_defined $I5011, fb_tmp_715
    unless $I5011 goto if2203_else3870 
    set $P5068, fb_tmp_715["pos"]
    set $P5070, $P5068
    goto if2203_end3871
  if2203_else3870:
    null $P5069
    set $P5070, $P5069
  if2203_end3871:
    unless_null $P5070, vivi_22073877
    nqp_get_sc_object $P5071, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5070, $P5071
  vivi_22073877:
    $P5072 = $P101."push_pirop"("inc", $P5070)
  unless2202_end3869:
    .return ($P101) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_136_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3873
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .lex "self", _lex_param_0 
    .lex "$node", _lex_param_1 
    nqp_decontainerize $P5001, _lex_param_0
    $P5002 = $P5001."subrule"(_lex_param_1)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "regex_mark" :subid("cuid_137_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3875
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 
    .param pmc _lex_param_4 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .lex "$pos", _lex_param_3 
    .lex "$rep", _lex_param_4 
    .local pmc fb_tmp_717 
    .local pmc fb_tmp_718 
    .local pmc pkg_viv_tmp_214 
.annotate 'line', 3876
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback3880
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_214, $P5002
    set fb_tmp_718, pkg_viv_tmp_214
    repr_defined $I5002, fb_tmp_718
    unless $I5002 goto if2209_else3881 
    set $P5004, fb_tmp_718["%REG"]
    set $P5006, $P5004
    goto if2209_end3882
  if2209_else3881:
    null $P5005
    set $P5006, $P5005
  if2209_end3882:
    unless_null $P5006, vivi_22103883
    new $P5007, 'Hash'
    set pkg_viv_tmp_214["%REG"], $P5007
    set $P5006, $P5007
  vivi_22103883:
    unless_null $P5006, vivi_22113884
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_22113884:
    set $P5001, $P5006
  fallback3880:
    set fb_tmp_717, $P5001
    repr_defined $I5001, fb_tmp_717
    unless $I5001 goto if2208_else3878 
    set $P5009, fb_tmp_717["bstack"]
    set $P5011, $P5009
    goto if2208_end3879
  if2208_else3878:
    null $P5010
    set $P5011, $P5010
  if2208_end3879:
    unless_null $P5011, vivi_22123885
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_22123885:
    $P5013 = _lex_param_1."push_pirop"("nqp_rxmark", $P5011, _lex_param_2, _lex_param_3, _lex_param_4)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "regex_peek" :subid("cuid_138_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3879
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .param pmc _lex_param_3 :slurpy 
    .const 'Sub' $P5018 = 'cuid_361_1361964166.213' 
    capture_lex $P5018 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .lex "@regs", _lex_param_3 
    .local pmc fb_tmp_719 
    .local pmc fb_tmp_720 
    .local pmc pkg_viv_tmp_215 
.annotate 'line', 3880
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback3888
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_215, $P5002
    set fb_tmp_720, pkg_viv_tmp_215
    repr_defined $I5002, fb_tmp_720
    unless $I5002 goto if2214_else3889 
    set $P5004, fb_tmp_720["%REG"]
    set $P5006, $P5004
    goto if2214_end3890
  if2214_else3889:
    null $P5005
    set $P5006, $P5005
  if2214_end3890:
    unless_null $P5006, vivi_22153891
    new $P5007, 'Hash'
    set pkg_viv_tmp_215["%REG"], $P5007
    set $P5006, $P5007
  vivi_22153891:
    unless_null $P5006, vivi_22163892
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_22163892:
    set $P5001, $P5006
  fallback3888:
    set fb_tmp_719, $P5001
    repr_defined $I5001, fb_tmp_719
    unless $I5001 goto if2213_else3886 
    set $P5009, fb_tmp_719["bstack"]
    set $P5011, $P5009
    goto if2213_end3887
  if2213_else3886:
    null $P5010
    set $P5011, $P5010
  if2213_end3887:
    unless_null $P5011, vivi_22173893
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_22173893:
    _lex_param_1."push_pirop"("nqp_rxpeek", "$I19", $P5011, _lex_param_2)
    set $P5013, _lex_param_3
    iter $P5015, _lex_param_3
  for_next3904:
    unless $P5015, for_done3906
    shift $P5017, $P5015
  for_redo3905:
    .const 'Sub' $P5016 = 'cuid_361_1361964166.213' 
    capture_lex $P5016
    $P5013 = $P5016($P5017)
    goto for_next3904
  for_done3906:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_361_1361964166.213") :anon :lex :outer("cuid_138_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3881
    .param pmc _lex_param_0 
    .lex "$_", _lex_param_0 
    .local pmc fb_tmp_721 
    .local pmc fb_tmp_722 
    .local pmc pkg_viv_tmp_216 
.annotate 'line', 3882
    find_lex $P5001, "$ops"
    $P5001."push_pirop"("inc", "$I19")
    set $S5001, _lex_param_0
    isne $I5001, $S5001, "*"
    box $P5017, $I5001
    set $P5016, $P5017
    unless $I5001 goto if2218_end3895 
.annotate 'line', 3883
    find_lex $P5002, "$ops"
    find_dynamic_lex $P5003, "%*REG"
    unless_null $P5003, fallback3898
    nqp_get_sc_object $P5005, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5004, $P5005
    set pkg_viv_tmp_216, $P5004
    set fb_tmp_722, pkg_viv_tmp_216
    repr_defined $I5003, fb_tmp_722
    unless $I5003 goto if2220_else3899 
    set $P5006, fb_tmp_722["%REG"]
    set $P5008, $P5006
    goto if2220_end3900
  if2220_else3899:
    null $P5007
    set $P5008, $P5007
  if2220_end3900:
    unless_null $P5008, vivi_22213901
    new $P5009, 'Hash'
    set pkg_viv_tmp_216["%REG"], $P5009
    set $P5008, $P5009
  vivi_22213901:
    unless_null $P5008, vivi_22223902
    die "Contextual %*REG not found"
    box $P5010, "Contextual %*REG not found"
    set $P5008, $P5010
  vivi_22223902:
    set $P5003, $P5008
  fallback3898:
    set fb_tmp_721, $P5003
    repr_defined $I5002, fb_tmp_721
    unless $I5002 goto if2219_else3896 
    set $P5011, fb_tmp_721["bstack"]
    set $P5013, $P5011
    goto if2219_end3897
  if2219_else3896:
    null $P5012
    set $P5013, $P5012
  if2219_end3897:
    unless_null $P5013, vivi_22233903
    nqp_get_sc_object $P5014, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5013, $P5014
  vivi_22233903:
    set $S5003, $P5013
    concat $S5002, $S5003, "[$I19]"
    $P5015 = $P5002."push_pirop"("set", _lex_param_0, $S5002)
    set $P5016, $P5015
  if2218_end3895:
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "regex_commit" :subid("cuid_139_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3887
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 
    .lex "self", _lex_param_0 
    .lex "$ops", _lex_param_1 
    .lex "$mark", _lex_param_2 
    .local pmc fb_tmp_723 
    .local pmc fb_tmp_724 
    .local pmc pkg_viv_tmp_217 
.annotate 'line', 3888
    find_dynamic_lex $P5001, "%*REG"
    unless_null $P5001, fallback3909
    nqp_get_sc_object $P5003, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_217, $P5002
    set fb_tmp_724, pkg_viv_tmp_217
    repr_defined $I5002, fb_tmp_724
    unless $I5002 goto if2225_else3910 
    set $P5004, fb_tmp_724["%REG"]
    set $P5006, $P5004
    goto if2225_end3911
  if2225_else3910:
    null $P5005
    set $P5006, $P5005
  if2225_end3911:
    unless_null $P5006, vivi_22263912
    new $P5007, 'Hash'
    set pkg_viv_tmp_217["%REG"], $P5007
    set $P5006, $P5007
  vivi_22263912:
    unless_null $P5006, vivi_22273913
    die "Contextual %*REG not found"
    box $P5008, "Contextual %*REG not found"
    set $P5006, $P5008
  vivi_22273913:
    set $P5001, $P5006
  fallback3909:
    set fb_tmp_723, $P5001
    repr_defined $I5001, fb_tmp_723
    unless $I5001 goto if2224_else3907 
    set $P5009, fb_tmp_723["bstack"]
    set $P5011, $P5009
    goto if2224_end3908
  if2224_else3907:
    null $P5010
    set $P5011, $P5010
  if2224_end3908:
    unless_null $P5011, vivi_22283914
    nqp_get_sc_object $P5012, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set $P5011, $P5012
  vivi_22283914:
    $P5013 = _lex_param_1."push_pirop"("nqp_rxcommit", $P5011, _lex_param_2)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "as_post" :subid("cuid_140_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3891
    .param pmc _lex_param_0 
    .param pmc _lex_param_1 
    .param pmc _lex_param_2 :named("want") :optional 
    .param int haz_param_33 :opt_flag 
    .lex "self", _lex_param_0 
    .lex "$unknown", _lex_param_1 
    .lex "$want", _lex_param_2 
    if haz_param_33, default3915
    nqp_get_sc_object $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45", 25
    set _lex_param_2, $P5004
  default3915:
.annotate 'line', 3892
    get_how $P5001, _lex_param_1
    $P5002 = $P5001."name"(_lex_param_1)
    set $S5002, $P5002
    concat $S5001, "Unknown QAST node type ", $S5002
    box $P5003, $S5001
    die $P5003
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "operations" :subid("cuid_141_1361964166.213") :anon :lex :outer("cuid_287_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
.annotate 'line', 3895
    .param pmc _lex_param_0 
    .lex "self", _lex_param_0 
    nqp_get_sc_object $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_363_1361964166.213") :load :init
.annotate 'file', "src\\stage2\\QAST.nqp"
    .const 'Sub' $P5001 = 'cuid_362_1361964166.213' 
    capture_lex $P5001 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_144_1361964166.213" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPHLL")
    nqp_create_sc $P5001, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("src\\stage2\\QAST.nqp")
    new $P5003, 'ResizablePMCArray'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "PIRT"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "41BC6126A6537720F2A162E1AE4506906D3B7795-1361964156.879"
    push $P5004, "src\\stage2\\QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "B8F544C5FEA1A7D7A30ACCA89349053B94404B42-1361964153.45"
    push $P5004, "src\\stage2\\NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "result"
    push $P5004, "$!result"
    push $P5004, "children_pir"
    push $P5004, "escape"
    push $P5004, "push"
    push $P5004, "push_pirop"
    push $P5004, "subid"
    push $P5004, "pirflags"
    push $P5004, "name"
    push $P5004, "loadlibs"
    push $P5004, "hll"
    push $P5004, "namespace"
    push $P5004, "close_sub"
    push $P5004, "pir"
    push $P5004, "collect_sub_pir_into"
    push $P5004, "@!children"
    push $P5004, "$!subid"
    push $P5004, "$!pirflags"
    push $P5004, "$!name"
    push $P5004, "$!hll"
    push $P5004, "@!namespace"
    push $P5004, "@!loadlibs"
    push $P5004, "@!nested_blocks"
    push $P5004, "$!cached_pir"
    push $P5004, "node"
    push $P5004, "$!node"
    push $P5004, "compile_op"
    push $P5004, "compile_pirop"
    push $P5004, "add_core_op"
    push $P5004, "add_hll_op"
    push $P5004, "add_core_pirop_mapping"
    push $P5004, "add_hll_pirop_mapping"
    push $P5004, "set_core_op_inlinability"
    push $P5004, "set_hll_op_inlinability"
    push $P5004, "is_inlinable"
    push $P5004, "set_core_op_result_type"
    push $P5004, "set_hll_op_result_type"
    push $P5004, "attach_result_type"
    push $P5004, "add_hll_box"
    push $P5004, "add_hll_unbox"
    push $P5004, "box"
    push $P5004, "unbox"
    push $P5004, "BUILD"
    push $P5004, "418C4F29E7130D41CFB1A39FD341B4E57625BC63-1361964161.213"
    push $P5004, "src\\stage2\\gen\\NQPHLL.pm"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "panic"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "parse"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "default_backend"
    push $P5004, "post"
    push $P5004, "type_to_register_type"
    push $P5004, "force_return_boxing_for_hll"
    push $P5004, "unique"
    push $P5004, "rxescape"
    push $P5004, "as_post"
    push $P5004, "deserialization_code"
    push $P5004, "compile_all_the_stmts"
    push $P5004, "apply_context"
    push $P5004, "compile_var"
    push $P5004, "as_post_clear_bindval"
    push $P5004, "coerce"
    push $P5004, "infer_type"
    push $P5004, "children"
    push $P5004, "regex_post"
    push $P5004, "post_new"
    push $P5004, "alt"
    push $P5004, "altseq"
    push $P5004, "anchor"
    push $P5004, "dba"
    push $P5004, "cclass"
    push $P5004, "concat"
    push $P5004, "conj"
    push $P5004, "conjseq"
    push $P5004, "enumcharlist"
    push $P5004, "literal"
    push $P5004, "pass"
    push $P5004, "qastnode"
    push $P5004, "quant"
    push $P5004, "scan"
    push $P5004, "subcapture"
    push $P5004, "subrule"
    push $P5004, "uniprop"
    push $P5004, "ws"
    push $P5004, "regex_mark"
    push $P5004, "regex_peek"
    push $P5004, "regex_commit"
    push $P5004, "operations"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!usage"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, "handler_allocator"
    push $P5004, "fresh_p"
    push $P5004, "fresh_s"
    push $P5004, "fresh_i"
    push $P5004, "fresh_n"
    push $P5004, "cur_p"
    push $P5004, "cur_s"
    push $P5004, "cur_i"
    push $P5004, "cur_n"
    push $P5004, "$!cur_p"
    push $P5004, "$!cur_s"
    push $P5004, "$!cur_i"
    push $P5004, "$!cur_n"
    push $P5004, "add_param"
    push $P5004, "add_lexical"
    push $P5004, "add_local"
    push $P5004, "register_lexical"
    push $P5004, "register_local"
    push $P5004, "qast"
    push $P5004, "outer"
    push $P5004, "params"
    push $P5004, "lexicals"
    push $P5004, "locals"
    push $P5004, "lex_reg"
    push $P5004, "local_type"
    push $P5004, "local_type_long"
    push $P5004, "lexical_type"
    push $P5004, "lexical_type_long"
    push $P5004, "reg_type"
    push $P5004, "add_loadlibs"
    push $P5004, "fresh_lex_p"
    push $P5004, "fresh_lex_s"
    push $P5004, "fresh_lex_i"
    push $P5004, "fresh_lex_n"
    push $P5004, "$!qast"
    push $P5004, "$!outer"
    push $P5004, "@!params"
    push $P5004, "@!locals"
    push $P5004, "@!lexicals"
    push $P5004, "%!local_types"
    push $P5004, "%!lexical_types"
    push $P5004, "%!lexical_regs"
    push $P5004, "%!reg_types"
    push $P5004, "$!param_idx"
    push $P5004, "$!cur_lex_p"
    push $P5004, "$!cur_lex_s"
    push $P5004, "$!cur_lex_i"
    push $P5004, "$!cur_lex_n"
    push $P5004, ""
    push $P5004, "!INTERPOLATE"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "5E1A9226ADF1F89B3A6172DD75C456ECBCF40100-1361964149.843"
    push $P5004, "src\\stage2\\gen\\nqp-mo.pm"
    push $P5004, "PIRT::CallResult"
    push $P5004, "get_string"
    push $P5004, "PIRT::Node"
    push $P5004, "PIRT::Sub"
    push $P5004, "nested_blocks"
    push $P5004, "cached_pir"
    push $P5004, "PIRT::Ops"
    push $P5004, "PIRT::Label"
    push $P5004, "QAST::Operations"
    push $P5004, "QAST::Compiler"
    push $P5004, "code"
    push $P5004, "RegAlloc"
    push $P5004, "BlockInfo"
    push $P5004, "8690B5CE9C56656BB436D83B9433E5C60A9D8366-1361964155.22"
    push $P5004, "src\\stage2\\QASTNode.nqp"
    push $P5004, "CallResult"
    push $P5004, "Node"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "CompileTimeValue"
    push $P5004, "SpecialArg"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "Backend"
    push $P5004, "CommandLine"
    push $P5004, "World"
    .const 'Sub' $P5005 = 'cuid_362_1361964166.213' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if2229_end3917 
    die "Repossession conflicts occurred during deserialization"
  if2229_end3917:
    .const "LexInfo" $P5001 = "cuid_144_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    $P5001."set_static_lexpad_value"("GLOBALish", $P5002)
    .const "LexInfo" $P5003 = "cuid_144_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_144_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 0
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_144_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_144_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 1
    $P5001."set_static_lexpad_value"("EXPORT", $P5002)
    .const "LexInfo" $P5003 = "cuid_144_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_1_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_2_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 5
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_145_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 3
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_145_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_145_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 3
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_145_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_3_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 7
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_4_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 8
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_5_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 9
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_6_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 10
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_7_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 11
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_8_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 12
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_9_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 13
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_10_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 14
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_11_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 15
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_146_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 6
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_146_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_146_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 6
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_146_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_12_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 17
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_13_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 18
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_14_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 19
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_15_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 20
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_16_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 21
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_17_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 22
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_18_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 23
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_19_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 24
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_20_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 25
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_21_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 26
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_22_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 27
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_23_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 28
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_24_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 29
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_25_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 30
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_152_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_152_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_152_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 16
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_152_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_26_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 32
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_27_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 33
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_28_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 34
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_29_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 35
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_30_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 36
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_31_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 37
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_157_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_157_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_157_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 31
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_157_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_32_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 39
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_33_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 40
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_34_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 41
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_35_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 42
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_160_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_160_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_160_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 38
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_160_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_36_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 44
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_37_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 45
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_38_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 46
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_39_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 47
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_40_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 48
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_41_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 49
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_42_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 50
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_43_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 51
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_44_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 52
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_45_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 53
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_46_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 54
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_47_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 55
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_48_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 56
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_49_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 57
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_50_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 58
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_51_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 59
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_169_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_169_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_169_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 43
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_169_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_287_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    $P5001."set_static_lexpad_value"("RegAlloc", $P5002)
    .const "LexInfo" $P5003 = "cuid_287_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_52_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 62
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_53_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 63
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_54_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 64
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_55_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 65
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_56_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 66
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_57_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 67
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_58_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 68
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_59_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 69
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_60_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 70
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_61_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 71
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_62_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 72
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_291_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_291_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_291_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 61
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_291_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_287_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    $P5001."set_static_lexpad_value"("BlockInfo", $P5002)
    .const "LexInfo" $P5003 = "cuid_287_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_63_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 74
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_64_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 75
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_65_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 76
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_66_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 77
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_67_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 78
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_68_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 79
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_69_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 80
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_70_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 81
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_71_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 82
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_72_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 83
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_73_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 84
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_74_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 85
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_75_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 86
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_76_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 87
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_77_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 88
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_78_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 89
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_79_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 90
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_80_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 91
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_81_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 92
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_82_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 93
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_83_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 94
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_84_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 95
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_85_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 96
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_86_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 97
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_292_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_292_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_292_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 73
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_292_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const 'Sub' $P5001 = "cuid_87_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 98
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_88_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 99
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_89_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 100
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_90_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 101
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_91_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 102
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_92_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 103
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_93_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 104
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_94_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 105
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_95_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 106
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_96_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 107
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_97_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 108
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_98_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 109
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_99_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 110
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_100_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 111
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_101_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 112
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_102_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 113
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_103_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 114
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_104_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 115
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_105_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 116
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_106_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 117
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_107_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 118
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_108_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 119
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_109_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 120
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_110_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 121
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_111_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 122
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_112_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 123
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_113_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 124
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_114_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 125
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_115_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 126
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_116_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 127
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_117_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 128
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_118_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 129
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_119_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 130
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_120_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 131
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_121_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 132
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_122_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 133
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_123_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 134
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_124_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 135
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_125_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 136
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_126_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 137
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_127_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 138
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_128_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 139
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_129_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 140
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_130_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 141
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_131_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 142
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_132_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 143
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_133_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 144
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_134_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 145
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_135_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 146
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_136_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 147
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_137_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 148
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_138_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 149
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_139_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 150
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_140_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 151
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5001 = "cuid_141_1361964166.213" 
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 152
    set_sub_code_object $P5001, $P5002
    .const "LexInfo" $P5001 = "cuid_287_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 60
    $P5001."set_static_lexpad_value"("$?PACKAGE", $P5002)
    .const "LexInfo" $P5003 = "cuid_287_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .const "LexInfo" $P5001 = "cuid_287_1361964166.213"
    nqp_get_sc_object $P5002, "B2CC3A662F0D849BFA6271B74E05C014EBD873A9-1361964166.238", 60
    $P5001."set_static_lexpad_value"("$?CLASS", $P5002)
    .const "LexInfo" $P5003 = "cuid_287_1361964166.213"
    $P5004 = $P5003."finish_static_lexpad"()
    .return ($P5004) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_362_1361964166.213") :anon :lex :outer("cuid_363_1361964166.213")
.annotate 'file', "src\\stage2\\QAST.nqp"
    new $P5001, 'ResizablePMCArray'
    .const 'Sub' $P5002 = "cuid_1_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1361964166.213" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1361964166.213" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_364_1361964166.213") :load
.annotate 'file', "src\\stage2\\QAST.nqp"
    .const 'Sub' $P5001 = "cuid_144_1361964166.213" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_365_1361964166.213") :main
.annotate 'file', "src\\stage2\\QAST.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_144_1361964166.213" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end