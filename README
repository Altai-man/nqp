=head1 NQP - Not Quite Perl (6)

NQP is Copyright (C) 2009 by Patrick R. Michaud.  See F<LICENSE>
for licensing details.

This is "Not Quite Perl" -- a compiler for quickly generating PIR
routines from Perl6-like code.  The key feature of NQP is that it's
designed to be a very small compiler (as compared with, say, perl6
or Rakudo) and is focused on being a high-level way to create
transformers for Parrot (especially hll compilers).  In addition,
unlike Rakudo, NQP attempts to restrict itself to generating code
that can run in Parrot without the existence of any NQP-specific
runtime libraries.

For details about the current status and how to use what's here,
see F<STATUS>.

Differences from previous version of NQP
----------------------------------------

* Sub declarations are now lexical ("my") by default, use
  "our sub xyz() { ... }" if you want package-scoped subroutines.

* The  PIR q<...>;  construct is gone.  Use Q:PIR or pir::opcode(...)
  instead.

* The mainline code of modules is no longer tagged as ":load :init"
  by default.  Use  INIT { ... }  for any code that you want to be
  run automatically at startup.

* Cuddled else's are no longer valid Perl 6, 'else' requires a
  space after it.
